2024-02-18 18:29:42,096:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-18 18:29:42,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-18 18:29:42,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-18 18:29:42,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-18 18:30:50,329:INFO:PyCaret ClassificationExperiment
2024-02-18 18:30:50,329:INFO:Logging name: clf-default-name
2024-02-18 18:30:50,330:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-18 18:30:50,330:INFO:version 3.2.0
2024-02-18 18:30:50,330:INFO:Initializing setup()
2024-02-18 18:30:50,330:INFO:self.USI: 9266
2024-02-18 18:30:50,330:INFO:self._variable_keys: {'pipeline', '_available_plots', 'log_plots_param', 'memory', 'X_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'html_param', 'exp_name_log', 'exp_id', 'y', 'fix_imbalance', 'gpu_param', 'is_multiclass', 'fold_generator', 'y_train', 'data', 'y_test', 'X_train', '_ml_usecase', 'USI', 'logging_param', 'target_param', 'seed', 'idx', 'n_jobs_param', 'X'}
2024-02-18 18:30:50,330:INFO:Checking environment
2024-02-18 18:30:50,330:INFO:python_version: 3.10.13
2024-02-18 18:30:50,330:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2024-02-18 18:30:50,330:INFO:machine: AMD64
2024-02-18 18:30:50,330:INFO:platform: Windows-10-10.0.22621-SP0
2024-02-18 18:30:50,334:INFO:Memory: svmem(total=16952647680, available=5614604288, percent=66.9, used=11338043392, free=5614604288)
2024-02-18 18:30:50,335:INFO:Physical Core: 4
2024-02-18 18:30:50,335:INFO:Logical Core: 8
2024-02-18 18:30:50,335:INFO:Checking libraries
2024-02-18 18:30:50,335:INFO:System:
2024-02-18 18:30:50,335:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2024-02-18 18:30:50,335:INFO:executable: C:\Users\santh\anaconda3\envs\msds\python.exe
2024-02-18 18:30:50,335:INFO:   machine: Windows-10-10.0.22621-SP0
2024-02-18 18:30:50,335:INFO:PyCaret required dependencies:
2024-02-18 18:30:51,387:INFO:                 pip: 23.3.1
2024-02-18 18:30:51,387:INFO:          setuptools: 68.2.2
2024-02-18 18:30:51,387:INFO:             pycaret: 3.2.0
2024-02-18 18:30:51,387:INFO:             IPython: 8.20.0
2024-02-18 18:30:51,387:INFO:          ipywidgets: 8.0.4
2024-02-18 18:30:51,387:INFO:                tqdm: 4.65.0
2024-02-18 18:30:51,387:INFO:               numpy: 1.25.2
2024-02-18 18:30:51,387:INFO:              pandas: 1.5.3
2024-02-18 18:30:51,387:INFO:              jinja2: 3.1.3
2024-02-18 18:30:51,387:INFO:               scipy: 1.10.1
2024-02-18 18:30:51,387:INFO:              joblib: 1.2.0
2024-02-18 18:30:51,387:INFO:             sklearn: 1.2.2
2024-02-18 18:30:51,387:INFO:                pyod: 1.1.3
2024-02-18 18:30:51,387:INFO:            imblearn: 0.11.0
2024-02-18 18:30:51,387:INFO:   category_encoders: 2.6.3
2024-02-18 18:30:51,387:INFO:            lightgbm: 4.3.0
2024-02-18 18:30:51,387:INFO:               numba: 0.59.0
2024-02-18 18:30:51,387:INFO:            requests: 2.31.0
2024-02-18 18:30:51,387:INFO:          matplotlib: 3.6.0
2024-02-18 18:30:51,388:INFO:          scikitplot: 0.3.7
2024-02-18 18:30:51,388:INFO:         yellowbrick: 1.5
2024-02-18 18:30:51,388:INFO:              plotly: 5.9.0
2024-02-18 18:30:51,388:INFO:    plotly-resampler: Not installed
2024-02-18 18:30:51,388:INFO:             kaleido: 0.2.1
2024-02-18 18:30:51,388:INFO:           schemdraw: 0.15
2024-02-18 18:30:51,388:INFO:         statsmodels: 0.14.0
2024-02-18 18:30:51,388:INFO:              sktime: 0.21.1
2024-02-18 18:30:51,388:INFO:               tbats: 1.1.3
2024-02-18 18:30:51,388:INFO:            pmdarima: 2.0.4
2024-02-18 18:30:51,388:INFO:              psutil: 5.9.0
2024-02-18 18:30:51,388:INFO:          markupsafe: 2.1.3
2024-02-18 18:30:51,388:INFO:             pickle5: Not installed
2024-02-18 18:30:51,388:INFO:         cloudpickle: 2.2.1
2024-02-18 18:30:51,388:INFO:         deprecation: 2.1.0
2024-02-18 18:30:51,388:INFO:              xxhash: 2.0.2
2024-02-18 18:30:51,388:INFO:           wurlitzer: Not installed
2024-02-18 18:30:51,388:INFO:PyCaret optional dependencies:
2024-02-18 18:30:51,410:INFO:                shap: Not installed
2024-02-18 18:30:51,411:INFO:           interpret: Not installed
2024-02-18 18:30:51,411:INFO:                umap: Not installed
2024-02-18 18:30:51,411:INFO:     ydata_profiling: Not installed
2024-02-18 18:30:51,411:INFO:  explainerdashboard: Not installed
2024-02-18 18:30:51,411:INFO:             autoviz: Not installed
2024-02-18 18:30:51,411:INFO:           fairlearn: Not installed
2024-02-18 18:30:51,411:INFO:          deepchecks: Not installed
2024-02-18 18:30:51,411:INFO:             xgboost: Not installed
2024-02-18 18:30:51,411:INFO:            catboost: Not installed
2024-02-18 18:30:51,411:INFO:              kmodes: Not installed
2024-02-18 18:30:51,411:INFO:             mlxtend: Not installed
2024-02-18 18:30:51,411:INFO:       statsforecast: Not installed
2024-02-18 18:30:51,411:INFO:        tune_sklearn: Not installed
2024-02-18 18:30:51,411:INFO:                 ray: Not installed
2024-02-18 18:30:51,411:INFO:            hyperopt: Not installed
2024-02-18 18:30:51,411:INFO:              optuna: Not installed
2024-02-18 18:30:51,412:INFO:               skopt: Not installed
2024-02-18 18:30:51,412:INFO:              mlflow: Not installed
2024-02-18 18:30:51,412:INFO:              gradio: Not installed
2024-02-18 18:30:51,412:INFO:             fastapi: Not installed
2024-02-18 18:30:51,412:INFO:             uvicorn: Not installed
2024-02-18 18:30:51,412:INFO:              m2cgen: Not installed
2024-02-18 18:30:51,412:INFO:           evidently: Not installed
2024-02-18 18:30:51,412:INFO:               fugue: Not installed
2024-02-18 18:30:51,412:INFO:           streamlit: Not installed
2024-02-18 18:30:51,412:INFO:             prophet: Not installed
2024-02-18 18:30:51,412:INFO:None
2024-02-18 18:30:51,412:INFO:Set up data.
2024-02-18 18:30:51,424:INFO:Set up folding strategy.
2024-02-18 18:30:51,425:INFO:Set up train/test split.
2024-02-18 18:30:51,434:INFO:Set up index.
2024-02-18 18:30:51,435:INFO:Assigning column types.
2024-02-18 18:30:51,447:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-18 18:30:51,503:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-18 18:30:51,506:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 18:30:51,541:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:30:51,542:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:30:51,594:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-18 18:30:51,595:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 18:30:51,627:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:30:51,627:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:30:51,627:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-18 18:30:51,676:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 18:30:51,706:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:30:51,707:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:30:51,760:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 18:30:51,798:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:30:51,799:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:30:51,799:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-18 18:30:51,875:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:30:51,875:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:30:51,956:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:30:51,956:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:30:51,959:INFO:Preparing preprocessing pipeline...
2024-02-18 18:30:51,961:INFO:Set up simple imputation.
2024-02-18 18:30:51,966:INFO:Set up encoding of categorical features.
2024-02-18 18:30:52,034:INFO:Finished creating preprocessing pipeline.
2024-02-18 18:30:52,044:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\santh\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              m...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-02-18 18:30:52,044:INFO:Creating final display dataframe.
2024-02-18 18:30:52,289:INFO:Setup _display_container:                     Description             Value
0                    Session id              1789
1                        Target             Churn
2                   Target type            Binary
3           Original data shape         (7043, 9)
4        Transformed data shape         (7043, 9)
5   Transformed train set shape         (4930, 9)
6    Transformed test set shape         (2113, 9)
7              Numeric features                 7
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator   StratifiedKFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  clf-default-name
21                          USI              9266
2024-02-18 18:30:52,372:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:30:52,372:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:30:52,457:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:30:52,458:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:30:52,458:INFO:setup() successfully completed in 2.13s...............
2024-02-18 18:40:02,841:INFO:Initializing compare_models()
2024-02-18 18:40:02,842:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A8EFB05E0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022A8EFB05E0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-02-18 18:40:02,842:INFO:Checking exceptions
2024-02-18 18:40:02,849:INFO:Preparing display monitor
2024-02-18 18:40:02,896:INFO:Initializing Logistic Regression
2024-02-18 18:40:02,896:INFO:Total runtime is 0.0 minutes
2024-02-18 18:40:02,902:INFO:SubProcess create_model() called ==================================
2024-02-18 18:40:02,904:INFO:Initializing create_model()
2024-02-18 18:40:02,904:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A8EFB05E0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA50A9540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:40:02,905:INFO:Checking exceptions
2024-02-18 18:40:02,905:INFO:Importing libraries
2024-02-18 18:40:02,905:INFO:Copying training dataset
2024-02-18 18:40:02,916:INFO:Defining folds
2024-02-18 18:40:02,916:INFO:Declaring metric variables
2024-02-18 18:40:02,921:INFO:Importing untrained model
2024-02-18 18:40:02,929:INFO:Logistic Regression Imported successfully
2024-02-18 18:40:02,941:INFO:Starting cross validation
2024-02-18 18:40:02,943:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:40:16,568:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:16,594:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-02-18 18:40:16,637:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-02-18 18:40:16,656:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-02-18 18:40:16,694:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:16,729:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:16,861:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-02-18 18:40:17,298:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:17,444:INFO:Calculating mean and std
2024-02-18 18:40:17,449:INFO:Creating metrics dataframe
2024-02-18 18:40:17,457:INFO:Uploading results into container
2024-02-18 18:40:17,459:INFO:Uploading model into container now
2024-02-18 18:40:17,460:INFO:_master_model_container: 1
2024-02-18 18:40:17,461:INFO:_display_container: 2
2024-02-18 18:40:17,461:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1789, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-18 18:40:17,463:INFO:create_model() successfully completed......................................
2024-02-18 18:40:17,605:INFO:SubProcess create_model() end ==================================
2024-02-18 18:40:17,605:INFO:Creating metrics dataframe
2024-02-18 18:40:17,628:INFO:Initializing K Neighbors Classifier
2024-02-18 18:40:17,628:INFO:Total runtime is 0.24554126660029094 minutes
2024-02-18 18:40:17,635:INFO:SubProcess create_model() called ==================================
2024-02-18 18:40:17,637:INFO:Initializing create_model()
2024-02-18 18:40:17,637:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A8EFB05E0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA50A9540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:40:17,637:INFO:Checking exceptions
2024-02-18 18:40:17,637:INFO:Importing libraries
2024-02-18 18:40:17,638:INFO:Copying training dataset
2024-02-18 18:40:17,645:INFO:Defining folds
2024-02-18 18:40:17,646:INFO:Declaring metric variables
2024-02-18 18:40:17,653:INFO:Importing untrained model
2024-02-18 18:40:17,660:INFO:K Neighbors Classifier Imported successfully
2024-02-18 18:40:17,672:INFO:Starting cross validation
2024-02-18 18:40:17,674:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:40:18,206:INFO:Calculating mean and std
2024-02-18 18:40:18,210:INFO:Creating metrics dataframe
2024-02-18 18:40:18,219:INFO:Uploading results into container
2024-02-18 18:40:18,220:INFO:Uploading model into container now
2024-02-18 18:40:18,221:INFO:_master_model_container: 2
2024-02-18 18:40:18,222:INFO:_display_container: 2
2024-02-18 18:40:18,224:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-18 18:40:18,224:INFO:create_model() successfully completed......................................
2024-02-18 18:40:18,349:INFO:SubProcess create_model() end ==================================
2024-02-18 18:40:18,349:INFO:Creating metrics dataframe
2024-02-18 18:40:18,373:INFO:Initializing Naive Bayes
2024-02-18 18:40:18,373:INFO:Total runtime is 0.25794614950815836 minutes
2024-02-18 18:40:18,380:INFO:SubProcess create_model() called ==================================
2024-02-18 18:40:18,381:INFO:Initializing create_model()
2024-02-18 18:40:18,381:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A8EFB05E0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA50A9540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:40:18,381:INFO:Checking exceptions
2024-02-18 18:40:18,382:INFO:Importing libraries
2024-02-18 18:40:18,382:INFO:Copying training dataset
2024-02-18 18:40:18,392:INFO:Defining folds
2024-02-18 18:40:18,392:INFO:Declaring metric variables
2024-02-18 18:40:18,396:INFO:Importing untrained model
2024-02-18 18:40:18,401:INFO:Naive Bayes Imported successfully
2024-02-18 18:40:18,410:INFO:Starting cross validation
2024-02-18 18:40:18,411:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:40:18,737:INFO:Calculating mean and std
2024-02-18 18:40:18,739:INFO:Creating metrics dataframe
2024-02-18 18:40:18,747:INFO:Uploading results into container
2024-02-18 18:40:18,748:INFO:Uploading model into container now
2024-02-18 18:40:18,749:INFO:_master_model_container: 3
2024-02-18 18:40:18,749:INFO:_display_container: 2
2024-02-18 18:40:18,750:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-02-18 18:40:18,750:INFO:create_model() successfully completed......................................
2024-02-18 18:40:18,871:INFO:SubProcess create_model() end ==================================
2024-02-18 18:40:18,871:INFO:Creating metrics dataframe
2024-02-18 18:40:18,893:INFO:Initializing Decision Tree Classifier
2024-02-18 18:40:18,894:INFO:Total runtime is 0.26664425134658815 minutes
2024-02-18 18:40:18,900:INFO:SubProcess create_model() called ==================================
2024-02-18 18:40:18,901:INFO:Initializing create_model()
2024-02-18 18:40:18,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A8EFB05E0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA50A9540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:40:18,901:INFO:Checking exceptions
2024-02-18 18:40:18,901:INFO:Importing libraries
2024-02-18 18:40:18,903:INFO:Copying training dataset
2024-02-18 18:40:18,912:INFO:Defining folds
2024-02-18 18:40:18,912:INFO:Declaring metric variables
2024-02-18 18:40:18,918:INFO:Importing untrained model
2024-02-18 18:40:18,926:INFO:Decision Tree Classifier Imported successfully
2024-02-18 18:40:18,937:INFO:Starting cross validation
2024-02-18 18:40:18,941:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:40:19,094:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:19,098:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:19,098:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:19,101:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:19,109:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:19,124:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:19,128:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:19,137:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:19,268:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:19,277:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:19,289:INFO:Calculating mean and std
2024-02-18 18:40:19,290:INFO:Creating metrics dataframe
2024-02-18 18:40:19,297:INFO:Uploading results into container
2024-02-18 18:40:19,299:INFO:Uploading model into container now
2024-02-18 18:40:19,300:INFO:_master_model_container: 4
2024-02-18 18:40:19,300:INFO:_display_container: 2
2024-02-18 18:40:19,301:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1789, splitter='best')
2024-02-18 18:40:19,301:INFO:create_model() successfully completed......................................
2024-02-18 18:40:19,417:INFO:SubProcess create_model() end ==================================
2024-02-18 18:40:19,417:INFO:Creating metrics dataframe
2024-02-18 18:40:19,434:INFO:Initializing SVM - Linear Kernel
2024-02-18 18:40:19,434:INFO:Total runtime is 0.275635290145874 minutes
2024-02-18 18:40:19,441:INFO:SubProcess create_model() called ==================================
2024-02-18 18:40:19,442:INFO:Initializing create_model()
2024-02-18 18:40:19,442:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A8EFB05E0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA50A9540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:40:19,442:INFO:Checking exceptions
2024-02-18 18:40:19,442:INFO:Importing libraries
2024-02-18 18:40:19,442:INFO:Copying training dataset
2024-02-18 18:40:19,448:INFO:Defining folds
2024-02-18 18:40:19,448:INFO:Declaring metric variables
2024-02-18 18:40:19,455:INFO:Importing untrained model
2024-02-18 18:40:19,461:INFO:SVM - Linear Kernel Imported successfully
2024-02-18 18:40:19,476:INFO:Starting cross validation
2024-02-18 18:40:19,479:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:40:19,660:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:40:19,661:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:40:19,678:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:40:19,682:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:40:19,688:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:40:19,701:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:40:19,713:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:40:19,724:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:40:19,874:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:40:19,882:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:40:19,912:INFO:Calculating mean and std
2024-02-18 18:40:19,914:INFO:Creating metrics dataframe
2024-02-18 18:40:19,928:INFO:Uploading results into container
2024-02-18 18:40:19,930:INFO:Uploading model into container now
2024-02-18 18:40:19,931:INFO:_master_model_container: 5
2024-02-18 18:40:19,931:INFO:_display_container: 2
2024-02-18 18:40:19,932:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1789, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-02-18 18:40:19,932:INFO:create_model() successfully completed......................................
2024-02-18 18:40:20,060:INFO:SubProcess create_model() end ==================================
2024-02-18 18:40:20,060:INFO:Creating metrics dataframe
2024-02-18 18:40:20,079:INFO:Initializing Ridge Classifier
2024-02-18 18:40:20,080:INFO:Total runtime is 0.28640323877334595 minutes
2024-02-18 18:40:20,086:INFO:SubProcess create_model() called ==================================
2024-02-18 18:40:20,087:INFO:Initializing create_model()
2024-02-18 18:40:20,087:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A8EFB05E0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA50A9540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:40:20,088:INFO:Checking exceptions
2024-02-18 18:40:20,088:INFO:Importing libraries
2024-02-18 18:40:20,088:INFO:Copying training dataset
2024-02-18 18:40:20,096:INFO:Defining folds
2024-02-18 18:40:20,096:INFO:Declaring metric variables
2024-02-18 18:40:20,103:INFO:Importing untrained model
2024-02-18 18:40:20,111:INFO:Ridge Classifier Imported successfully
2024-02-18 18:40:20,125:INFO:Starting cross validation
2024-02-18 18:40:20,126:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:40:20,291:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:40:20,291:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:40:20,293:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:40:20,297:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:40:20,297:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:20,297:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:20,298:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:20,300:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:20,302:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:40:20,302:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:40:20,305:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:20,308:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:20,308:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:20,310:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:40:20,317:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:20,428:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:40:20,435:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:20,442:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:40:20,450:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:20,461:INFO:Calculating mean and std
2024-02-18 18:40:20,464:INFO:Creating metrics dataframe
2024-02-18 18:40:20,472:INFO:Uploading results into container
2024-02-18 18:40:20,473:INFO:Uploading model into container now
2024-02-18 18:40:20,474:INFO:_master_model_container: 6
2024-02-18 18:40:20,475:INFO:_display_container: 2
2024-02-18 18:40:20,475:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1789, solver='auto',
                tol=0.0001)
2024-02-18 18:40:20,476:INFO:create_model() successfully completed......................................
2024-02-18 18:40:20,565:INFO:SubProcess create_model() end ==================================
2024-02-18 18:40:20,565:INFO:Creating metrics dataframe
2024-02-18 18:40:20,586:INFO:Initializing Random Forest Classifier
2024-02-18 18:40:20,586:INFO:Total runtime is 0.29483987887700397 minutes
2024-02-18 18:40:20,591:INFO:SubProcess create_model() called ==================================
2024-02-18 18:40:20,591:INFO:Initializing create_model()
2024-02-18 18:40:20,592:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A8EFB05E0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA50A9540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:40:20,592:INFO:Checking exceptions
2024-02-18 18:40:20,592:INFO:Importing libraries
2024-02-18 18:40:20,592:INFO:Copying training dataset
2024-02-18 18:40:20,600:INFO:Defining folds
2024-02-18 18:40:20,600:INFO:Declaring metric variables
2024-02-18 18:40:20,606:INFO:Importing untrained model
2024-02-18 18:40:20,612:INFO:Random Forest Classifier Imported successfully
2024-02-18 18:40:20,623:INFO:Starting cross validation
2024-02-18 18:40:20,625:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:40:21,365:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:21,412:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:21,413:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:21,463:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:21,553:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:21,694:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:21,699:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:21,725:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:22,206:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:22,208:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:22,215:INFO:Calculating mean and std
2024-02-18 18:40:22,218:INFO:Creating metrics dataframe
2024-02-18 18:40:22,224:INFO:Uploading results into container
2024-02-18 18:40:22,225:INFO:Uploading model into container now
2024-02-18 18:40:22,226:INFO:_master_model_container: 7
2024-02-18 18:40:22,226:INFO:_display_container: 2
2024-02-18 18:40:22,227:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1789, verbose=0, warm_start=False)
2024-02-18 18:40:22,228:INFO:create_model() successfully completed......................................
2024-02-18 18:40:22,371:INFO:SubProcess create_model() end ==================================
2024-02-18 18:40:22,372:INFO:Creating metrics dataframe
2024-02-18 18:40:22,400:INFO:Initializing Quadratic Discriminant Analysis
2024-02-18 18:40:22,400:INFO:Total runtime is 0.32506235043207804 minutes
2024-02-18 18:40:22,405:INFO:SubProcess create_model() called ==================================
2024-02-18 18:40:22,406:INFO:Initializing create_model()
2024-02-18 18:40:22,406:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A8EFB05E0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA50A9540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:40:22,406:INFO:Checking exceptions
2024-02-18 18:40:22,406:INFO:Importing libraries
2024-02-18 18:40:22,407:INFO:Copying training dataset
2024-02-18 18:40:22,415:INFO:Defining folds
2024-02-18 18:40:22,415:INFO:Declaring metric variables
2024-02-18 18:40:22,421:INFO:Importing untrained model
2024-02-18 18:40:22,427:INFO:Quadratic Discriminant Analysis Imported successfully
2024-02-18 18:40:22,439:INFO:Starting cross validation
2024-02-18 18:40:22,441:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:40:22,554:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-18 18:40:22,554:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-18 18:40:22,554:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-18 18:40:22,562:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-18 18:40:22,568:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-18 18:40:22,573:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-18 18:40:22,575:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-18 18:40:22,597:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-18 18:40:22,599:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:22,604:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:22,610:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:22,611:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:22,616:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:22,624:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:22,634:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:22,653:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:22,694:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-18 18:40:22,694:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-18 18:40:22,762:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:22,769:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:22,785:INFO:Calculating mean and std
2024-02-18 18:40:22,786:INFO:Creating metrics dataframe
2024-02-18 18:40:22,792:INFO:Uploading results into container
2024-02-18 18:40:22,794:INFO:Uploading model into container now
2024-02-18 18:40:22,795:INFO:_master_model_container: 8
2024-02-18 18:40:22,795:INFO:_display_container: 2
2024-02-18 18:40:22,796:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-02-18 18:40:22,796:INFO:create_model() successfully completed......................................
2024-02-18 18:40:22,930:INFO:SubProcess create_model() end ==================================
2024-02-18 18:40:22,930:INFO:Creating metrics dataframe
2024-02-18 18:40:22,950:INFO:Initializing Ada Boost Classifier
2024-02-18 18:40:22,950:INFO:Total runtime is 0.33424270153045654 minutes
2024-02-18 18:40:22,960:INFO:SubProcess create_model() called ==================================
2024-02-18 18:40:22,961:INFO:Initializing create_model()
2024-02-18 18:40:22,961:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A8EFB05E0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA50A9540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:40:22,961:INFO:Checking exceptions
2024-02-18 18:40:22,961:INFO:Importing libraries
2024-02-18 18:40:22,961:INFO:Copying training dataset
2024-02-18 18:40:22,984:INFO:Defining folds
2024-02-18 18:40:22,984:INFO:Declaring metric variables
2024-02-18 18:40:22,994:INFO:Importing untrained model
2024-02-18 18:40:23,001:INFO:Ada Boost Classifier Imported successfully
2024-02-18 18:40:23,013:INFO:Starting cross validation
2024-02-18 18:40:23,017:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:40:23,214:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:23,215:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:23,217:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:23,238:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:23,239:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:23,259:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:23,261:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:23,412:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:23,421:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:23,436:INFO:Calculating mean and std
2024-02-18 18:40:23,438:INFO:Creating metrics dataframe
2024-02-18 18:40:23,447:INFO:Uploading results into container
2024-02-18 18:40:23,448:INFO:Uploading model into container now
2024-02-18 18:40:23,449:INFO:_master_model_container: 9
2024-02-18 18:40:23,449:INFO:_display_container: 2
2024-02-18 18:40:23,450:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=1789)
2024-02-18 18:40:23,450:INFO:create_model() successfully completed......................................
2024-02-18 18:40:23,611:INFO:SubProcess create_model() end ==================================
2024-02-18 18:40:23,611:INFO:Creating metrics dataframe
2024-02-18 18:40:23,639:INFO:Initializing Gradient Boosting Classifier
2024-02-18 18:40:23,640:INFO:Total runtime is 0.3457356293996175 minutes
2024-02-18 18:40:23,647:INFO:SubProcess create_model() called ==================================
2024-02-18 18:40:23,648:INFO:Initializing create_model()
2024-02-18 18:40:23,648:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A8EFB05E0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA50A9540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:40:23,649:INFO:Checking exceptions
2024-02-18 18:40:23,649:INFO:Importing libraries
2024-02-18 18:40:23,649:INFO:Copying training dataset
2024-02-18 18:40:23,661:INFO:Defining folds
2024-02-18 18:40:23,662:INFO:Declaring metric variables
2024-02-18 18:40:23,670:INFO:Importing untrained model
2024-02-18 18:40:23,675:INFO:Gradient Boosting Classifier Imported successfully
2024-02-18 18:40:23,687:INFO:Starting cross validation
2024-02-18 18:40:23,688:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:40:24,534:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:24,543:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:24,545:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:24,625:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:24,629:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:24,634:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:24,655:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:24,665:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:25,627:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:25,644:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:25,653:INFO:Calculating mean and std
2024-02-18 18:40:25,657:INFO:Creating metrics dataframe
2024-02-18 18:40:25,668:INFO:Uploading results into container
2024-02-18 18:40:25,670:INFO:Uploading model into container now
2024-02-18 18:40:25,672:INFO:_master_model_container: 10
2024-02-18 18:40:25,672:INFO:_display_container: 2
2024-02-18 18:40:25,675:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1789, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-18 18:40:25,676:INFO:create_model() successfully completed......................................
2024-02-18 18:40:25,817:INFO:SubProcess create_model() end ==================================
2024-02-18 18:40:25,818:INFO:Creating metrics dataframe
2024-02-18 18:40:25,854:INFO:Initializing Linear Discriminant Analysis
2024-02-18 18:40:25,854:INFO:Total runtime is 0.3826302131017049 minutes
2024-02-18 18:40:25,861:INFO:SubProcess create_model() called ==================================
2024-02-18 18:40:25,862:INFO:Initializing create_model()
2024-02-18 18:40:25,862:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A8EFB05E0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA50A9540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:40:25,863:INFO:Checking exceptions
2024-02-18 18:40:25,863:INFO:Importing libraries
2024-02-18 18:40:25,864:INFO:Copying training dataset
2024-02-18 18:40:25,871:INFO:Defining folds
2024-02-18 18:40:25,872:INFO:Declaring metric variables
2024-02-18 18:40:25,878:INFO:Importing untrained model
2024-02-18 18:40:25,886:INFO:Linear Discriminant Analysis Imported successfully
2024-02-18 18:40:25,902:INFO:Starting cross validation
2024-02-18 18:40:25,906:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:40:26,107:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:26,113:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:26,123:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:26,128:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:26,146:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:26,149:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:26,154:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:26,192:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:26,289:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:26,341:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:26,356:INFO:Calculating mean and std
2024-02-18 18:40:26,358:INFO:Creating metrics dataframe
2024-02-18 18:40:26,362:INFO:Uploading results into container
2024-02-18 18:40:26,363:INFO:Uploading model into container now
2024-02-18 18:40:26,364:INFO:_master_model_container: 11
2024-02-18 18:40:26,364:INFO:_display_container: 2
2024-02-18 18:40:26,365:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-02-18 18:40:26,365:INFO:create_model() successfully completed......................................
2024-02-18 18:40:26,484:INFO:SubProcess create_model() end ==================================
2024-02-18 18:40:26,484:INFO:Creating metrics dataframe
2024-02-18 18:40:26,513:INFO:Initializing Extra Trees Classifier
2024-02-18 18:40:26,513:INFO:Total runtime is 0.3936185757319133 minutes
2024-02-18 18:40:26,520:INFO:SubProcess create_model() called ==================================
2024-02-18 18:40:26,520:INFO:Initializing create_model()
2024-02-18 18:40:26,520:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A8EFB05E0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA50A9540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:40:26,520:INFO:Checking exceptions
2024-02-18 18:40:26,521:INFO:Importing libraries
2024-02-18 18:40:26,521:INFO:Copying training dataset
2024-02-18 18:40:26,529:INFO:Defining folds
2024-02-18 18:40:26,529:INFO:Declaring metric variables
2024-02-18 18:40:26,534:INFO:Importing untrained model
2024-02-18 18:40:26,545:INFO:Extra Trees Classifier Imported successfully
2024-02-18 18:40:26,557:INFO:Starting cross validation
2024-02-18 18:40:26,561:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:40:27,360:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:27,366:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:27,381:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:27,426:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:27,431:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:27,502:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:27,549:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:27,594:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:28,045:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:28,052:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:28,069:INFO:Calculating mean and std
2024-02-18 18:40:28,073:INFO:Creating metrics dataframe
2024-02-18 18:40:28,080:INFO:Uploading results into container
2024-02-18 18:40:28,080:INFO:Uploading model into container now
2024-02-18 18:40:28,081:INFO:_master_model_container: 12
2024-02-18 18:40:28,081:INFO:_display_container: 2
2024-02-18 18:40:28,081:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1789, verbose=0, warm_start=False)
2024-02-18 18:40:28,081:INFO:create_model() successfully completed......................................
2024-02-18 18:40:28,205:INFO:SubProcess create_model() end ==================================
2024-02-18 18:40:28,205:INFO:Creating metrics dataframe
2024-02-18 18:40:28,239:INFO:Initializing Light Gradient Boosting Machine
2024-02-18 18:40:28,239:INFO:Total runtime is 0.4223901192347209 minutes
2024-02-18 18:40:28,246:INFO:SubProcess create_model() called ==================================
2024-02-18 18:40:28,246:INFO:Initializing create_model()
2024-02-18 18:40:28,247:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A8EFB05E0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA50A9540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:40:28,247:INFO:Checking exceptions
2024-02-18 18:40:28,247:INFO:Importing libraries
2024-02-18 18:40:28,247:INFO:Copying training dataset
2024-02-18 18:40:28,257:INFO:Defining folds
2024-02-18 18:40:28,258:INFO:Declaring metric variables
2024-02-18 18:40:28,266:INFO:Importing untrained model
2024-02-18 18:40:28,271:INFO:Light Gradient Boosting Machine Imported successfully
2024-02-18 18:40:28,287:INFO:Starting cross validation
2024-02-18 18:40:28,288:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:40:28,660:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:28,665:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:28,665:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:28,666:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:28,739:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:28,744:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:28,814:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:28,827:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:28,936:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:28,943:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:28,952:INFO:Calculating mean and std
2024-02-18 18:40:28,956:INFO:Creating metrics dataframe
2024-02-18 18:40:28,963:INFO:Uploading results into container
2024-02-18 18:40:28,964:INFO:Uploading model into container now
2024-02-18 18:40:28,965:INFO:_master_model_container: 13
2024-02-18 18:40:28,965:INFO:_display_container: 2
2024-02-18 18:40:28,966:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1789, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-02-18 18:40:28,966:INFO:create_model() successfully completed......................................
2024-02-18 18:40:29,096:INFO:SubProcess create_model() end ==================================
2024-02-18 18:40:29,097:INFO:Creating metrics dataframe
2024-02-18 18:40:29,128:INFO:Initializing Dummy Classifier
2024-02-18 18:40:29,128:INFO:Total runtime is 0.4372048417727153 minutes
2024-02-18 18:40:29,135:INFO:SubProcess create_model() called ==================================
2024-02-18 18:40:29,136:INFO:Initializing create_model()
2024-02-18 18:40:29,136:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A8EFB05E0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA50A9540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:40:29,136:INFO:Checking exceptions
2024-02-18 18:40:29,136:INFO:Importing libraries
2024-02-18 18:40:29,136:INFO:Copying training dataset
2024-02-18 18:40:29,145:INFO:Defining folds
2024-02-18 18:40:29,146:INFO:Declaring metric variables
2024-02-18 18:40:29,155:INFO:Importing untrained model
2024-02-18 18:40:29,165:INFO:Dummy Classifier Imported successfully
2024-02-18 18:40:29,181:INFO:Starting cross validation
2024-02-18 18:40:29,185:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:40:29,352:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:29,357:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:29,368:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:29,368:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:29,371:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:29,374:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:29,374:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:29,400:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:29,514:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:29,522:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:40:29,537:INFO:Calculating mean and std
2024-02-18 18:40:29,541:INFO:Creating metrics dataframe
2024-02-18 18:40:29,549:INFO:Uploading results into container
2024-02-18 18:40:29,551:INFO:Uploading model into container now
2024-02-18 18:40:29,552:INFO:_master_model_container: 14
2024-02-18 18:40:29,552:INFO:_display_container: 2
2024-02-18 18:40:29,553:INFO:DummyClassifier(constant=None, random_state=1789, strategy='prior')
2024-02-18 18:40:29,553:INFO:create_model() successfully completed......................................
2024-02-18 18:40:29,688:INFO:SubProcess create_model() end ==================================
2024-02-18 18:40:29,689:INFO:Creating metrics dataframe
2024-02-18 18:40:29,752:INFO:Initializing create_model()
2024-02-18 18:40:29,753:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A8EFB05E0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1789, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:40:29,753:INFO:Checking exceptions
2024-02-18 18:40:29,756:INFO:Importing libraries
2024-02-18 18:40:29,756:INFO:Copying training dataset
2024-02-18 18:40:29,766:INFO:Defining folds
2024-02-18 18:40:29,766:INFO:Declaring metric variables
2024-02-18 18:40:29,766:INFO:Importing untrained model
2024-02-18 18:40:29,766:INFO:Declaring custom model
2024-02-18 18:40:29,768:INFO:SVM - Linear Kernel Imported successfully
2024-02-18 18:40:29,769:INFO:Cross validation set to False
2024-02-18 18:40:29,769:INFO:Fitting Model
2024-02-18 18:40:29,887:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1789, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-02-18 18:40:29,887:INFO:create_model() successfully completed......................................
2024-02-18 18:40:30,052:INFO:_master_model_container: 14
2024-02-18 18:40:30,052:INFO:_display_container: 2
2024-02-18 18:40:30,054:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1789, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-02-18 18:40:30,054:INFO:compare_models() successfully completed......................................
2024-02-18 18:42:31,463:INFO:PyCaret ClassificationExperiment
2024-02-18 18:42:31,463:INFO:Logging name: clf-default-name
2024-02-18 18:42:31,463:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-18 18:42:31,463:INFO:version 3.2.0
2024-02-18 18:42:31,463:INFO:Initializing setup()
2024-02-18 18:42:31,463:INFO:self.USI: 228b
2024-02-18 18:42:31,463:INFO:self._variable_keys: {'pipeline', '_available_plots', 'log_plots_param', 'memory', 'X_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'html_param', 'exp_name_log', 'exp_id', 'y', 'fix_imbalance', 'gpu_param', 'is_multiclass', 'fold_generator', 'y_train', 'data', 'y_test', 'X_train', '_ml_usecase', 'USI', 'logging_param', 'target_param', 'seed', 'idx', 'n_jobs_param', 'X'}
2024-02-18 18:42:31,463:INFO:Checking environment
2024-02-18 18:42:31,463:INFO:python_version: 3.10.13
2024-02-18 18:42:31,463:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2024-02-18 18:42:31,464:INFO:machine: AMD64
2024-02-18 18:42:31,464:INFO:platform: Windows-10-10.0.22621-SP0
2024-02-18 18:42:31,467:INFO:Memory: svmem(total=16952647680, available=4532961280, percent=73.3, used=12419686400, free=4532961280)
2024-02-18 18:42:31,467:INFO:Physical Core: 4
2024-02-18 18:42:31,467:INFO:Logical Core: 8
2024-02-18 18:42:31,468:INFO:Checking libraries
2024-02-18 18:42:31,468:INFO:System:
2024-02-18 18:42:31,468:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2024-02-18 18:42:31,468:INFO:executable: C:\Users\santh\anaconda3\envs\msds\python.exe
2024-02-18 18:42:31,468:INFO:   machine: Windows-10-10.0.22621-SP0
2024-02-18 18:42:31,468:INFO:PyCaret required dependencies:
2024-02-18 18:42:31,468:INFO:                 pip: 23.3.1
2024-02-18 18:42:31,468:INFO:          setuptools: 68.2.2
2024-02-18 18:42:31,468:INFO:             pycaret: 3.2.0
2024-02-18 18:42:31,468:INFO:             IPython: 8.20.0
2024-02-18 18:42:31,468:INFO:          ipywidgets: 8.0.4
2024-02-18 18:42:31,469:INFO:                tqdm: 4.65.0
2024-02-18 18:42:31,469:INFO:               numpy: 1.25.2
2024-02-18 18:42:31,469:INFO:              pandas: 1.5.3
2024-02-18 18:42:31,469:INFO:              jinja2: 3.1.3
2024-02-18 18:42:31,469:INFO:               scipy: 1.10.1
2024-02-18 18:42:31,469:INFO:              joblib: 1.2.0
2024-02-18 18:42:31,469:INFO:             sklearn: 1.2.2
2024-02-18 18:42:31,469:INFO:                pyod: 1.1.3
2024-02-18 18:42:31,469:INFO:            imblearn: 0.11.0
2024-02-18 18:42:31,469:INFO:   category_encoders: 2.6.3
2024-02-18 18:42:31,469:INFO:            lightgbm: 4.3.0
2024-02-18 18:42:31,469:INFO:               numba: 0.59.0
2024-02-18 18:42:31,469:INFO:            requests: 2.31.0
2024-02-18 18:42:31,469:INFO:          matplotlib: 3.6.0
2024-02-18 18:42:31,469:INFO:          scikitplot: 0.3.7
2024-02-18 18:42:31,469:INFO:         yellowbrick: 1.5
2024-02-18 18:42:31,469:INFO:              plotly: 5.9.0
2024-02-18 18:42:31,470:INFO:    plotly-resampler: Not installed
2024-02-18 18:42:31,470:INFO:             kaleido: 0.2.1
2024-02-18 18:42:31,470:INFO:           schemdraw: 0.15
2024-02-18 18:42:31,470:INFO:         statsmodels: 0.14.0
2024-02-18 18:42:31,470:INFO:              sktime: 0.21.1
2024-02-18 18:42:31,470:INFO:               tbats: 1.1.3
2024-02-18 18:42:31,470:INFO:            pmdarima: 2.0.4
2024-02-18 18:42:31,470:INFO:              psutil: 5.9.0
2024-02-18 18:42:31,470:INFO:          markupsafe: 2.1.3
2024-02-18 18:42:31,470:INFO:             pickle5: Not installed
2024-02-18 18:42:31,470:INFO:         cloudpickle: 2.2.1
2024-02-18 18:42:31,470:INFO:         deprecation: 2.1.0
2024-02-18 18:42:31,470:INFO:              xxhash: 2.0.2
2024-02-18 18:42:31,470:INFO:           wurlitzer: Not installed
2024-02-18 18:42:31,470:INFO:PyCaret optional dependencies:
2024-02-18 18:42:31,470:INFO:                shap: Not installed
2024-02-18 18:42:31,471:INFO:           interpret: Not installed
2024-02-18 18:42:31,471:INFO:                umap: Not installed
2024-02-18 18:42:31,471:INFO:     ydata_profiling: Not installed
2024-02-18 18:42:31,471:INFO:  explainerdashboard: Not installed
2024-02-18 18:42:31,471:INFO:             autoviz: Not installed
2024-02-18 18:42:31,471:INFO:           fairlearn: Not installed
2024-02-18 18:42:31,471:INFO:          deepchecks: Not installed
2024-02-18 18:42:31,471:INFO:             xgboost: Not installed
2024-02-18 18:42:31,471:INFO:            catboost: Not installed
2024-02-18 18:42:31,471:INFO:              kmodes: Not installed
2024-02-18 18:42:31,471:INFO:             mlxtend: Not installed
2024-02-18 18:42:31,471:INFO:       statsforecast: Not installed
2024-02-18 18:42:31,471:INFO:        tune_sklearn: Not installed
2024-02-18 18:42:31,471:INFO:                 ray: Not installed
2024-02-18 18:42:31,471:INFO:            hyperopt: Not installed
2024-02-18 18:42:31,471:INFO:              optuna: Not installed
2024-02-18 18:42:31,472:INFO:               skopt: Not installed
2024-02-18 18:42:31,472:INFO:              mlflow: Not installed
2024-02-18 18:42:31,472:INFO:              gradio: Not installed
2024-02-18 18:42:31,472:INFO:             fastapi: Not installed
2024-02-18 18:42:31,472:INFO:             uvicorn: Not installed
2024-02-18 18:42:31,472:INFO:              m2cgen: Not installed
2024-02-18 18:42:31,472:INFO:           evidently: Not installed
2024-02-18 18:42:31,472:INFO:               fugue: Not installed
2024-02-18 18:42:31,472:INFO:           streamlit: Not installed
2024-02-18 18:42:31,472:INFO:             prophet: Not installed
2024-02-18 18:42:31,472:INFO:None
2024-02-18 18:42:31,472:INFO:Set up data.
2024-02-18 18:42:31,484:INFO:Set up folding strategy.
2024-02-18 18:42:31,485:INFO:Set up train/test split.
2024-02-18 18:42:31,491:INFO:Set up index.
2024-02-18 18:42:31,491:INFO:Assigning column types.
2024-02-18 18:42:31,495:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-18 18:42:31,559:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-18 18:42:31,560:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 18:42:31,595:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:42:31,595:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:42:31,652:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-18 18:42:31,653:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 18:42:31,694:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:42:31,695:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:42:31,696:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-18 18:42:31,759:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 18:42:31,792:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:42:31,792:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:42:31,849:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 18:42:31,886:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:42:31,887:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:42:31,887:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-18 18:42:31,978:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:42:31,978:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:42:32,070:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:42:32,071:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:42:32,072:INFO:Preparing preprocessing pipeline...
2024-02-18 18:42:32,074:INFO:Set up simple imputation.
2024-02-18 18:42:32,125:INFO:Finished creating preprocessing pipeline.
2024-02-18 18:42:32,130:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\santh\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-18 18:42:32,130:INFO:Creating final display dataframe.
2024-02-18 18:42:32,308:INFO:Setup _display_container:                     Description             Value
0                    Session id              7772
1                        Target             Churn
2                   Target type            Binary
3           Original data shape         (7043, 8)
4        Transformed data shape         (7043, 8)
5   Transformed train set shape         (4930, 8)
6    Transformed test set shape         (2113, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              228b
2024-02-18 18:42:32,463:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:42:32,463:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:42:32,555:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:42:32,556:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:42:32,556:INFO:setup() successfully completed in 1.1s...............
2024-02-18 18:42:47,412:INFO:Initializing compare_models()
2024-02-18 18:42:47,412:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-02-18 18:42:47,412:INFO:Checking exceptions
2024-02-18 18:42:47,420:INFO:Preparing display monitor
2024-02-18 18:42:47,456:INFO:Initializing Logistic Regression
2024-02-18 18:42:47,456:INFO:Total runtime is 0.0 minutes
2024-02-18 18:42:47,463:INFO:SubProcess create_model() called ==================================
2024-02-18 18:42:47,463:INFO:Initializing create_model()
2024-02-18 18:42:47,463:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA509A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:42:47,464:INFO:Checking exceptions
2024-02-18 18:42:47,464:INFO:Importing libraries
2024-02-18 18:42:47,464:INFO:Copying training dataset
2024-02-18 18:42:47,473:INFO:Defining folds
2024-02-18 18:42:47,473:INFO:Declaring metric variables
2024-02-18 18:42:47,479:INFO:Importing untrained model
2024-02-18 18:42:47,484:INFO:Logistic Regression Imported successfully
2024-02-18 18:42:47,496:INFO:Starting cross validation
2024-02-18 18:42:47,497:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:42:47,717:INFO:Calculating mean and std
2024-02-18 18:42:47,718:INFO:Creating metrics dataframe
2024-02-18 18:42:47,722:INFO:Uploading results into container
2024-02-18 18:42:47,723:INFO:Uploading model into container now
2024-02-18 18:42:47,723:INFO:_master_model_container: 1
2024-02-18 18:42:47,723:INFO:_display_container: 2
2024-02-18 18:42:47,724:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7772, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-18 18:42:47,724:INFO:create_model() successfully completed......................................
2024-02-18 18:42:47,842:INFO:SubProcess create_model() end ==================================
2024-02-18 18:42:47,842:INFO:Creating metrics dataframe
2024-02-18 18:42:47,856:INFO:Initializing K Neighbors Classifier
2024-02-18 18:42:47,856:INFO:Total runtime is 0.006657950083414714 minutes
2024-02-18 18:42:47,860:INFO:SubProcess create_model() called ==================================
2024-02-18 18:42:47,861:INFO:Initializing create_model()
2024-02-18 18:42:47,862:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA509A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:42:47,862:INFO:Checking exceptions
2024-02-18 18:42:47,862:INFO:Importing libraries
2024-02-18 18:42:47,862:INFO:Copying training dataset
2024-02-18 18:42:47,872:INFO:Defining folds
2024-02-18 18:42:47,872:INFO:Declaring metric variables
2024-02-18 18:42:47,879:INFO:Importing untrained model
2024-02-18 18:42:47,885:INFO:K Neighbors Classifier Imported successfully
2024-02-18 18:42:47,896:INFO:Starting cross validation
2024-02-18 18:42:47,898:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:42:48,151:INFO:Calculating mean and std
2024-02-18 18:42:48,152:INFO:Creating metrics dataframe
2024-02-18 18:42:48,157:INFO:Uploading results into container
2024-02-18 18:42:48,158:INFO:Uploading model into container now
2024-02-18 18:42:48,159:INFO:_master_model_container: 2
2024-02-18 18:42:48,159:INFO:_display_container: 2
2024-02-18 18:42:48,160:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-18 18:42:48,160:INFO:create_model() successfully completed......................................
2024-02-18 18:42:48,256:INFO:SubProcess create_model() end ==================================
2024-02-18 18:42:48,256:INFO:Creating metrics dataframe
2024-02-18 18:42:48,270:INFO:Initializing Naive Bayes
2024-02-18 18:42:48,270:INFO:Total runtime is 0.013555002212524415 minutes
2024-02-18 18:42:48,277:INFO:SubProcess create_model() called ==================================
2024-02-18 18:42:48,277:INFO:Initializing create_model()
2024-02-18 18:42:48,278:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA509A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:42:48,278:INFO:Checking exceptions
2024-02-18 18:42:48,278:INFO:Importing libraries
2024-02-18 18:42:48,278:INFO:Copying training dataset
2024-02-18 18:42:48,288:INFO:Defining folds
2024-02-18 18:42:48,288:INFO:Declaring metric variables
2024-02-18 18:42:48,295:INFO:Importing untrained model
2024-02-18 18:42:48,302:INFO:Naive Bayes Imported successfully
2024-02-18 18:42:48,311:INFO:Starting cross validation
2024-02-18 18:42:48,312:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:42:48,426:INFO:Calculating mean and std
2024-02-18 18:42:48,426:INFO:Creating metrics dataframe
2024-02-18 18:42:48,430:INFO:Uploading results into container
2024-02-18 18:42:48,430:INFO:Uploading model into container now
2024-02-18 18:42:48,431:INFO:_master_model_container: 3
2024-02-18 18:42:48,431:INFO:_display_container: 2
2024-02-18 18:42:48,431:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-02-18 18:42:48,431:INFO:create_model() successfully completed......................................
2024-02-18 18:42:48,510:INFO:SubProcess create_model() end ==================================
2024-02-18 18:42:48,510:INFO:Creating metrics dataframe
2024-02-18 18:42:48,520:INFO:Initializing Decision Tree Classifier
2024-02-18 18:42:48,520:INFO:Total runtime is 0.01772075891494751 minutes
2024-02-18 18:42:48,527:INFO:SubProcess create_model() called ==================================
2024-02-18 18:42:48,527:INFO:Initializing create_model()
2024-02-18 18:42:48,527:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA509A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:42:48,527:INFO:Checking exceptions
2024-02-18 18:42:48,527:INFO:Importing libraries
2024-02-18 18:42:48,527:INFO:Copying training dataset
2024-02-18 18:42:48,537:INFO:Defining folds
2024-02-18 18:42:48,538:INFO:Declaring metric variables
2024-02-18 18:42:48,542:INFO:Importing untrained model
2024-02-18 18:42:48,547:INFO:Decision Tree Classifier Imported successfully
2024-02-18 18:42:48,557:INFO:Starting cross validation
2024-02-18 18:42:48,560:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:42:48,737:INFO:Calculating mean and std
2024-02-18 18:42:48,740:INFO:Creating metrics dataframe
2024-02-18 18:42:48,744:INFO:Uploading results into container
2024-02-18 18:42:48,746:INFO:Uploading model into container now
2024-02-18 18:42:48,747:INFO:_master_model_container: 4
2024-02-18 18:42:48,747:INFO:_display_container: 2
2024-02-18 18:42:48,747:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7772, splitter='best')
2024-02-18 18:42:48,747:INFO:create_model() successfully completed......................................
2024-02-18 18:42:48,838:INFO:SubProcess create_model() end ==================================
2024-02-18 18:42:48,838:INFO:Creating metrics dataframe
2024-02-18 18:42:48,853:INFO:Initializing SVM - Linear Kernel
2024-02-18 18:42:48,853:INFO:Total runtime is 0.023285341262817384 minutes
2024-02-18 18:42:48,860:INFO:SubProcess create_model() called ==================================
2024-02-18 18:42:48,861:INFO:Initializing create_model()
2024-02-18 18:42:48,861:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA509A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:42:48,861:INFO:Checking exceptions
2024-02-18 18:42:48,861:INFO:Importing libraries
2024-02-18 18:42:48,861:INFO:Copying training dataset
2024-02-18 18:42:48,873:INFO:Defining folds
2024-02-18 18:42:48,874:INFO:Declaring metric variables
2024-02-18 18:42:48,880:INFO:Importing untrained model
2024-02-18 18:42:48,887:INFO:SVM - Linear Kernel Imported successfully
2024-02-18 18:42:48,901:INFO:Starting cross validation
2024-02-18 18:42:48,902:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:42:48,976:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:42:48,985:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:42:48,990:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:42:48,999:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:42:49,002:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:42:49,014:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:42:49,016:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:42:49,023:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:42:49,045:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:42:49,053:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:42:49,067:INFO:Calculating mean and std
2024-02-18 18:42:49,069:INFO:Creating metrics dataframe
2024-02-18 18:42:49,074:INFO:Uploading results into container
2024-02-18 18:42:49,075:INFO:Uploading model into container now
2024-02-18 18:42:49,076:INFO:_master_model_container: 5
2024-02-18 18:42:49,076:INFO:_display_container: 2
2024-02-18 18:42:49,077:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7772, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-02-18 18:42:49,077:INFO:create_model() successfully completed......................................
2024-02-18 18:42:49,185:INFO:SubProcess create_model() end ==================================
2024-02-18 18:42:49,185:INFO:Creating metrics dataframe
2024-02-18 18:42:49,209:INFO:Initializing Ridge Classifier
2024-02-18 18:42:49,209:INFO:Total runtime is 0.02921504577000936 minutes
2024-02-18 18:42:49,219:INFO:SubProcess create_model() called ==================================
2024-02-18 18:42:49,220:INFO:Initializing create_model()
2024-02-18 18:42:49,220:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA509A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:42:49,221:INFO:Checking exceptions
2024-02-18 18:42:49,221:INFO:Importing libraries
2024-02-18 18:42:49,221:INFO:Copying training dataset
2024-02-18 18:42:49,241:INFO:Defining folds
2024-02-18 18:42:49,242:INFO:Declaring metric variables
2024-02-18 18:42:49,250:INFO:Importing untrained model
2024-02-18 18:42:49,255:INFO:Ridge Classifier Imported successfully
2024-02-18 18:42:49,268:INFO:Starting cross validation
2024-02-18 18:42:49,268:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:42:49,324:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.4497e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:42:49,327:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.45217e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:42:49,330:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.43531e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:42:49,334:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:42:49,337:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:42:49,339:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:42:49,340:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.41085e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:42:49,344:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.4369e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:42:49,345:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.45802e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:42:49,349:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:42:49,351:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.45406e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:42:49,354:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:42:49,356:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.44851e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:42:49,360:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:42:49,365:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:42:49,366:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.43667e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:42:49,376:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:42:49,379:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.42546e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:42:49,386:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:42:49,397:INFO:Calculating mean and std
2024-02-18 18:42:49,399:INFO:Creating metrics dataframe
2024-02-18 18:42:49,404:INFO:Uploading results into container
2024-02-18 18:42:49,406:INFO:Uploading model into container now
2024-02-18 18:42:49,406:INFO:_master_model_container: 6
2024-02-18 18:42:49,407:INFO:_display_container: 2
2024-02-18 18:42:49,407:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7772, solver='auto',
                tol=0.0001)
2024-02-18 18:42:49,407:INFO:create_model() successfully completed......................................
2024-02-18 18:42:49,515:INFO:SubProcess create_model() end ==================================
2024-02-18 18:42:49,515:INFO:Creating metrics dataframe
2024-02-18 18:42:49,532:INFO:Initializing Random Forest Classifier
2024-02-18 18:42:49,532:INFO:Total runtime is 0.034586894512176516 minutes
2024-02-18 18:42:49,538:INFO:SubProcess create_model() called ==================================
2024-02-18 18:42:49,539:INFO:Initializing create_model()
2024-02-18 18:42:49,539:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA509A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:42:49,539:INFO:Checking exceptions
2024-02-18 18:42:49,539:INFO:Importing libraries
2024-02-18 18:42:49,539:INFO:Copying training dataset
2024-02-18 18:42:49,553:INFO:Defining folds
2024-02-18 18:42:49,553:INFO:Declaring metric variables
2024-02-18 18:42:49,559:INFO:Importing untrained model
2024-02-18 18:42:49,565:INFO:Random Forest Classifier Imported successfully
2024-02-18 18:42:49,580:INFO:Starting cross validation
2024-02-18 18:42:49,582:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:42:51,148:INFO:Calculating mean and std
2024-02-18 18:42:51,150:INFO:Creating metrics dataframe
2024-02-18 18:42:51,154:INFO:Uploading results into container
2024-02-18 18:42:51,155:INFO:Uploading model into container now
2024-02-18 18:42:51,157:INFO:_master_model_container: 7
2024-02-18 18:42:51,157:INFO:_display_container: 2
2024-02-18 18:42:51,158:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7772, verbose=0, warm_start=False)
2024-02-18 18:42:51,158:INFO:create_model() successfully completed......................................
2024-02-18 18:42:51,265:INFO:SubProcess create_model() end ==================================
2024-02-18 18:42:51,265:INFO:Creating metrics dataframe
2024-02-18 18:42:51,285:INFO:Initializing Quadratic Discriminant Analysis
2024-02-18 18:42:51,285:INFO:Total runtime is 0.06381593147913615 minutes
2024-02-18 18:42:51,292:INFO:SubProcess create_model() called ==================================
2024-02-18 18:42:51,293:INFO:Initializing create_model()
2024-02-18 18:42:51,293:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA509A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:42:51,293:INFO:Checking exceptions
2024-02-18 18:42:51,293:INFO:Importing libraries
2024-02-18 18:42:51,293:INFO:Copying training dataset
2024-02-18 18:42:51,307:INFO:Defining folds
2024-02-18 18:42:51,307:INFO:Declaring metric variables
2024-02-18 18:42:51,312:INFO:Importing untrained model
2024-02-18 18:42:51,319:INFO:Quadratic Discriminant Analysis Imported successfully
2024-02-18 18:42:51,329:INFO:Starting cross validation
2024-02-18 18:42:51,331:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:42:51,444:INFO:Calculating mean and std
2024-02-18 18:42:51,445:INFO:Creating metrics dataframe
2024-02-18 18:42:51,449:INFO:Uploading results into container
2024-02-18 18:42:51,449:INFO:Uploading model into container now
2024-02-18 18:42:51,450:INFO:_master_model_container: 8
2024-02-18 18:42:51,450:INFO:_display_container: 2
2024-02-18 18:42:51,450:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-02-18 18:42:51,450:INFO:create_model() successfully completed......................................
2024-02-18 18:42:51,575:INFO:SubProcess create_model() end ==================================
2024-02-18 18:42:51,577:INFO:Creating metrics dataframe
2024-02-18 18:42:51,601:INFO:Initializing Ada Boost Classifier
2024-02-18 18:42:51,602:INFO:Total runtime is 0.06908872524897258 minutes
2024-02-18 18:42:51,611:INFO:SubProcess create_model() called ==================================
2024-02-18 18:42:51,612:INFO:Initializing create_model()
2024-02-18 18:42:51,612:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA509A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:42:51,612:INFO:Checking exceptions
2024-02-18 18:42:51,612:INFO:Importing libraries
2024-02-18 18:42:51,612:INFO:Copying training dataset
2024-02-18 18:42:51,622:INFO:Defining folds
2024-02-18 18:42:51,623:INFO:Declaring metric variables
2024-02-18 18:42:51,630:INFO:Importing untrained model
2024-02-18 18:42:51,636:INFO:Ada Boost Classifier Imported successfully
2024-02-18 18:42:51,647:INFO:Starting cross validation
2024-02-18 18:42:51,649:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:42:52,479:INFO:Calculating mean and std
2024-02-18 18:42:52,482:INFO:Creating metrics dataframe
2024-02-18 18:42:52,485:INFO:Uploading results into container
2024-02-18 18:42:52,486:INFO:Uploading model into container now
2024-02-18 18:42:52,486:INFO:_master_model_container: 9
2024-02-18 18:42:52,486:INFO:_display_container: 2
2024-02-18 18:42:52,486:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7772)
2024-02-18 18:42:52,486:INFO:create_model() successfully completed......................................
2024-02-18 18:42:52,558:INFO:SubProcess create_model() end ==================================
2024-02-18 18:42:52,558:INFO:Creating metrics dataframe
2024-02-18 18:42:52,583:INFO:Initializing Gradient Boosting Classifier
2024-02-18 18:42:52,583:INFO:Total runtime is 0.085452667872111 minutes
2024-02-18 18:42:52,588:INFO:SubProcess create_model() called ==================================
2024-02-18 18:42:52,588:INFO:Initializing create_model()
2024-02-18 18:42:52,588:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA509A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:42:52,588:INFO:Checking exceptions
2024-02-18 18:42:52,588:INFO:Importing libraries
2024-02-18 18:42:52,589:INFO:Copying training dataset
2024-02-18 18:42:52,595:INFO:Defining folds
2024-02-18 18:42:52,595:INFO:Declaring metric variables
2024-02-18 18:42:52,599:INFO:Importing untrained model
2024-02-18 18:42:52,605:INFO:Gradient Boosting Classifier Imported successfully
2024-02-18 18:42:52,614:INFO:Starting cross validation
2024-02-18 18:42:52,615:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:42:54,704:INFO:Calculating mean and std
2024-02-18 18:42:54,705:INFO:Creating metrics dataframe
2024-02-18 18:42:54,709:INFO:Uploading results into container
2024-02-18 18:42:54,710:INFO:Uploading model into container now
2024-02-18 18:42:54,710:INFO:_master_model_container: 10
2024-02-18 18:42:54,710:INFO:_display_container: 2
2024-02-18 18:42:54,711:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7772, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-18 18:42:54,711:INFO:create_model() successfully completed......................................
2024-02-18 18:42:54,817:INFO:SubProcess create_model() end ==================================
2024-02-18 18:42:54,817:INFO:Creating metrics dataframe
2024-02-18 18:42:54,846:INFO:Initializing Linear Discriminant Analysis
2024-02-18 18:42:54,846:INFO:Total runtime is 0.12316876649856567 minutes
2024-02-18 18:42:54,854:INFO:SubProcess create_model() called ==================================
2024-02-18 18:42:54,855:INFO:Initializing create_model()
2024-02-18 18:42:54,855:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA509A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:42:54,855:INFO:Checking exceptions
2024-02-18 18:42:54,855:INFO:Importing libraries
2024-02-18 18:42:54,855:INFO:Copying training dataset
2024-02-18 18:42:54,865:INFO:Defining folds
2024-02-18 18:42:54,865:INFO:Declaring metric variables
2024-02-18 18:42:54,870:INFO:Importing untrained model
2024-02-18 18:42:54,878:INFO:Linear Discriminant Analysis Imported successfully
2024-02-18 18:42:54,889:INFO:Starting cross validation
2024-02-18 18:42:54,891:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:42:55,030:INFO:Calculating mean and std
2024-02-18 18:42:55,032:INFO:Creating metrics dataframe
2024-02-18 18:42:55,035:INFO:Uploading results into container
2024-02-18 18:42:55,036:INFO:Uploading model into container now
2024-02-18 18:42:55,037:INFO:_master_model_container: 11
2024-02-18 18:42:55,037:INFO:_display_container: 2
2024-02-18 18:42:55,037:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-02-18 18:42:55,037:INFO:create_model() successfully completed......................................
2024-02-18 18:42:55,175:INFO:SubProcess create_model() end ==================================
2024-02-18 18:42:55,175:INFO:Creating metrics dataframe
2024-02-18 18:42:55,191:INFO:Initializing Extra Trees Classifier
2024-02-18 18:42:55,192:INFO:Total runtime is 0.12893438339233398 minutes
2024-02-18 18:42:55,202:INFO:SubProcess create_model() called ==================================
2024-02-18 18:42:55,202:INFO:Initializing create_model()
2024-02-18 18:42:55,203:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA509A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:42:55,203:INFO:Checking exceptions
2024-02-18 18:42:55,203:INFO:Importing libraries
2024-02-18 18:42:55,203:INFO:Copying training dataset
2024-02-18 18:42:55,213:INFO:Defining folds
2024-02-18 18:42:55,214:INFO:Declaring metric variables
2024-02-18 18:42:55,221:INFO:Importing untrained model
2024-02-18 18:42:55,226:INFO:Extra Trees Classifier Imported successfully
2024-02-18 18:42:55,235:INFO:Starting cross validation
2024-02-18 18:42:55,236:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:42:56,456:INFO:Calculating mean and std
2024-02-18 18:42:56,458:INFO:Creating metrics dataframe
2024-02-18 18:42:56,462:INFO:Uploading results into container
2024-02-18 18:42:56,463:INFO:Uploading model into container now
2024-02-18 18:42:56,464:INFO:_master_model_container: 12
2024-02-18 18:42:56,464:INFO:_display_container: 2
2024-02-18 18:42:56,464:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=7772, verbose=0, warm_start=False)
2024-02-18 18:42:56,464:INFO:create_model() successfully completed......................................
2024-02-18 18:42:56,547:INFO:SubProcess create_model() end ==================================
2024-02-18 18:42:56,547:INFO:Creating metrics dataframe
2024-02-18 18:42:56,560:INFO:Initializing Light Gradient Boosting Machine
2024-02-18 18:42:56,561:INFO:Total runtime is 0.15174580017725625 minutes
2024-02-18 18:42:56,564:INFO:SubProcess create_model() called ==================================
2024-02-18 18:42:56,565:INFO:Initializing create_model()
2024-02-18 18:42:56,565:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA509A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:42:56,566:INFO:Checking exceptions
2024-02-18 18:42:56,566:INFO:Importing libraries
2024-02-18 18:42:56,567:INFO:Copying training dataset
2024-02-18 18:42:56,581:INFO:Defining folds
2024-02-18 18:42:56,582:INFO:Declaring metric variables
2024-02-18 18:42:56,598:INFO:Importing untrained model
2024-02-18 18:42:56,604:INFO:Light Gradient Boosting Machine Imported successfully
2024-02-18 18:42:56,612:INFO:Starting cross validation
2024-02-18 18:42:56,613:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:42:57,736:INFO:Calculating mean and std
2024-02-18 18:42:57,739:INFO:Creating metrics dataframe
2024-02-18 18:42:57,747:INFO:Uploading results into container
2024-02-18 18:42:57,748:INFO:Uploading model into container now
2024-02-18 18:42:57,749:INFO:_master_model_container: 13
2024-02-18 18:42:57,749:INFO:_display_container: 2
2024-02-18 18:42:57,750:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7772, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-02-18 18:42:57,750:INFO:create_model() successfully completed......................................
2024-02-18 18:42:57,885:INFO:SubProcess create_model() end ==================================
2024-02-18 18:42:57,885:INFO:Creating metrics dataframe
2024-02-18 18:42:57,908:INFO:Initializing Dummy Classifier
2024-02-18 18:42:57,909:INFO:Total runtime is 0.1741893410682678 minutes
2024-02-18 18:42:57,914:INFO:SubProcess create_model() called ==================================
2024-02-18 18:42:57,914:INFO:Initializing create_model()
2024-02-18 18:42:57,915:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022AA509A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:42:57,915:INFO:Checking exceptions
2024-02-18 18:42:57,915:INFO:Importing libraries
2024-02-18 18:42:57,915:INFO:Copying training dataset
2024-02-18 18:42:57,926:INFO:Defining folds
2024-02-18 18:42:57,927:INFO:Declaring metric variables
2024-02-18 18:42:57,935:INFO:Importing untrained model
2024-02-18 18:42:57,941:INFO:Dummy Classifier Imported successfully
2024-02-18 18:42:57,953:INFO:Starting cross validation
2024-02-18 18:42:57,954:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:42:58,011:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:42:58,013:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:42:58,021:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:42:58,026:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:42:58,030:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:42:58,035:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:42:58,040:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:42:58,051:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:42:58,055:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:42:58,058:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:42:58,064:INFO:Calculating mean and std
2024-02-18 18:42:58,066:INFO:Creating metrics dataframe
2024-02-18 18:42:58,071:INFO:Uploading results into container
2024-02-18 18:42:58,072:INFO:Uploading model into container now
2024-02-18 18:42:58,072:INFO:_master_model_container: 14
2024-02-18 18:42:58,073:INFO:_display_container: 2
2024-02-18 18:42:58,073:INFO:DummyClassifier(constant=None, random_state=7772, strategy='prior')
2024-02-18 18:42:58,073:INFO:create_model() successfully completed......................................
2024-02-18 18:42:58,167:INFO:SubProcess create_model() end ==================================
2024-02-18 18:42:58,167:INFO:Creating metrics dataframe
2024-02-18 18:42:58,219:INFO:Initializing create_model()
2024-02-18 18:42:58,219:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7772), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:42:58,220:INFO:Checking exceptions
2024-02-18 18:42:58,224:INFO:Importing libraries
2024-02-18 18:42:58,224:INFO:Copying training dataset
2024-02-18 18:42:58,236:INFO:Defining folds
2024-02-18 18:42:58,237:INFO:Declaring metric variables
2024-02-18 18:42:58,237:INFO:Importing untrained model
2024-02-18 18:42:58,237:INFO:Declaring custom model
2024-02-18 18:42:58,237:INFO:Ada Boost Classifier Imported successfully
2024-02-18 18:42:58,238:INFO:Cross validation set to False
2024-02-18 18:42:58,238:INFO:Fitting Model
2024-02-18 18:42:58,701:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7772)
2024-02-18 18:42:58,701:INFO:create_model() successfully completed......................................
2024-02-18 18:42:58,846:INFO:_master_model_container: 14
2024-02-18 18:42:58,848:INFO:_display_container: 2
2024-02-18 18:42:58,848:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7772)
2024-02-18 18:42:58,848:INFO:compare_models() successfully completed......................................
2024-02-18 18:50:25,607:INFO:Initializing evaluate_model()
2024-02-18 18:50:25,607:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7772), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-02-18 18:50:25,631:INFO:Initializing plot_model()
2024-02-18 18:50:25,631:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7772), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, system=True)
2024-02-18 18:50:25,631:INFO:Checking exceptions
2024-02-18 18:50:25,638:INFO:Preloading libraries
2024-02-18 18:50:25,642:INFO:Copying training dataset
2024-02-18 18:50:25,642:INFO:Plot type: pipeline
2024-02-18 18:50:25,817:INFO:Visual Rendered Successfully
2024-02-18 18:50:25,927:INFO:plot_model() successfully completed......................................
2024-02-18 18:50:33,660:INFO:Initializing plot_model()
2024-02-18 18:50:33,660:INFO:plot_model(plot=lift, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7772), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, system=True)
2024-02-18 18:50:33,660:INFO:Checking exceptions
2024-02-18 18:50:33,666:INFO:Preloading libraries
2024-02-18 18:50:33,672:INFO:Copying training dataset
2024-02-18 18:50:33,673:INFO:Plot type: lift
2024-02-18 18:50:33,673:INFO:Generating predictions / predict_proba on X_test
2024-02-18 18:50:34,073:INFO:Visual Rendered Successfully
2024-02-18 18:50:34,200:INFO:plot_model() successfully completed......................................
2024-02-18 18:50:40,822:INFO:Initializing plot_model()
2024-02-18 18:50:40,822:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7772), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, system=True)
2024-02-18 18:50:40,822:INFO:Checking exceptions
2024-02-18 18:50:40,827:INFO:Preloading libraries
2024-02-18 18:50:40,831:INFO:Copying training dataset
2024-02-18 18:50:40,832:INFO:Plot type: parameter
2024-02-18 18:50:40,835:INFO:Visual Rendered Successfully
2024-02-18 18:50:40,928:INFO:plot_model() successfully completed......................................
2024-02-18 18:50:48,542:INFO:Initializing plot_model()
2024-02-18 18:50:48,542:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7772), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, system=True)
2024-02-18 18:50:48,543:INFO:Checking exceptions
2024-02-18 18:50:48,547:INFO:Preloading libraries
2024-02-18 18:50:48,551:INFO:Copying training dataset
2024-02-18 18:50:48,551:INFO:Plot type: auc
2024-02-18 18:50:48,684:INFO:Fitting Model
2024-02-18 18:50:48,688:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but AdaBoostClassifier was fitted with feature names
  warnings.warn(

2024-02-18 18:50:48,688:INFO:Scoring test/hold-out set
2024-02-18 18:50:48,932:INFO:Visual Rendered Successfully
2024-02-18 18:50:49,040:INFO:plot_model() successfully completed......................................
2024-02-18 18:50:57,126:INFO:Initializing plot_model()
2024-02-18 18:50:57,127:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7772), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, system=True)
2024-02-18 18:50:57,127:INFO:Checking exceptions
2024-02-18 18:50:57,132:INFO:Preloading libraries
2024-02-18 18:50:57,137:INFO:Copying training dataset
2024-02-18 18:50:57,137:INFO:Plot type: confusion_matrix
2024-02-18 18:50:57,296:INFO:Fitting Model
2024-02-18 18:50:57,296:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but AdaBoostClassifier was fitted with feature names
  warnings.warn(

2024-02-18 18:50:57,296:INFO:Scoring test/hold-out set
2024-02-18 18:50:57,479:INFO:Visual Rendered Successfully
2024-02-18 18:50:57,582:INFO:plot_model() successfully completed......................................
2024-02-18 18:51:03,145:INFO:Initializing plot_model()
2024-02-18 18:51:03,145:INFO:plot_model(plot=gain, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7772), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, system=True)
2024-02-18 18:51:03,145:INFO:Checking exceptions
2024-02-18 18:51:03,151:INFO:Preloading libraries
2024-02-18 18:51:03,157:INFO:Copying training dataset
2024-02-18 18:51:03,157:INFO:Plot type: gain
2024-02-18 18:51:03,157:INFO:Generating predictions / predict_proba on X_test
2024-02-18 18:51:03,425:INFO:Visual Rendered Successfully
2024-02-18 18:51:03,540:INFO:plot_model() successfully completed......................................
2024-02-18 18:51:05,113:INFO:Initializing plot_model()
2024-02-18 18:51:05,113:INFO:plot_model(plot=tree, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7772), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, system=True)
2024-02-18 18:51:05,114:INFO:Checking exceptions
2024-02-18 18:51:12,002:INFO:Initializing plot_model()
2024-02-18 18:51:12,003:INFO:plot_model(plot=gain, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7772), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, system=True)
2024-02-18 18:51:12,003:INFO:Checking exceptions
2024-02-18 18:51:12,007:INFO:Preloading libraries
2024-02-18 18:51:12,014:INFO:Copying training dataset
2024-02-18 18:51:12,014:INFO:Plot type: gain
2024-02-18 18:51:12,015:INFO:Generating predictions / predict_proba on X_test
2024-02-18 18:51:12,317:INFO:Visual Rendered Successfully
2024-02-18 18:51:12,431:INFO:plot_model() successfully completed......................................
2024-02-18 18:51:14,000:INFO:Initializing plot_model()
2024-02-18 18:51:14,000:INFO:plot_model(plot=tree, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7772), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, system=True)
2024-02-18 18:51:14,001:INFO:Checking exceptions
2024-02-18 18:51:19,332:INFO:Initializing plot_model()
2024-02-18 18:51:19,332:INFO:plot_model(plot=vc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7772), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, system=True)
2024-02-18 18:51:19,332:INFO:Checking exceptions
2024-02-18 18:51:19,337:INFO:Preloading libraries
2024-02-18 18:51:19,344:INFO:Copying training dataset
2024-02-18 18:51:19,344:INFO:Plot type: vc
2024-02-18 18:51:19,344:INFO:Determining param_name
2024-02-18 18:51:19,346:INFO:param_name: n_estimators
2024-02-18 18:51:19,510:INFO:Fitting Model
2024-02-18 18:52:16,484:INFO:Initializing evaluate_model()
2024-02-18 18:52:16,484:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7772), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-02-18 18:52:16,499:INFO:Initializing plot_model()
2024-02-18 18:52:16,499:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7772), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, system=True)
2024-02-18 18:52:16,500:INFO:Checking exceptions
2024-02-18 18:52:16,508:INFO:Preloading libraries
2024-02-18 18:52:16,517:INFO:Copying training dataset
2024-02-18 18:52:16,517:INFO:Plot type: pipeline
2024-02-18 18:52:16,638:INFO:Visual Rendered Successfully
2024-02-18 18:52:16,781:INFO:plot_model() successfully completed......................................
2024-02-18 18:52:16,803:INFO:Initializing plot_model()
2024-02-18 18:52:16,804:INFO:plot_model(plot=boundary, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7772), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022AA5099090>, system=True)
2024-02-18 18:52:16,804:INFO:Checking exceptions
2024-02-18 18:52:16,809:INFO:Preloading libraries
2024-02-18 18:52:16,815:INFO:Copying training dataset
2024-02-18 18:52:16,815:INFO:Plot type: boundary
2024-02-18 18:52:16,916:INFO:Fitting StandardScaler()
2024-02-18 18:52:16,923:INFO:Fitting PCA()
2024-02-18 18:52:17,036:INFO:Fitting Model
2024-02-18 18:52:23,739:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_d0a641bd915b40d393ef08571ddd0c80_abbd3bc708b342e18be23dbdffee584e
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,763:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_88faf6dcd3954e58849bcbf639c660a3_10d84e8fb71e4f3d9787cf49f567cc2c
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,764:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_3be6df5d8a3147c183853d27ca6cc559_f99a8d2fcf854c5aad85db40a4604467
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,764:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_3c86acc3b68e480c89bb9f5dbce4d204_d97365885e3647eab4698eb31cb298bd
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,764:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_85643f7ab6c747f68337d0dc5c9cea5e_575681e4a8944516a5faa730c4d9e58e
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,764:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_8c437c0e8cfd42f794db708942f5cf97_fb6abf5e37d3448b97293d3cb02fc3a4
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,764:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_bc1abb65ffee409fa5dcd0fb229a8d63_a444c139a94b47caaaa7fedabfe97a9b
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,764:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_228979c442b944798aea09daf9a41150_58f6294aba6748f78d943b1b4480bd5a
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,764:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_5a112ff50b954f3bb3ee319489b449c1_5897cdb2d28048b4930f12aeb68cb385
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_8cbcbfefbe38441fa7894e7be9da754d_48f4f96b1a274366beb05cdfa9a57a5a
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_3a9f73dfb373470cad6516a356c037fb_930a1845868041ba9c75f5f07e905e0a
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_2ef6f693e0a245fbabf63e6062f10f7a_a25ece72cb51467eb8bb4f3056e84324
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_3e6e782debcc471d81af4ea9c20948e5_46baa424b2a04e37bf96df3eaf319619
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_769200f7d033400ca0dd26f60d3d3982_76f361e9a529494fa245d2c7855a10c2
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_dba34d2ac0094ed780315a847f6e785a_bf9caa409cec45c9890cceee54b0827b
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_0860e9640590422e89162a4a197919c6_c82f69254230499fa3a223c7c8b7f27e
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,766:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_53da89e1a01a42f7a797ce391d2c5019_066e584e260a47fe81f4f0f34ebd634d
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,766:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_968f4f154dc84a10a3bc6059c7aab8ef_597332b3ea1849d3985eb3e58df1ff74
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,766:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_dfd731d69d0043e29cf550590cf7bbab_5e0d517483b949b99e1260b399fda216
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,766:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_cf5d3e7794e44c6bb95cd3bd3179c56b_88c16425842541faa35a8d381b563d4a
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,766:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_e3e6ed12c44a44de81eeda9c574fd96f_1ba1b5794a944a82a8b1ee4bc72c3d8e
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,766:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_f91fc86dd57f4298849903345e15acf5_6fa598f6f05541b5add77d8905d5e45b
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,766:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_962f6855f2bd4295bd40c8b652597b8d_c0e01cc60c0e47e9b82b34ebeb0cc592
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,766:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_cce7c7ac8d424a0f8ea270de78df66c1_52a6d558b10f4544b7d8d88a400153cc
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,767:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_3fc6922356f6415b95df6083500c3f38_0dfa43d006ee44aea6693ff739091655
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,767:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_120271d262084f98874eeabc841e1c98_f172e1fbacfe4887bcd89a612d882424
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,767:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_ad17c3c64c374467931d3afa87ba0f32_a12127f331f248728cdbfbc14794e648
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:52:23,767:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_13744_376a00cd5d0e46c7bcd77812263ef83c_b5eb05c320bf49739ce0177841a617aa
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 18:53:47,978:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-18 18:53:47,979:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-18 18:53:47,979:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-18 18:53:47,979:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-18 18:53:53,946:INFO:PyCaret ClassificationExperiment
2024-02-18 18:53:53,946:INFO:Logging name: clf-default-name
2024-02-18 18:53:53,946:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-18 18:53:53,946:INFO:version 3.2.0
2024-02-18 18:53:53,946:INFO:Initializing setup()
2024-02-18 18:53:53,947:INFO:self.USI: a500
2024-02-18 18:53:53,947:INFO:self._variable_keys: {'X_test', 'fold_groups_param', 'fix_imbalance', 'memory', 'gpu_n_jobs_param', '_available_plots', 'y_train', '_ml_usecase', 'target_param', 'fold_generator', 'data', 'exp_id', 'idx', 'y', 'X', 'n_jobs_param', 'seed', 'gpu_param', 'html_param', 'X_train', 'logging_param', 'is_multiclass', 'USI', 'pipeline', 'exp_name_log', 'y_test', 'fold_shuffle_param', 'log_plots_param'}
2024-02-18 18:53:53,947:INFO:Checking environment
2024-02-18 18:53:53,947:INFO:python_version: 3.10.13
2024-02-18 18:53:53,947:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2024-02-18 18:53:53,947:INFO:machine: AMD64
2024-02-18 18:53:53,947:INFO:platform: Windows-10-10.0.22621-SP0
2024-02-18 18:53:53,950:INFO:Memory: svmem(total=16952647680, available=6134308864, percent=63.8, used=10818338816, free=6134308864)
2024-02-18 18:53:53,951:INFO:Physical Core: 4
2024-02-18 18:53:53,951:INFO:Logical Core: 8
2024-02-18 18:53:53,951:INFO:Checking libraries
2024-02-18 18:53:53,951:INFO:System:
2024-02-18 18:53:53,951:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2024-02-18 18:53:53,951:INFO:executable: C:\Users\santh\anaconda3\envs\msds\python.exe
2024-02-18 18:53:53,951:INFO:   machine: Windows-10-10.0.22621-SP0
2024-02-18 18:53:53,951:INFO:PyCaret required dependencies:
2024-02-18 18:53:55,191:INFO:                 pip: 23.3.1
2024-02-18 18:53:55,192:INFO:          setuptools: 68.2.2
2024-02-18 18:53:55,192:INFO:             pycaret: 3.2.0
2024-02-18 18:53:55,192:INFO:             IPython: 8.20.0
2024-02-18 18:53:55,192:INFO:          ipywidgets: 8.0.4
2024-02-18 18:53:55,193:INFO:                tqdm: 4.65.0
2024-02-18 18:53:55,193:INFO:               numpy: 1.25.2
2024-02-18 18:53:55,193:INFO:              pandas: 1.5.3
2024-02-18 18:53:55,193:INFO:              jinja2: 3.1.3
2024-02-18 18:53:55,193:INFO:               scipy: 1.10.1
2024-02-18 18:53:55,193:INFO:              joblib: 1.2.0
2024-02-18 18:53:55,194:INFO:             sklearn: 1.2.2
2024-02-18 18:53:55,194:INFO:                pyod: 1.1.3
2024-02-18 18:53:55,194:INFO:            imblearn: 0.11.0
2024-02-18 18:53:55,194:INFO:   category_encoders: 2.6.3
2024-02-18 18:53:55,194:INFO:            lightgbm: 4.3.0
2024-02-18 18:53:55,195:INFO:               numba: 0.59.0
2024-02-18 18:53:55,195:INFO:            requests: 2.31.0
2024-02-18 18:53:55,195:INFO:          matplotlib: 3.6.0
2024-02-18 18:53:55,195:INFO:          scikitplot: 0.3.7
2024-02-18 18:53:55,195:INFO:         yellowbrick: 1.5
2024-02-18 18:53:55,195:INFO:              plotly: 5.9.0
2024-02-18 18:53:55,196:INFO:    plotly-resampler: Not installed
2024-02-18 18:53:55,196:INFO:             kaleido: 0.2.1
2024-02-18 18:53:55,196:INFO:           schemdraw: 0.15
2024-02-18 18:53:55,196:INFO:         statsmodels: 0.14.0
2024-02-18 18:53:55,196:INFO:              sktime: 0.21.1
2024-02-18 18:53:55,197:INFO:               tbats: 1.1.3
2024-02-18 18:53:55,197:INFO:            pmdarima: 2.0.4
2024-02-18 18:53:55,197:INFO:              psutil: 5.9.0
2024-02-18 18:53:55,197:INFO:          markupsafe: 2.1.3
2024-02-18 18:53:55,197:INFO:             pickle5: Not installed
2024-02-18 18:53:55,197:INFO:         cloudpickle: 2.2.1
2024-02-18 18:53:55,198:INFO:         deprecation: 2.1.0
2024-02-18 18:53:55,198:INFO:              xxhash: 2.0.2
2024-02-18 18:53:55,198:INFO:           wurlitzer: Not installed
2024-02-18 18:53:55,198:INFO:PyCaret optional dependencies:
2024-02-18 18:53:55,255:INFO:                shap: Not installed
2024-02-18 18:53:55,256:INFO:           interpret: Not installed
2024-02-18 18:53:55,256:INFO:                umap: Not installed
2024-02-18 18:53:55,256:INFO:     ydata_profiling: Not installed
2024-02-18 18:53:55,256:INFO:  explainerdashboard: Not installed
2024-02-18 18:53:55,256:INFO:             autoviz: Not installed
2024-02-18 18:53:55,256:INFO:           fairlearn: Not installed
2024-02-18 18:53:55,256:INFO:          deepchecks: Not installed
2024-02-18 18:53:55,256:INFO:             xgboost: Not installed
2024-02-18 18:53:55,257:INFO:            catboost: Not installed
2024-02-18 18:53:55,257:INFO:              kmodes: Not installed
2024-02-18 18:53:55,257:INFO:             mlxtend: Not installed
2024-02-18 18:53:55,257:INFO:       statsforecast: Not installed
2024-02-18 18:53:55,257:INFO:        tune_sklearn: Not installed
2024-02-18 18:53:55,257:INFO:                 ray: Not installed
2024-02-18 18:53:55,257:INFO:            hyperopt: Not installed
2024-02-18 18:53:55,257:INFO:              optuna: Not installed
2024-02-18 18:53:55,257:INFO:               skopt: Not installed
2024-02-18 18:53:55,257:INFO:              mlflow: Not installed
2024-02-18 18:53:55,258:INFO:              gradio: Not installed
2024-02-18 18:53:55,258:INFO:             fastapi: Not installed
2024-02-18 18:53:55,258:INFO:             uvicorn: Not installed
2024-02-18 18:53:55,258:INFO:              m2cgen: Not installed
2024-02-18 18:53:55,258:INFO:           evidently: Not installed
2024-02-18 18:53:55,258:INFO:               fugue: Not installed
2024-02-18 18:53:55,258:INFO:           streamlit: Not installed
2024-02-18 18:53:55,258:INFO:             prophet: Not installed
2024-02-18 18:53:55,258:INFO:None
2024-02-18 18:53:55,258:INFO:Set up data.
2024-02-18 18:53:55,275:INFO:Set up folding strategy.
2024-02-18 18:53:55,275:INFO:Set up train/test split.
2024-02-18 18:53:55,293:INFO:Set up index.
2024-02-18 18:53:55,294:INFO:Assigning column types.
2024-02-18 18:53:55,303:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-18 18:53:55,382:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-18 18:53:55,387:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 18:53:55,438:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:53:55,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:53:55,512:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-18 18:53:55,513:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 18:53:55,545:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:53:55,546:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:53:55,546:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-18 18:53:55,620:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 18:53:55,654:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:53:55,655:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:53:55,718:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 18:53:55,762:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:53:55,764:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:53:55,765:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-18 18:53:55,858:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:53:55,858:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:53:55,939:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:53:55,940:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:53:55,942:INFO:Preparing preprocessing pipeline...
2024-02-18 18:53:55,943:INFO:Set up simple imputation.
2024-02-18 18:53:56,004:INFO:Finished creating preprocessing pipeline.
2024-02-18 18:53:56,014:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\santh\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-18 18:53:56,015:INFO:Creating final display dataframe.
2024-02-18 18:53:56,150:INFO:Setup _display_container:                     Description             Value
0                    Session id               476
1                        Target             Churn
2                   Target type            Binary
3           Original data shape         (7043, 8)
4        Transformed data shape         (7043, 8)
5   Transformed train set shape         (4930, 8)
6    Transformed test set shape         (2113, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              a500
2024-02-18 18:53:56,250:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:53:56,250:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:53:56,355:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:53:56,355:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:53:56,356:INFO:setup() successfully completed in 2.41s...............
2024-02-18 18:53:59,642:INFO:Initializing compare_models()
2024-02-18 18:53:59,642:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AF4FC340>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000211AF4FC340>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-02-18 18:53:59,642:INFO:Checking exceptions
2024-02-18 18:53:59,650:INFO:Preparing display monitor
2024-02-18 18:53:59,689:INFO:Initializing Logistic Regression
2024-02-18 18:53:59,689:INFO:Total runtime is 0.0 minutes
2024-02-18 18:53:59,696:INFO:SubProcess create_model() called ==================================
2024-02-18 18:53:59,696:INFO:Initializing create_model()
2024-02-18 18:53:59,696:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AF4FC340>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002118B26E890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:53:59,697:INFO:Checking exceptions
2024-02-18 18:53:59,697:INFO:Importing libraries
2024-02-18 18:53:59,697:INFO:Copying training dataset
2024-02-18 18:53:59,704:INFO:Defining folds
2024-02-18 18:53:59,705:INFO:Declaring metric variables
2024-02-18 18:53:59,710:INFO:Importing untrained model
2024-02-18 18:53:59,716:INFO:Logistic Regression Imported successfully
2024-02-18 18:53:59,728:INFO:Starting cross validation
2024-02-18 18:53:59,730:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:08,197:INFO:Calculating mean and std
2024-02-18 18:54:08,200:INFO:Creating metrics dataframe
2024-02-18 18:54:08,204:INFO:Uploading results into container
2024-02-18 18:54:08,205:INFO:Uploading model into container now
2024-02-18 18:54:08,206:INFO:_master_model_container: 1
2024-02-18 18:54:08,206:INFO:_display_container: 2
2024-02-18 18:54:08,206:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=476, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-18 18:54:08,206:INFO:create_model() successfully completed......................................
2024-02-18 18:54:08,303:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:08,303:INFO:Creating metrics dataframe
2024-02-18 18:54:08,339:INFO:Initializing K Neighbors Classifier
2024-02-18 18:54:08,339:INFO:Total runtime is 0.1441620906194051 minutes
2024-02-18 18:54:08,348:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:08,348:INFO:Initializing create_model()
2024-02-18 18:54:08,349:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AF4FC340>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002118B26E890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:08,349:INFO:Checking exceptions
2024-02-18 18:54:08,349:INFO:Importing libraries
2024-02-18 18:54:08,349:INFO:Copying training dataset
2024-02-18 18:54:08,363:INFO:Defining folds
2024-02-18 18:54:08,364:INFO:Declaring metric variables
2024-02-18 18:54:08,371:INFO:Importing untrained model
2024-02-18 18:54:08,379:INFO:K Neighbors Classifier Imported successfully
2024-02-18 18:54:08,388:INFO:Starting cross validation
2024-02-18 18:54:08,389:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:08,610:INFO:Calculating mean and std
2024-02-18 18:54:08,613:INFO:Creating metrics dataframe
2024-02-18 18:54:08,619:INFO:Uploading results into container
2024-02-18 18:54:08,620:INFO:Uploading model into container now
2024-02-18 18:54:08,620:INFO:_master_model_container: 2
2024-02-18 18:54:08,620:INFO:_display_container: 2
2024-02-18 18:54:08,620:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-18 18:54:08,621:INFO:create_model() successfully completed......................................
2024-02-18 18:54:08,717:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:08,717:INFO:Creating metrics dataframe
2024-02-18 18:54:08,727:INFO:Initializing Naive Bayes
2024-02-18 18:54:08,727:INFO:Total runtime is 0.15062114000320434 minutes
2024-02-18 18:54:08,731:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:08,732:INFO:Initializing create_model()
2024-02-18 18:54:08,732:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AF4FC340>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002118B26E890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:08,732:INFO:Checking exceptions
2024-02-18 18:54:08,732:INFO:Importing libraries
2024-02-18 18:54:08,732:INFO:Copying training dataset
2024-02-18 18:54:08,738:INFO:Defining folds
2024-02-18 18:54:08,738:INFO:Declaring metric variables
2024-02-18 18:54:08,742:INFO:Importing untrained model
2024-02-18 18:54:08,748:INFO:Naive Bayes Imported successfully
2024-02-18 18:54:08,757:INFO:Starting cross validation
2024-02-18 18:54:08,759:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:08,884:INFO:Calculating mean and std
2024-02-18 18:54:08,886:INFO:Creating metrics dataframe
2024-02-18 18:54:08,889:INFO:Uploading results into container
2024-02-18 18:54:08,890:INFO:Uploading model into container now
2024-02-18 18:54:08,890:INFO:_master_model_container: 3
2024-02-18 18:54:08,890:INFO:_display_container: 2
2024-02-18 18:54:08,890:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-02-18 18:54:08,890:INFO:create_model() successfully completed......................................
2024-02-18 18:54:08,972:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:08,973:INFO:Creating metrics dataframe
2024-02-18 18:54:08,987:INFO:Initializing Decision Tree Classifier
2024-02-18 18:54:08,987:INFO:Total runtime is 0.15495743751525878 minutes
2024-02-18 18:54:08,991:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:08,991:INFO:Initializing create_model()
2024-02-18 18:54:08,992:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AF4FC340>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002118B26E890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:08,992:INFO:Checking exceptions
2024-02-18 18:54:08,992:INFO:Importing libraries
2024-02-18 18:54:08,992:INFO:Copying training dataset
2024-02-18 18:54:08,998:INFO:Defining folds
2024-02-18 18:54:08,998:INFO:Declaring metric variables
2024-02-18 18:54:09,002:INFO:Importing untrained model
2024-02-18 18:54:09,009:INFO:Decision Tree Classifier Imported successfully
2024-02-18 18:54:09,020:INFO:Starting cross validation
2024-02-18 18:54:09,022:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:09,191:INFO:Calculating mean and std
2024-02-18 18:54:09,193:INFO:Creating metrics dataframe
2024-02-18 18:54:09,197:INFO:Uploading results into container
2024-02-18 18:54:09,197:INFO:Uploading model into container now
2024-02-18 18:54:09,197:INFO:_master_model_container: 4
2024-02-18 18:54:09,197:INFO:_display_container: 2
2024-02-18 18:54:09,198:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=476, splitter='best')
2024-02-18 18:54:09,198:INFO:create_model() successfully completed......................................
2024-02-18 18:54:09,330:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:09,330:INFO:Creating metrics dataframe
2024-02-18 18:54:09,352:INFO:Initializing SVM - Linear Kernel
2024-02-18 18:54:09,352:INFO:Total runtime is 0.16103855768839517 minutes
2024-02-18 18:54:09,360:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:09,360:INFO:Initializing create_model()
2024-02-18 18:54:09,361:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AF4FC340>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002118B26E890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:09,361:INFO:Checking exceptions
2024-02-18 18:54:09,361:INFO:Importing libraries
2024-02-18 18:54:09,361:INFO:Copying training dataset
2024-02-18 18:54:09,369:INFO:Defining folds
2024-02-18 18:54:09,370:INFO:Declaring metric variables
2024-02-18 18:54:09,375:INFO:Importing untrained model
2024-02-18 18:54:09,381:INFO:SVM - Linear Kernel Imported successfully
2024-02-18 18:54:09,391:INFO:Starting cross validation
2024-02-18 18:54:09,393:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:09,470:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:54:09,471:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:54:09,481:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:54:09,491:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:54:09,491:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:54:09,492:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:54:09,495:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:54:09,523:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:54:09,537:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:54:09,542:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:54:09,552:INFO:Calculating mean and std
2024-02-18 18:54:09,554:INFO:Creating metrics dataframe
2024-02-18 18:54:09,560:INFO:Uploading results into container
2024-02-18 18:54:09,561:INFO:Uploading model into container now
2024-02-18 18:54:09,561:INFO:_master_model_container: 5
2024-02-18 18:54:09,562:INFO:_display_container: 2
2024-02-18 18:54:09,562:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=476, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-02-18 18:54:09,562:INFO:create_model() successfully completed......................................
2024-02-18 18:54:09,670:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:09,670:INFO:Creating metrics dataframe
2024-02-18 18:54:09,689:INFO:Initializing Ridge Classifier
2024-02-18 18:54:09,690:INFO:Total runtime is 0.1666750152905782 minutes
2024-02-18 18:54:09,696:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:09,696:INFO:Initializing create_model()
2024-02-18 18:54:09,697:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AF4FC340>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002118B26E890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:09,697:INFO:Checking exceptions
2024-02-18 18:54:09,697:INFO:Importing libraries
2024-02-18 18:54:09,697:INFO:Copying training dataset
2024-02-18 18:54:09,707:INFO:Defining folds
2024-02-18 18:54:09,707:INFO:Declaring metric variables
2024-02-18 18:54:09,715:INFO:Importing untrained model
2024-02-18 18:54:09,723:INFO:Ridge Classifier Imported successfully
2024-02-18 18:54:09,734:INFO:Starting cross validation
2024-02-18 18:54:09,736:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:09,774:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.45953e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:54:09,783:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.46249e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:54:09,784:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.46936e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:54:09,785:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:54:09,786:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.45515e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:54:09,793:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:54:09,793:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:54:09,794:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.46175e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:54:09,796:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:54:09,801:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.45473e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:54:09,805:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:54:09,812:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:54:09,813:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.44756e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:54:09,823:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.47369e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:54:09,828:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:54:09,830:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:54:09,831:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.48119e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:54:09,833:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.48984e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:54:09,838:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:54:09,841:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:54:09,856:INFO:Calculating mean and std
2024-02-18 18:54:09,858:INFO:Creating metrics dataframe
2024-02-18 18:54:09,863:INFO:Uploading results into container
2024-02-18 18:54:09,864:INFO:Uploading model into container now
2024-02-18 18:54:09,865:INFO:_master_model_container: 6
2024-02-18 18:54:09,865:INFO:_display_container: 2
2024-02-18 18:54:09,865:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=476, solver='auto',
                tol=0.0001)
2024-02-18 18:54:09,866:INFO:create_model() successfully completed......................................
2024-02-18 18:54:09,989:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:09,989:INFO:Creating metrics dataframe
2024-02-18 18:54:10,010:INFO:Initializing Random Forest Classifier
2024-02-18 18:54:10,011:INFO:Total runtime is 0.17202584743499758 minutes
2024-02-18 18:54:10,019:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:10,020:INFO:Initializing create_model()
2024-02-18 18:54:10,020:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AF4FC340>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002118B26E890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:10,020:INFO:Checking exceptions
2024-02-18 18:54:10,020:INFO:Importing libraries
2024-02-18 18:54:10,020:INFO:Copying training dataset
2024-02-18 18:54:10,037:INFO:Defining folds
2024-02-18 18:54:10,037:INFO:Declaring metric variables
2024-02-18 18:54:10,044:INFO:Importing untrained model
2024-02-18 18:54:10,050:INFO:Random Forest Classifier Imported successfully
2024-02-18 18:54:10,062:INFO:Starting cross validation
2024-02-18 18:54:10,063:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:12,005:INFO:Calculating mean and std
2024-02-18 18:54:12,010:INFO:Creating metrics dataframe
2024-02-18 18:54:12,017:INFO:Uploading results into container
2024-02-18 18:54:12,019:INFO:Uploading model into container now
2024-02-18 18:54:12,020:INFO:_master_model_container: 7
2024-02-18 18:54:12,020:INFO:_display_container: 2
2024-02-18 18:54:12,023:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=476, verbose=0, warm_start=False)
2024-02-18 18:54:12,023:INFO:create_model() successfully completed......................................
2024-02-18 18:54:12,155:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:12,155:INFO:Creating metrics dataframe
2024-02-18 18:54:12,193:INFO:Initializing Quadratic Discriminant Analysis
2024-02-18 18:54:12,193:INFO:Total runtime is 0.2083970109621684 minutes
2024-02-18 18:54:12,205:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:12,205:INFO:Initializing create_model()
2024-02-18 18:54:12,206:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AF4FC340>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002118B26E890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:12,206:INFO:Checking exceptions
2024-02-18 18:54:12,206:INFO:Importing libraries
2024-02-18 18:54:12,206:INFO:Copying training dataset
2024-02-18 18:54:12,216:INFO:Defining folds
2024-02-18 18:54:12,216:INFO:Declaring metric variables
2024-02-18 18:54:12,223:INFO:Importing untrained model
2024-02-18 18:54:12,229:INFO:Quadratic Discriminant Analysis Imported successfully
2024-02-18 18:54:12,242:INFO:Starting cross validation
2024-02-18 18:54:12,243:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:12,407:INFO:Calculating mean and std
2024-02-18 18:54:12,411:INFO:Creating metrics dataframe
2024-02-18 18:54:12,422:INFO:Uploading results into container
2024-02-18 18:54:12,423:INFO:Uploading model into container now
2024-02-18 18:54:12,423:INFO:_master_model_container: 8
2024-02-18 18:54:12,423:INFO:_display_container: 2
2024-02-18 18:54:12,425:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-02-18 18:54:12,425:INFO:create_model() successfully completed......................................
2024-02-18 18:54:12,561:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:12,562:INFO:Creating metrics dataframe
2024-02-18 18:54:12,591:INFO:Initializing Ada Boost Classifier
2024-02-18 18:54:12,591:INFO:Total runtime is 0.21502991517384848 minutes
2024-02-18 18:54:12,604:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:12,604:INFO:Initializing create_model()
2024-02-18 18:54:12,604:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AF4FC340>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002118B26E890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:12,604:INFO:Checking exceptions
2024-02-18 18:54:12,605:INFO:Importing libraries
2024-02-18 18:54:12,605:INFO:Copying training dataset
2024-02-18 18:54:12,615:INFO:Defining folds
2024-02-18 18:54:12,616:INFO:Declaring metric variables
2024-02-18 18:54:12,625:INFO:Importing untrained model
2024-02-18 18:54:12,629:INFO:Ada Boost Classifier Imported successfully
2024-02-18 18:54:12,638:INFO:Starting cross validation
2024-02-18 18:54:12,639:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:13,754:INFO:Calculating mean and std
2024-02-18 18:54:13,757:INFO:Creating metrics dataframe
2024-02-18 18:54:13,768:INFO:Uploading results into container
2024-02-18 18:54:13,769:INFO:Uploading model into container now
2024-02-18 18:54:13,770:INFO:_master_model_container: 9
2024-02-18 18:54:13,771:INFO:_display_container: 2
2024-02-18 18:54:13,772:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=476)
2024-02-18 18:54:13,772:INFO:create_model() successfully completed......................................
2024-02-18 18:54:13,899:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:13,899:INFO:Creating metrics dataframe
2024-02-18 18:54:13,920:INFO:Initializing Gradient Boosting Classifier
2024-02-18 18:54:13,920:INFO:Total runtime is 0.23718328873316447 minutes
2024-02-18 18:54:13,925:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:13,925:INFO:Initializing create_model()
2024-02-18 18:54:13,925:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AF4FC340>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002118B26E890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:13,926:INFO:Checking exceptions
2024-02-18 18:54:13,926:INFO:Importing libraries
2024-02-18 18:54:13,926:INFO:Copying training dataset
2024-02-18 18:54:13,934:INFO:Defining folds
2024-02-18 18:54:13,934:INFO:Declaring metric variables
2024-02-18 18:54:13,940:INFO:Importing untrained model
2024-02-18 18:54:13,948:INFO:Gradient Boosting Classifier Imported successfully
2024-02-18 18:54:13,958:INFO:Starting cross validation
2024-02-18 18:54:13,960:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:17,034:INFO:Calculating mean and std
2024-02-18 18:54:17,038:INFO:Creating metrics dataframe
2024-02-18 18:54:17,047:INFO:Uploading results into container
2024-02-18 18:54:17,048:INFO:Uploading model into container now
2024-02-18 18:54:17,049:INFO:_master_model_container: 10
2024-02-18 18:54:17,050:INFO:_display_container: 2
2024-02-18 18:54:17,051:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=476, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-18 18:54:17,051:INFO:create_model() successfully completed......................................
2024-02-18 18:54:17,181:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:17,181:INFO:Creating metrics dataframe
2024-02-18 18:54:17,210:INFO:Initializing Linear Discriminant Analysis
2024-02-18 18:54:17,210:INFO:Total runtime is 0.29201451937357586 minutes
2024-02-18 18:54:17,223:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:17,224:INFO:Initializing create_model()
2024-02-18 18:54:17,224:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AF4FC340>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002118B26E890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:17,224:INFO:Checking exceptions
2024-02-18 18:54:17,224:INFO:Importing libraries
2024-02-18 18:54:17,224:INFO:Copying training dataset
2024-02-18 18:54:17,239:INFO:Defining folds
2024-02-18 18:54:17,239:INFO:Declaring metric variables
2024-02-18 18:54:17,249:INFO:Importing untrained model
2024-02-18 18:54:17,257:INFO:Linear Discriminant Analysis Imported successfully
2024-02-18 18:54:17,272:INFO:Starting cross validation
2024-02-18 18:54:17,275:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:17,484:INFO:Calculating mean and std
2024-02-18 18:54:17,485:INFO:Creating metrics dataframe
2024-02-18 18:54:17,491:INFO:Uploading results into container
2024-02-18 18:54:17,492:INFO:Uploading model into container now
2024-02-18 18:54:17,493:INFO:_master_model_container: 11
2024-02-18 18:54:17,493:INFO:_display_container: 2
2024-02-18 18:54:17,493:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-02-18 18:54:17,494:INFO:create_model() successfully completed......................................
2024-02-18 18:54:17,634:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:17,635:INFO:Creating metrics dataframe
2024-02-18 18:54:17,663:INFO:Initializing Extra Trees Classifier
2024-02-18 18:54:17,663:INFO:Total runtime is 0.29955899318059287 minutes
2024-02-18 18:54:17,671:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:17,672:INFO:Initializing create_model()
2024-02-18 18:54:17,672:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AF4FC340>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002118B26E890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:17,673:INFO:Checking exceptions
2024-02-18 18:54:17,673:INFO:Importing libraries
2024-02-18 18:54:17,673:INFO:Copying training dataset
2024-02-18 18:54:17,696:INFO:Defining folds
2024-02-18 18:54:17,701:INFO:Declaring metric variables
2024-02-18 18:54:17,709:INFO:Importing untrained model
2024-02-18 18:54:17,715:INFO:Extra Trees Classifier Imported successfully
2024-02-18 18:54:17,731:INFO:Starting cross validation
2024-02-18 18:54:17,732:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:19,776:INFO:Calculating mean and std
2024-02-18 18:54:19,782:INFO:Creating metrics dataframe
2024-02-18 18:54:19,793:INFO:Uploading results into container
2024-02-18 18:54:19,796:INFO:Uploading model into container now
2024-02-18 18:54:19,798:INFO:_master_model_container: 12
2024-02-18 18:54:19,798:INFO:_display_container: 2
2024-02-18 18:54:19,799:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=476, verbose=0, warm_start=False)
2024-02-18 18:54:19,799:INFO:create_model() successfully completed......................................
2024-02-18 18:54:19,945:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:19,945:INFO:Creating metrics dataframe
2024-02-18 18:54:19,983:INFO:Initializing Light Gradient Boosting Machine
2024-02-18 18:54:19,983:INFO:Total runtime is 0.3382222930590312 minutes
2024-02-18 18:54:19,991:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:19,992:INFO:Initializing create_model()
2024-02-18 18:54:19,993:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AF4FC340>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002118B26E890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:19,994:INFO:Checking exceptions
2024-02-18 18:54:19,994:INFO:Importing libraries
2024-02-18 18:54:19,994:INFO:Copying training dataset
2024-02-18 18:54:20,012:INFO:Defining folds
2024-02-18 18:54:20,013:INFO:Declaring metric variables
2024-02-18 18:54:20,022:INFO:Importing untrained model
2024-02-18 18:54:20,035:INFO:Light Gradient Boosting Machine Imported successfully
2024-02-18 18:54:20,052:INFO:Starting cross validation
2024-02-18 18:54:20,055:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:21,765:INFO:Calculating mean and std
2024-02-18 18:54:21,768:INFO:Creating metrics dataframe
2024-02-18 18:54:21,776:INFO:Uploading results into container
2024-02-18 18:54:21,777:INFO:Uploading model into container now
2024-02-18 18:54:21,778:INFO:_master_model_container: 13
2024-02-18 18:54:21,778:INFO:_display_container: 2
2024-02-18 18:54:21,779:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=476, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-02-18 18:54:21,779:INFO:create_model() successfully completed......................................
2024-02-18 18:54:21,903:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:21,903:INFO:Creating metrics dataframe
2024-02-18 18:54:21,939:INFO:Initializing Dummy Classifier
2024-02-18 18:54:21,940:INFO:Total runtime is 0.37083844741185507 minutes
2024-02-18 18:54:21,951:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:21,952:INFO:Initializing create_model()
2024-02-18 18:54:21,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AF4FC340>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002118B26E890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:21,952:INFO:Checking exceptions
2024-02-18 18:54:21,952:INFO:Importing libraries
2024-02-18 18:54:21,952:INFO:Copying training dataset
2024-02-18 18:54:21,968:INFO:Defining folds
2024-02-18 18:54:21,968:INFO:Declaring metric variables
2024-02-18 18:54:21,980:INFO:Importing untrained model
2024-02-18 18:54:21,988:INFO:Dummy Classifier Imported successfully
2024-02-18 18:54:22,003:INFO:Starting cross validation
2024-02-18 18:54:22,007:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:22,096:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:54:22,112:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:54:22,118:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:54:22,129:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:54:22,130:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:54:22,134:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:54:22,148:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:54:22,162:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:54:22,165:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:54:22,180:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:54:22,196:INFO:Calculating mean and std
2024-02-18 18:54:22,198:INFO:Creating metrics dataframe
2024-02-18 18:54:22,206:INFO:Uploading results into container
2024-02-18 18:54:22,208:INFO:Uploading model into container now
2024-02-18 18:54:22,209:INFO:_master_model_container: 14
2024-02-18 18:54:22,210:INFO:_display_container: 2
2024-02-18 18:54:22,210:INFO:DummyClassifier(constant=None, random_state=476, strategy='prior')
2024-02-18 18:54:22,210:INFO:create_model() successfully completed......................................
2024-02-18 18:54:22,346:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:22,347:INFO:Creating metrics dataframe
2024-02-18 18:54:22,394:INFO:Initializing create_model()
2024-02-18 18:54:22,394:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AF4FC340>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=476, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:22,395:INFO:Checking exceptions
2024-02-18 18:54:22,400:INFO:Importing libraries
2024-02-18 18:54:22,400:INFO:Copying training dataset
2024-02-18 18:54:22,407:INFO:Defining folds
2024-02-18 18:54:22,408:INFO:Declaring metric variables
2024-02-18 18:54:22,408:INFO:Importing untrained model
2024-02-18 18:54:22,408:INFO:Declaring custom model
2024-02-18 18:54:22,411:INFO:Logistic Regression Imported successfully
2024-02-18 18:54:22,413:INFO:Cross validation set to False
2024-02-18 18:54:22,413:INFO:Fitting Model
2024-02-18 18:54:22,634:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=476, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-18 18:54:22,634:INFO:create_model() successfully completed......................................
2024-02-18 18:54:22,800:INFO:_master_model_container: 14
2024-02-18 18:54:22,800:INFO:_display_container: 2
2024-02-18 18:54:22,801:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=476, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-18 18:54:22,801:INFO:compare_models() successfully completed......................................
2024-02-18 18:54:46,108:INFO:PyCaret ClassificationExperiment
2024-02-18 18:54:46,108:INFO:Logging name: clf-default-name
2024-02-18 18:54:46,108:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-18 18:54:46,108:INFO:version 3.2.0
2024-02-18 18:54:46,108:INFO:Initializing setup()
2024-02-18 18:54:46,108:INFO:self.USI: c27b
2024-02-18 18:54:46,108:INFO:self._variable_keys: {'X_test', 'fold_groups_param', 'fix_imbalance', 'memory', 'gpu_n_jobs_param', '_available_plots', 'y_train', '_ml_usecase', 'target_param', 'fold_generator', 'data', 'exp_id', 'idx', 'y', 'X', 'n_jobs_param', 'seed', 'gpu_param', 'html_param', 'X_train', 'logging_param', 'is_multiclass', 'USI', 'pipeline', 'exp_name_log', 'y_test', 'fold_shuffle_param', 'log_plots_param'}
2024-02-18 18:54:46,109:INFO:Checking environment
2024-02-18 18:54:46,109:INFO:python_version: 3.10.13
2024-02-18 18:54:46,109:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2024-02-18 18:54:46,109:INFO:machine: AMD64
2024-02-18 18:54:46,109:INFO:platform: Windows-10-10.0.22621-SP0
2024-02-18 18:54:46,113:INFO:Memory: svmem(total=16952647680, available=4841295872, percent=71.4, used=12111351808, free=4841295872)
2024-02-18 18:54:46,114:INFO:Physical Core: 4
2024-02-18 18:54:46,114:INFO:Logical Core: 8
2024-02-18 18:54:46,114:INFO:Checking libraries
2024-02-18 18:54:46,114:INFO:System:
2024-02-18 18:54:46,114:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2024-02-18 18:54:46,114:INFO:executable: C:\Users\santh\anaconda3\envs\msds\python.exe
2024-02-18 18:54:46,114:INFO:   machine: Windows-10-10.0.22621-SP0
2024-02-18 18:54:46,114:INFO:PyCaret required dependencies:
2024-02-18 18:54:46,114:INFO:                 pip: 23.3.1
2024-02-18 18:54:46,115:INFO:          setuptools: 68.2.2
2024-02-18 18:54:46,115:INFO:             pycaret: 3.2.0
2024-02-18 18:54:46,115:INFO:             IPython: 8.20.0
2024-02-18 18:54:46,115:INFO:          ipywidgets: 8.0.4
2024-02-18 18:54:46,115:INFO:                tqdm: 4.65.0
2024-02-18 18:54:46,115:INFO:               numpy: 1.25.2
2024-02-18 18:54:46,115:INFO:              pandas: 1.5.3
2024-02-18 18:54:46,115:INFO:              jinja2: 3.1.3
2024-02-18 18:54:46,115:INFO:               scipy: 1.10.1
2024-02-18 18:54:46,115:INFO:              joblib: 1.2.0
2024-02-18 18:54:46,115:INFO:             sklearn: 1.2.2
2024-02-18 18:54:46,115:INFO:                pyod: 1.1.3
2024-02-18 18:54:46,115:INFO:            imblearn: 0.11.0
2024-02-18 18:54:46,115:INFO:   category_encoders: 2.6.3
2024-02-18 18:54:46,115:INFO:            lightgbm: 4.3.0
2024-02-18 18:54:46,115:INFO:               numba: 0.59.0
2024-02-18 18:54:46,115:INFO:            requests: 2.31.0
2024-02-18 18:54:46,117:INFO:          matplotlib: 3.6.0
2024-02-18 18:54:46,117:INFO:          scikitplot: 0.3.7
2024-02-18 18:54:46,117:INFO:         yellowbrick: 1.5
2024-02-18 18:54:46,117:INFO:              plotly: 5.9.0
2024-02-18 18:54:46,117:INFO:    plotly-resampler: Not installed
2024-02-18 18:54:46,117:INFO:             kaleido: 0.2.1
2024-02-18 18:54:46,117:INFO:           schemdraw: 0.15
2024-02-18 18:54:46,117:INFO:         statsmodels: 0.14.0
2024-02-18 18:54:46,117:INFO:              sktime: 0.21.1
2024-02-18 18:54:46,117:INFO:               tbats: 1.1.3
2024-02-18 18:54:46,117:INFO:            pmdarima: 2.0.4
2024-02-18 18:54:46,117:INFO:              psutil: 5.9.0
2024-02-18 18:54:46,117:INFO:          markupsafe: 2.1.3
2024-02-18 18:54:46,117:INFO:             pickle5: Not installed
2024-02-18 18:54:46,117:INFO:         cloudpickle: 2.2.1
2024-02-18 18:54:46,118:INFO:         deprecation: 2.1.0
2024-02-18 18:54:46,118:INFO:              xxhash: 2.0.2
2024-02-18 18:54:46,118:INFO:           wurlitzer: Not installed
2024-02-18 18:54:46,118:INFO:PyCaret optional dependencies:
2024-02-18 18:54:46,118:INFO:                shap: Not installed
2024-02-18 18:54:46,118:INFO:           interpret: Not installed
2024-02-18 18:54:46,118:INFO:                umap: Not installed
2024-02-18 18:54:46,118:INFO:     ydata_profiling: Not installed
2024-02-18 18:54:46,118:INFO:  explainerdashboard: Not installed
2024-02-18 18:54:46,118:INFO:             autoviz: Not installed
2024-02-18 18:54:46,118:INFO:           fairlearn: Not installed
2024-02-18 18:54:46,118:INFO:          deepchecks: Not installed
2024-02-18 18:54:46,118:INFO:             xgboost: Not installed
2024-02-18 18:54:46,118:INFO:            catboost: Not installed
2024-02-18 18:54:46,118:INFO:              kmodes: Not installed
2024-02-18 18:54:46,118:INFO:             mlxtend: Not installed
2024-02-18 18:54:46,118:INFO:       statsforecast: Not installed
2024-02-18 18:54:46,118:INFO:        tune_sklearn: Not installed
2024-02-18 18:54:46,118:INFO:                 ray: Not installed
2024-02-18 18:54:46,119:INFO:            hyperopt: Not installed
2024-02-18 18:54:46,119:INFO:              optuna: Not installed
2024-02-18 18:54:46,119:INFO:               skopt: Not installed
2024-02-18 18:54:46,119:INFO:              mlflow: Not installed
2024-02-18 18:54:46,119:INFO:              gradio: Not installed
2024-02-18 18:54:46,119:INFO:             fastapi: Not installed
2024-02-18 18:54:46,119:INFO:             uvicorn: Not installed
2024-02-18 18:54:46,119:INFO:              m2cgen: Not installed
2024-02-18 18:54:46,119:INFO:           evidently: Not installed
2024-02-18 18:54:46,119:INFO:               fugue: Not installed
2024-02-18 18:54:46,119:INFO:           streamlit: Not installed
2024-02-18 18:54:46,119:INFO:             prophet: Not installed
2024-02-18 18:54:46,119:INFO:None
2024-02-18 18:54:46,119:INFO:Set up data.
2024-02-18 18:54:46,128:INFO:Set up folding strategy.
2024-02-18 18:54:46,128:INFO:Set up train/test split.
2024-02-18 18:54:46,139:INFO:Set up index.
2024-02-18 18:54:46,140:INFO:Assigning column types.
2024-02-18 18:54:46,144:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-18 18:54:46,197:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-18 18:54:46,197:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 18:54:46,256:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:54:46,257:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:54:46,367:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-18 18:54:46,368:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 18:54:46,410:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:54:46,410:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:54:46,411:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-18 18:54:46,478:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 18:54:46,513:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:54:46,514:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:54:46,577:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 18:54:46,615:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:54:46,616:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:54:46,616:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-18 18:54:46,700:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:54:46,701:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:54:46,809:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:54:46,809:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:54:46,810:INFO:Preparing preprocessing pipeline...
2024-02-18 18:54:46,811:INFO:Set up simple imputation.
2024-02-18 18:54:46,849:INFO:Finished creating preprocessing pipeline.
2024-02-18 18:54:46,856:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\santh\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-18 18:54:46,856:INFO:Creating final display dataframe.
2024-02-18 18:54:47,013:INFO:Setup _display_container:                     Description             Value
0                    Session id              7036
1                        Target             Churn
2                   Target type            Binary
3           Original data shape         (7043, 8)
4        Transformed data shape         (7043, 8)
5   Transformed train set shape         (4930, 8)
6    Transformed test set shape         (2113, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              c27b
2024-02-18 18:54:47,165:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:54:47,166:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:54:47,292:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:54:47,292:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 18:54:47,293:INFO:setup() successfully completed in 1.19s...............
2024-02-18 18:54:49,455:INFO:Initializing compare_models()
2024-02-18 18:54:49,455:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AEEB8FA0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000211AEEB8FA0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-02-18 18:54:49,455:INFO:Checking exceptions
2024-02-18 18:54:49,460:INFO:Preparing display monitor
2024-02-18 18:54:49,505:INFO:Initializing Logistic Regression
2024-02-18 18:54:49,505:INFO:Total runtime is 0.0 minutes
2024-02-18 18:54:49,515:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:49,516:INFO:Initializing create_model()
2024-02-18 18:54:49,516:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AEEB8FA0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B172FEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:49,516:INFO:Checking exceptions
2024-02-18 18:54:49,517:INFO:Importing libraries
2024-02-18 18:54:49,517:INFO:Copying training dataset
2024-02-18 18:54:49,523:INFO:Defining folds
2024-02-18 18:54:49,523:INFO:Declaring metric variables
2024-02-18 18:54:49,527:INFO:Importing untrained model
2024-02-18 18:54:49,533:INFO:Logistic Regression Imported successfully
2024-02-18 18:54:49,543:INFO:Starting cross validation
2024-02-18 18:54:49,544:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:49,761:INFO:Calculating mean and std
2024-02-18 18:54:49,761:INFO:Creating metrics dataframe
2024-02-18 18:54:49,766:INFO:Uploading results into container
2024-02-18 18:54:49,767:INFO:Uploading model into container now
2024-02-18 18:54:49,767:INFO:_master_model_container: 1
2024-02-18 18:54:49,767:INFO:_display_container: 2
2024-02-18 18:54:49,768:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7036, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-18 18:54:49,768:INFO:create_model() successfully completed......................................
2024-02-18 18:54:49,862:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:49,862:INFO:Creating metrics dataframe
2024-02-18 18:54:49,880:INFO:Initializing K Neighbors Classifier
2024-02-18 18:54:49,881:INFO:Total runtime is 0.006258964538574219 minutes
2024-02-18 18:54:49,886:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:49,887:INFO:Initializing create_model()
2024-02-18 18:54:49,887:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AEEB8FA0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B172FEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:49,887:INFO:Checking exceptions
2024-02-18 18:54:49,887:INFO:Importing libraries
2024-02-18 18:54:49,888:INFO:Copying training dataset
2024-02-18 18:54:49,895:INFO:Defining folds
2024-02-18 18:54:49,896:INFO:Declaring metric variables
2024-02-18 18:54:49,901:INFO:Importing untrained model
2024-02-18 18:54:49,907:INFO:K Neighbors Classifier Imported successfully
2024-02-18 18:54:49,916:INFO:Starting cross validation
2024-02-18 18:54:49,918:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:50,148:INFO:Calculating mean and std
2024-02-18 18:54:50,148:INFO:Creating metrics dataframe
2024-02-18 18:54:50,151:INFO:Uploading results into container
2024-02-18 18:54:50,153:INFO:Uploading model into container now
2024-02-18 18:54:50,153:INFO:_master_model_container: 2
2024-02-18 18:54:50,153:INFO:_display_container: 2
2024-02-18 18:54:50,153:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-18 18:54:50,153:INFO:create_model() successfully completed......................................
2024-02-18 18:54:50,240:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:50,240:INFO:Creating metrics dataframe
2024-02-18 18:54:50,257:INFO:Initializing Naive Bayes
2024-02-18 18:54:50,257:INFO:Total runtime is 0.012524751822153728 minutes
2024-02-18 18:54:50,262:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:50,262:INFO:Initializing create_model()
2024-02-18 18:54:50,263:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AEEB8FA0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B172FEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:50,263:INFO:Checking exceptions
2024-02-18 18:54:50,263:INFO:Importing libraries
2024-02-18 18:54:50,263:INFO:Copying training dataset
2024-02-18 18:54:50,276:INFO:Defining folds
2024-02-18 18:54:50,277:INFO:Declaring metric variables
2024-02-18 18:54:50,285:INFO:Importing untrained model
2024-02-18 18:54:50,291:INFO:Naive Bayes Imported successfully
2024-02-18 18:54:50,303:INFO:Starting cross validation
2024-02-18 18:54:50,307:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:50,435:INFO:Calculating mean and std
2024-02-18 18:54:50,435:INFO:Creating metrics dataframe
2024-02-18 18:54:50,438:INFO:Uploading results into container
2024-02-18 18:54:50,439:INFO:Uploading model into container now
2024-02-18 18:54:50,439:INFO:_master_model_container: 3
2024-02-18 18:54:50,439:INFO:_display_container: 2
2024-02-18 18:54:50,439:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-02-18 18:54:50,439:INFO:create_model() successfully completed......................................
2024-02-18 18:54:50,565:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:50,565:INFO:Creating metrics dataframe
2024-02-18 18:54:50,583:INFO:Initializing Decision Tree Classifier
2024-02-18 18:54:50,583:INFO:Total runtime is 0.017958569526672363 minutes
2024-02-18 18:54:50,591:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:50,591:INFO:Initializing create_model()
2024-02-18 18:54:50,591:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AEEB8FA0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B172FEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:50,591:INFO:Checking exceptions
2024-02-18 18:54:50,591:INFO:Importing libraries
2024-02-18 18:54:50,591:INFO:Copying training dataset
2024-02-18 18:54:50,600:INFO:Defining folds
2024-02-18 18:54:50,601:INFO:Declaring metric variables
2024-02-18 18:54:50,606:INFO:Importing untrained model
2024-02-18 18:54:50,613:INFO:Decision Tree Classifier Imported successfully
2024-02-18 18:54:50,624:INFO:Starting cross validation
2024-02-18 18:54:50,625:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:50,790:INFO:Calculating mean and std
2024-02-18 18:54:50,792:INFO:Creating metrics dataframe
2024-02-18 18:54:50,795:INFO:Uploading results into container
2024-02-18 18:54:50,796:INFO:Uploading model into container now
2024-02-18 18:54:50,797:INFO:_master_model_container: 4
2024-02-18 18:54:50,797:INFO:_display_container: 2
2024-02-18 18:54:50,797:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7036, splitter='best')
2024-02-18 18:54:50,797:INFO:create_model() successfully completed......................................
2024-02-18 18:54:50,880:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:50,880:INFO:Creating metrics dataframe
2024-02-18 18:54:50,916:INFO:Initializing SVM - Linear Kernel
2024-02-18 18:54:50,916:INFO:Total runtime is 0.02351249059041341 minutes
2024-02-18 18:54:50,921:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:50,921:INFO:Initializing create_model()
2024-02-18 18:54:50,922:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AEEB8FA0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B172FEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:50,922:INFO:Checking exceptions
2024-02-18 18:54:50,922:INFO:Importing libraries
2024-02-18 18:54:50,923:INFO:Copying training dataset
2024-02-18 18:54:50,932:INFO:Defining folds
2024-02-18 18:54:50,933:INFO:Declaring metric variables
2024-02-18 18:54:50,944:INFO:Importing untrained model
2024-02-18 18:54:50,951:INFO:SVM - Linear Kernel Imported successfully
2024-02-18 18:54:50,962:INFO:Starting cross validation
2024-02-18 18:54:50,964:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:51,062:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:54:51,062:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:54:51,064:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:54:51,083:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:54:51,084:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:54:51,089:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:54:51,108:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:54:51,116:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:54:51,131:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:54:51,133:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 18:54:51,142:INFO:Calculating mean and std
2024-02-18 18:54:51,144:INFO:Creating metrics dataframe
2024-02-18 18:54:51,148:INFO:Uploading results into container
2024-02-18 18:54:51,149:INFO:Uploading model into container now
2024-02-18 18:54:51,150:INFO:_master_model_container: 5
2024-02-18 18:54:51,150:INFO:_display_container: 2
2024-02-18 18:54:51,151:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7036, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-02-18 18:54:51,151:INFO:create_model() successfully completed......................................
2024-02-18 18:54:51,235:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:51,235:INFO:Creating metrics dataframe
2024-02-18 18:54:51,246:INFO:Initializing Ridge Classifier
2024-02-18 18:54:51,246:INFO:Total runtime is 0.02900829712549845 minutes
2024-02-18 18:54:51,257:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:51,258:INFO:Initializing create_model()
2024-02-18 18:54:51,259:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AEEB8FA0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B172FEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:51,259:INFO:Checking exceptions
2024-02-18 18:54:51,259:INFO:Importing libraries
2024-02-18 18:54:51,260:INFO:Copying training dataset
2024-02-18 18:54:51,272:INFO:Defining folds
2024-02-18 18:54:51,272:INFO:Declaring metric variables
2024-02-18 18:54:51,282:INFO:Importing untrained model
2024-02-18 18:54:51,289:INFO:Ridge Classifier Imported successfully
2024-02-18 18:54:51,303:INFO:Starting cross validation
2024-02-18 18:54:51,304:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:51,358:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.43645e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:54:51,365:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.49082e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:54:51,366:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.46542e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:54:51,371:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:54:51,380:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:54:51,381:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:54:51,388:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.47631e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:54:51,391:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:54:51,395:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.50956e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:54:51,401:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:54:51,404:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:54:51,405:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.49695e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:54:51,407:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.51183e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:54:51,413:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.5328e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:54:51,414:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:54:51,415:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:54:51,420:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.47911e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 18:54:51,421:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:54:51,429:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 18:54:51,439:INFO:Calculating mean and std
2024-02-18 18:54:51,440:INFO:Creating metrics dataframe
2024-02-18 18:54:51,444:INFO:Uploading results into container
2024-02-18 18:54:51,444:INFO:Uploading model into container now
2024-02-18 18:54:51,444:INFO:_master_model_container: 6
2024-02-18 18:54:51,445:INFO:_display_container: 2
2024-02-18 18:54:51,445:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7036, solver='auto',
                tol=0.0001)
2024-02-18 18:54:51,445:INFO:create_model() successfully completed......................................
2024-02-18 18:54:51,534:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:51,534:INFO:Creating metrics dataframe
2024-02-18 18:54:51,545:INFO:Initializing Random Forest Classifier
2024-02-18 18:54:51,545:INFO:Total runtime is 0.033998179435729976 minutes
2024-02-18 18:54:51,550:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:51,550:INFO:Initializing create_model()
2024-02-18 18:54:51,551:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AEEB8FA0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B172FEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:51,551:INFO:Checking exceptions
2024-02-18 18:54:51,551:INFO:Importing libraries
2024-02-18 18:54:51,551:INFO:Copying training dataset
2024-02-18 18:54:51,559:INFO:Defining folds
2024-02-18 18:54:51,559:INFO:Declaring metric variables
2024-02-18 18:54:51,562:INFO:Importing untrained model
2024-02-18 18:54:51,566:INFO:Random Forest Classifier Imported successfully
2024-02-18 18:54:51,576:INFO:Starting cross validation
2024-02-18 18:54:51,577:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:53,222:INFO:Calculating mean and std
2024-02-18 18:54:53,224:INFO:Creating metrics dataframe
2024-02-18 18:54:53,228:INFO:Uploading results into container
2024-02-18 18:54:53,229:INFO:Uploading model into container now
2024-02-18 18:54:53,230:INFO:_master_model_container: 7
2024-02-18 18:54:53,230:INFO:_display_container: 2
2024-02-18 18:54:53,231:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7036, verbose=0, warm_start=False)
2024-02-18 18:54:53,231:INFO:create_model() successfully completed......................................
2024-02-18 18:54:53,343:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:53,344:INFO:Creating metrics dataframe
2024-02-18 18:54:53,361:INFO:Initializing Quadratic Discriminant Analysis
2024-02-18 18:54:53,361:INFO:Total runtime is 0.06425813436508178 minutes
2024-02-18 18:54:53,387:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:53,387:INFO:Initializing create_model()
2024-02-18 18:54:53,387:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AEEB8FA0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B172FEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:53,387:INFO:Checking exceptions
2024-02-18 18:54:53,388:INFO:Importing libraries
2024-02-18 18:54:53,388:INFO:Copying training dataset
2024-02-18 18:54:53,397:INFO:Defining folds
2024-02-18 18:54:53,397:INFO:Declaring metric variables
2024-02-18 18:54:53,406:INFO:Importing untrained model
2024-02-18 18:54:53,414:INFO:Quadratic Discriminant Analysis Imported successfully
2024-02-18 18:54:53,431:INFO:Starting cross validation
2024-02-18 18:54:53,434:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:53,576:INFO:Calculating mean and std
2024-02-18 18:54:53,578:INFO:Creating metrics dataframe
2024-02-18 18:54:53,584:INFO:Uploading results into container
2024-02-18 18:54:53,585:INFO:Uploading model into container now
2024-02-18 18:54:53,586:INFO:_master_model_container: 8
2024-02-18 18:54:53,587:INFO:_display_container: 2
2024-02-18 18:54:53,588:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-02-18 18:54:53,588:INFO:create_model() successfully completed......................................
2024-02-18 18:54:53,683:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:53,684:INFO:Creating metrics dataframe
2024-02-18 18:54:53,726:INFO:Initializing Ada Boost Classifier
2024-02-18 18:54:53,726:INFO:Total runtime is 0.07035455306371052 minutes
2024-02-18 18:54:53,732:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:53,732:INFO:Initializing create_model()
2024-02-18 18:54:53,733:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AEEB8FA0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B172FEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:53,733:INFO:Checking exceptions
2024-02-18 18:54:53,733:INFO:Importing libraries
2024-02-18 18:54:53,733:INFO:Copying training dataset
2024-02-18 18:54:53,740:INFO:Defining folds
2024-02-18 18:54:53,740:INFO:Declaring metric variables
2024-02-18 18:54:53,745:INFO:Importing untrained model
2024-02-18 18:54:53,751:INFO:Ada Boost Classifier Imported successfully
2024-02-18 18:54:53,760:INFO:Starting cross validation
2024-02-18 18:54:53,761:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:54,530:INFO:Calculating mean and std
2024-02-18 18:54:54,531:INFO:Creating metrics dataframe
2024-02-18 18:54:54,534:INFO:Uploading results into container
2024-02-18 18:54:54,535:INFO:Uploading model into container now
2024-02-18 18:54:54,536:INFO:_master_model_container: 9
2024-02-18 18:54:54,536:INFO:_display_container: 2
2024-02-18 18:54:54,537:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7036)
2024-02-18 18:54:54,537:INFO:create_model() successfully completed......................................
2024-02-18 18:54:54,649:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:54,649:INFO:Creating metrics dataframe
2024-02-18 18:54:54,665:INFO:Initializing Gradient Boosting Classifier
2024-02-18 18:54:54,666:INFO:Total runtime is 0.08601043224334716 minutes
2024-02-18 18:54:54,672:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:54,672:INFO:Initializing create_model()
2024-02-18 18:54:54,672:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AEEB8FA0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B172FEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:54,672:INFO:Checking exceptions
2024-02-18 18:54:54,673:INFO:Importing libraries
2024-02-18 18:54:54,673:INFO:Copying training dataset
2024-02-18 18:54:54,681:INFO:Defining folds
2024-02-18 18:54:54,681:INFO:Declaring metric variables
2024-02-18 18:54:54,688:INFO:Importing untrained model
2024-02-18 18:54:54,694:INFO:Gradient Boosting Classifier Imported successfully
2024-02-18 18:54:54,703:INFO:Starting cross validation
2024-02-18 18:54:54,705:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:56,878:INFO:Calculating mean and std
2024-02-18 18:54:56,880:INFO:Creating metrics dataframe
2024-02-18 18:54:56,885:INFO:Uploading results into container
2024-02-18 18:54:56,885:INFO:Uploading model into container now
2024-02-18 18:54:56,886:INFO:_master_model_container: 10
2024-02-18 18:54:56,886:INFO:_display_container: 2
2024-02-18 18:54:56,887:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7036, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-18 18:54:56,887:INFO:create_model() successfully completed......................................
2024-02-18 18:54:56,985:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:56,985:INFO:Creating metrics dataframe
2024-02-18 18:54:57,010:INFO:Initializing Linear Discriminant Analysis
2024-02-18 18:54:57,010:INFO:Total runtime is 0.12508525053660074 minutes
2024-02-18 18:54:57,016:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:57,017:INFO:Initializing create_model()
2024-02-18 18:54:57,017:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AEEB8FA0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B172FEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:57,017:INFO:Checking exceptions
2024-02-18 18:54:57,018:INFO:Importing libraries
2024-02-18 18:54:57,018:INFO:Copying training dataset
2024-02-18 18:54:57,037:INFO:Defining folds
2024-02-18 18:54:57,037:INFO:Declaring metric variables
2024-02-18 18:54:57,043:INFO:Importing untrained model
2024-02-18 18:54:57,047:INFO:Linear Discriminant Analysis Imported successfully
2024-02-18 18:54:57,060:INFO:Starting cross validation
2024-02-18 18:54:57,061:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:57,188:INFO:Calculating mean and std
2024-02-18 18:54:57,190:INFO:Creating metrics dataframe
2024-02-18 18:54:57,195:INFO:Uploading results into container
2024-02-18 18:54:57,196:INFO:Uploading model into container now
2024-02-18 18:54:57,197:INFO:_master_model_container: 11
2024-02-18 18:54:57,197:INFO:_display_container: 2
2024-02-18 18:54:57,197:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-02-18 18:54:57,198:INFO:create_model() successfully completed......................................
2024-02-18 18:54:57,308:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:57,308:INFO:Creating metrics dataframe
2024-02-18 18:54:57,324:INFO:Initializing Extra Trees Classifier
2024-02-18 18:54:57,325:INFO:Total runtime is 0.13032544453938802 minutes
2024-02-18 18:54:57,329:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:57,329:INFO:Initializing create_model()
2024-02-18 18:54:57,329:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AEEB8FA0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B172FEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:57,329:INFO:Checking exceptions
2024-02-18 18:54:57,329:INFO:Importing libraries
2024-02-18 18:54:57,329:INFO:Copying training dataset
2024-02-18 18:54:57,336:INFO:Defining folds
2024-02-18 18:54:57,336:INFO:Declaring metric variables
2024-02-18 18:54:57,342:INFO:Importing untrained model
2024-02-18 18:54:57,348:INFO:Extra Trees Classifier Imported successfully
2024-02-18 18:54:57,364:INFO:Starting cross validation
2024-02-18 18:54:57,365:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:58,535:INFO:Calculating mean and std
2024-02-18 18:54:58,538:INFO:Creating metrics dataframe
2024-02-18 18:54:58,543:INFO:Uploading results into container
2024-02-18 18:54:58,544:INFO:Uploading model into container now
2024-02-18 18:54:58,545:INFO:_master_model_container: 12
2024-02-18 18:54:58,545:INFO:_display_container: 2
2024-02-18 18:54:58,546:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=7036, verbose=0, warm_start=False)
2024-02-18 18:54:58,547:INFO:create_model() successfully completed......................................
2024-02-18 18:54:58,652:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:58,652:INFO:Creating metrics dataframe
2024-02-18 18:54:58,669:INFO:Initializing Light Gradient Boosting Machine
2024-02-18 18:54:58,670:INFO:Total runtime is 0.15275583664576212 minutes
2024-02-18 18:54:58,682:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:58,683:INFO:Initializing create_model()
2024-02-18 18:54:58,683:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AEEB8FA0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B172FEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:58,683:INFO:Checking exceptions
2024-02-18 18:54:58,683:INFO:Importing libraries
2024-02-18 18:54:58,684:INFO:Copying training dataset
2024-02-18 18:54:58,701:INFO:Defining folds
2024-02-18 18:54:58,701:INFO:Declaring metric variables
2024-02-18 18:54:58,713:INFO:Importing untrained model
2024-02-18 18:54:58,718:INFO:Light Gradient Boosting Machine Imported successfully
2024-02-18 18:54:58,731:INFO:Starting cross validation
2024-02-18 18:54:58,732:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:59,720:INFO:Calculating mean and std
2024-02-18 18:54:59,722:INFO:Creating metrics dataframe
2024-02-18 18:54:59,727:INFO:Uploading results into container
2024-02-18 18:54:59,728:INFO:Uploading model into container now
2024-02-18 18:54:59,729:INFO:_master_model_container: 13
2024-02-18 18:54:59,729:INFO:_display_container: 2
2024-02-18 18:54:59,730:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7036, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-02-18 18:54:59,730:INFO:create_model() successfully completed......................................
2024-02-18 18:54:59,827:INFO:SubProcess create_model() end ==================================
2024-02-18 18:54:59,827:INFO:Creating metrics dataframe
2024-02-18 18:54:59,845:INFO:Initializing Dummy Classifier
2024-02-18 18:54:59,845:INFO:Total runtime is 0.17233157952626546 minutes
2024-02-18 18:54:59,850:INFO:SubProcess create_model() called ==================================
2024-02-18 18:54:59,850:INFO:Initializing create_model()
2024-02-18 18:54:59,850:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AEEB8FA0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B172FEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:54:59,850:INFO:Checking exceptions
2024-02-18 18:54:59,850:INFO:Importing libraries
2024-02-18 18:54:59,850:INFO:Copying training dataset
2024-02-18 18:54:59,858:INFO:Defining folds
2024-02-18 18:54:59,859:INFO:Declaring metric variables
2024-02-18 18:54:59,867:INFO:Importing untrained model
2024-02-18 18:54:59,875:INFO:Dummy Classifier Imported successfully
2024-02-18 18:54:59,891:INFO:Starting cross validation
2024-02-18 18:54:59,893:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 18:54:59,936:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:54:59,953:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:54:59,956:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:54:59,968:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:54:59,970:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:54:59,978:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:54:59,984:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:54:59,992:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:54:59,998:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:55:00,002:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 18:55:00,009:INFO:Calculating mean and std
2024-02-18 18:55:00,011:INFO:Creating metrics dataframe
2024-02-18 18:55:00,015:INFO:Uploading results into container
2024-02-18 18:55:00,016:INFO:Uploading model into container now
2024-02-18 18:55:00,016:INFO:_master_model_container: 14
2024-02-18 18:55:00,017:INFO:_display_container: 2
2024-02-18 18:55:00,017:INFO:DummyClassifier(constant=None, random_state=7036, strategy='prior')
2024-02-18 18:55:00,017:INFO:create_model() successfully completed......................................
2024-02-18 18:55:00,107:INFO:SubProcess create_model() end ==================================
2024-02-18 18:55:00,107:INFO:Creating metrics dataframe
2024-02-18 18:55:00,142:INFO:Initializing create_model()
2024-02-18 18:55:00,143:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AEEB8FA0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7036, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 18:55:00,143:INFO:Checking exceptions
2024-02-18 18:55:00,145:INFO:Importing libraries
2024-02-18 18:55:00,145:INFO:Copying training dataset
2024-02-18 18:55:00,154:INFO:Defining folds
2024-02-18 18:55:00,155:INFO:Declaring metric variables
2024-02-18 18:55:00,155:INFO:Importing untrained model
2024-02-18 18:55:00,155:INFO:Declaring custom model
2024-02-18 18:55:00,156:INFO:Logistic Regression Imported successfully
2024-02-18 18:55:00,158:INFO:Cross validation set to False
2024-02-18 18:55:00,158:INFO:Fitting Model
2024-02-18 18:55:00,219:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7036, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-18 18:55:00,220:INFO:create_model() successfully completed......................................
2024-02-18 18:55:00,333:INFO:_master_model_container: 14
2024-02-18 18:55:00,334:INFO:_display_container: 2
2024-02-18 18:55:00,335:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7036, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-18 18:55:00,335:INFO:compare_models() successfully completed......................................
2024-02-18 18:55:17,856:INFO:Initializing evaluate_model()
2024-02-18 18:55:17,857:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AEEB8FA0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7036, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-02-18 18:55:17,877:INFO:Initializing plot_model()
2024-02-18 18:55:17,877:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7036, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AEEB8FA0>, system=True)
2024-02-18 18:55:17,877:INFO:Checking exceptions
2024-02-18 18:55:17,881:INFO:Preloading libraries
2024-02-18 18:55:17,882:INFO:Copying training dataset
2024-02-18 18:55:17,882:INFO:Plot type: pipeline
2024-02-18 18:55:18,043:INFO:Visual Rendered Successfully
2024-02-18 18:55:18,124:INFO:plot_model() successfully completed......................................
2024-02-18 18:55:19,763:INFO:Initializing plot_model()
2024-02-18 18:55:19,764:INFO:plot_model(plot=learning, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7036, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AEEB8FA0>, system=True)
2024-02-18 18:55:19,764:INFO:Checking exceptions
2024-02-18 18:55:19,767:INFO:Preloading libraries
2024-02-18 18:55:19,767:INFO:Copying training dataset
2024-02-18 18:55:19,767:INFO:Plot type: learning
2024-02-18 18:55:19,932:INFO:Fitting Model
2024-02-18 18:55:28,584:INFO:Visual Rendered Successfully
2024-02-18 18:55:28,676:INFO:plot_model() successfully completed......................................
2024-02-18 18:55:28,721:INFO:Initializing plot_model()
2024-02-18 18:55:28,721:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7036, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AEEB8FA0>, system=True)
2024-02-18 18:55:28,721:INFO:Checking exceptions
2024-02-18 18:55:28,726:INFO:Preloading libraries
2024-02-18 18:55:28,727:INFO:Copying training dataset
2024-02-18 18:55:28,727:INFO:Plot type: calibration
2024-02-18 18:55:28,747:INFO:Scoring test/hold-out set
2024-02-18 18:55:29,023:INFO:Visual Rendered Successfully
2024-02-18 18:55:29,121:INFO:plot_model() successfully completed......................................
2024-02-18 18:55:33,613:INFO:Initializing plot_model()
2024-02-18 18:55:33,613:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7036, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AEEB8FA0>, system=True)
2024-02-18 18:55:33,613:INFO:Checking exceptions
2024-02-18 18:55:33,617:INFO:Preloading libraries
2024-02-18 18:55:33,617:INFO:Copying training dataset
2024-02-18 18:55:33,617:INFO:Plot type: auc
2024-02-18 18:55:33,745:INFO:Fitting Model
2024-02-18 18:55:33,747:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-02-18 18:55:33,747:INFO:Scoring test/hold-out set
2024-02-18 18:55:33,978:INFO:Visual Rendered Successfully
2024-02-18 18:55:34,060:INFO:plot_model() successfully completed......................................
2024-02-18 18:56:08,356:INFO:Initializing plot_model()
2024-02-18 18:56:08,356:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7036, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AEEB8FA0>, system=True)
2024-02-18 18:56:08,356:INFO:Checking exceptions
2024-02-18 18:56:08,362:INFO:Preloading libraries
2024-02-18 18:56:08,362:INFO:Copying training dataset
2024-02-18 18:56:08,362:INFO:Plot type: auc
2024-02-18 18:56:08,549:INFO:Fitting Model
2024-02-18 18:56:08,550:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-02-18 18:56:08,550:INFO:Scoring test/hold-out set
2024-02-18 18:56:08,908:INFO:Visual Rendered Successfully
2024-02-18 18:56:09,006:INFO:plot_model() successfully completed......................................
2024-02-18 18:56:12,941:INFO:Initializing plot_model()
2024-02-18 18:56:12,942:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7036, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211AEEB8FA0>, system=True)
2024-02-18 18:56:12,942:INFO:Checking exceptions
2024-02-18 18:56:12,947:INFO:Preloading libraries
2024-02-18 18:56:12,947:INFO:Copying training dataset
2024-02-18 18:56:12,947:INFO:Plot type: parameter
2024-02-18 18:56:12,954:INFO:Visual Rendered Successfully
2024-02-18 18:56:13,055:INFO:plot_model() successfully completed......................................
2024-02-18 18:57:48,264:INFO:Initializing save_model()
2024-02-18 18:57:48,264:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7036, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=pycaret_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\santh\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-02-18 18:57:48,264:INFO:Adding model into prep_pipe
2024-02-18 18:57:48,269:INFO:pycaret_model.pkl saved in current working directory
2024-02-18 18:57:48,277:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=7036,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-02-18 18:57:48,278:INFO:save_model() successfully completed......................................
2024-02-18 19:08:46,034:INFO:Initializing load_model()
2024-02-18 19:08:46,035:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-18 19:16:04,139:INFO:Initializing predict_model()
2024-02-18 19:16:04,139:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211B593D390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=7036,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000211B5992290>)
2024-02-18 19:16:04,140:INFO:Checking exceptions
2024-02-18 19:16:04,140:INFO:Preloading libraries
2024-02-18 19:16:04,141:INFO:Set up data.
2024-02-18 19:16:04,148:INFO:Set up index.
2024-02-18 19:17:37,711:INFO:Initializing predict_model()
2024-02-18 19:17:37,711:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211B593D390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=7036,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000211B56DB7F0>)
2024-02-18 19:17:37,711:INFO:Checking exceptions
2024-02-18 19:17:37,711:INFO:Preloading libraries
2024-02-18 19:17:37,712:INFO:Set up data.
2024-02-18 19:17:37,720:INFO:Set up index.
2024-02-18 20:11:36,413:INFO:PyCaret ClassificationExperiment
2024-02-18 20:11:36,413:INFO:Logging name: clf-default-name
2024-02-18 20:11:36,413:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-18 20:11:36,414:INFO:version 3.2.0
2024-02-18 20:11:36,414:INFO:Initializing setup()
2024-02-18 20:11:36,414:INFO:self.USI: 84e3
2024-02-18 20:11:36,414:INFO:self._variable_keys: {'X_test', 'fold_groups_param', 'fix_imbalance', 'memory', 'gpu_n_jobs_param', '_available_plots', 'y_train', '_ml_usecase', 'target_param', 'fold_generator', 'data', 'exp_id', 'idx', 'y', 'X', 'n_jobs_param', 'seed', 'gpu_param', 'html_param', 'X_train', 'logging_param', 'is_multiclass', 'USI', 'pipeline', 'exp_name_log', 'y_test', 'fold_shuffle_param', 'log_plots_param'}
2024-02-18 20:11:36,414:INFO:Checking environment
2024-02-18 20:11:36,414:INFO:python_version: 3.10.13
2024-02-18 20:11:36,414:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2024-02-18 20:11:36,414:INFO:machine: AMD64
2024-02-18 20:11:36,414:INFO:platform: Windows-10-10.0.22621-SP0
2024-02-18 20:11:36,419:INFO:Memory: svmem(total=16952647680, available=6199201792, percent=63.4, used=10753445888, free=6199201792)
2024-02-18 20:11:36,419:INFO:Physical Core: 4
2024-02-18 20:11:36,419:INFO:Logical Core: 8
2024-02-18 20:11:36,419:INFO:Checking libraries
2024-02-18 20:11:36,421:INFO:System:
2024-02-18 20:11:36,421:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2024-02-18 20:11:36,421:INFO:executable: C:\Users\santh\anaconda3\envs\msds\python.exe
2024-02-18 20:11:36,421:INFO:   machine: Windows-10-10.0.22621-SP0
2024-02-18 20:11:36,421:INFO:PyCaret required dependencies:
2024-02-18 20:11:36,422:INFO:                 pip: 23.3.1
2024-02-18 20:11:36,422:INFO:          setuptools: 68.2.2
2024-02-18 20:11:36,422:INFO:             pycaret: 3.2.0
2024-02-18 20:11:36,422:INFO:             IPython: 8.20.0
2024-02-18 20:11:36,422:INFO:          ipywidgets: 8.0.4
2024-02-18 20:11:36,422:INFO:                tqdm: 4.65.0
2024-02-18 20:11:36,422:INFO:               numpy: 1.25.2
2024-02-18 20:11:36,422:INFO:              pandas: 1.5.3
2024-02-18 20:11:36,422:INFO:              jinja2: 3.1.3
2024-02-18 20:11:36,422:INFO:               scipy: 1.10.1
2024-02-18 20:11:36,422:INFO:              joblib: 1.2.0
2024-02-18 20:11:36,422:INFO:             sklearn: 1.2.2
2024-02-18 20:11:36,422:INFO:                pyod: 1.1.3
2024-02-18 20:11:36,423:INFO:            imblearn: 0.11.0
2024-02-18 20:11:36,423:INFO:   category_encoders: 2.6.3
2024-02-18 20:11:36,423:INFO:            lightgbm: 4.3.0
2024-02-18 20:11:36,423:INFO:               numba: 0.59.0
2024-02-18 20:11:36,423:INFO:            requests: 2.31.0
2024-02-18 20:11:36,423:INFO:          matplotlib: 3.6.0
2024-02-18 20:11:36,423:INFO:          scikitplot: 0.3.7
2024-02-18 20:11:36,423:INFO:         yellowbrick: 1.5
2024-02-18 20:11:36,423:INFO:              plotly: 5.9.0
2024-02-18 20:11:36,423:INFO:    plotly-resampler: Not installed
2024-02-18 20:11:36,423:INFO:             kaleido: 0.2.1
2024-02-18 20:11:36,423:INFO:           schemdraw: 0.15
2024-02-18 20:11:36,423:INFO:         statsmodels: 0.14.0
2024-02-18 20:11:36,423:INFO:              sktime: 0.21.1
2024-02-18 20:11:36,424:INFO:               tbats: 1.1.3
2024-02-18 20:11:36,424:INFO:            pmdarima: 2.0.4
2024-02-18 20:11:36,424:INFO:              psutil: 5.9.0
2024-02-18 20:11:36,424:INFO:          markupsafe: 2.1.3
2024-02-18 20:11:36,424:INFO:             pickle5: Not installed
2024-02-18 20:11:36,424:INFO:         cloudpickle: 2.2.1
2024-02-18 20:11:36,424:INFO:         deprecation: 2.1.0
2024-02-18 20:11:36,424:INFO:              xxhash: 2.0.2
2024-02-18 20:11:36,424:INFO:           wurlitzer: Not installed
2024-02-18 20:11:36,424:INFO:PyCaret optional dependencies:
2024-02-18 20:11:36,424:INFO:                shap: Not installed
2024-02-18 20:11:36,424:INFO:           interpret: Not installed
2024-02-18 20:11:36,424:INFO:                umap: Not installed
2024-02-18 20:11:36,424:INFO:     ydata_profiling: Not installed
2024-02-18 20:11:36,425:INFO:  explainerdashboard: Not installed
2024-02-18 20:11:36,425:INFO:             autoviz: Not installed
2024-02-18 20:11:36,425:INFO:           fairlearn: Not installed
2024-02-18 20:11:36,425:INFO:          deepchecks: Not installed
2024-02-18 20:11:36,425:INFO:             xgboost: Not installed
2024-02-18 20:11:36,425:INFO:            catboost: Not installed
2024-02-18 20:11:36,425:INFO:              kmodes: Not installed
2024-02-18 20:11:36,425:INFO:             mlxtend: Not installed
2024-02-18 20:11:36,425:INFO:       statsforecast: Not installed
2024-02-18 20:11:36,425:INFO:        tune_sklearn: Not installed
2024-02-18 20:11:36,426:INFO:                 ray: Not installed
2024-02-18 20:11:36,426:INFO:            hyperopt: Not installed
2024-02-18 20:11:36,426:INFO:              optuna: Not installed
2024-02-18 20:11:36,426:INFO:               skopt: Not installed
2024-02-18 20:11:36,426:INFO:              mlflow: Not installed
2024-02-18 20:11:36,426:INFO:              gradio: Not installed
2024-02-18 20:11:36,426:INFO:             fastapi: Not installed
2024-02-18 20:11:36,426:INFO:             uvicorn: Not installed
2024-02-18 20:11:36,426:INFO:              m2cgen: Not installed
2024-02-18 20:11:36,426:INFO:           evidently: Not installed
2024-02-18 20:11:36,426:INFO:               fugue: Not installed
2024-02-18 20:11:36,426:INFO:           streamlit: Not installed
2024-02-18 20:11:36,426:INFO:             prophet: Not installed
2024-02-18 20:11:36,426:INFO:None
2024-02-18 20:11:36,427:INFO:Set up data.
2024-02-18 20:11:36,439:INFO:Set up folding strategy.
2024-02-18 20:11:36,439:INFO:Set up train/test split.
2024-02-18 20:11:36,447:INFO:Set up index.
2024-02-18 20:11:36,447:INFO:Assigning column types.
2024-02-18 20:11:36,451:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-18 20:11:36,496:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-18 20:11:36,498:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 20:11:36,525:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:11:36,525:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:11:36,564:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-18 20:11:36,565:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 20:11:36,587:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:11:36,588:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:11:36,588:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-18 20:11:36,632:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 20:11:36,658:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:11:36,658:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:11:36,695:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 20:11:36,722:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:11:36,723:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:11:36,723:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-18 20:11:36,786:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:11:36,787:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:11:36,858:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:11:36,858:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:11:36,860:INFO:Preparing preprocessing pipeline...
2024-02-18 20:11:36,861:INFO:Set up simple imputation.
2024-02-18 20:11:36,905:INFO:Finished creating preprocessing pipeline.
2024-02-18 20:11:36,909:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\santh\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-18 20:11:36,909:INFO:Creating final display dataframe.
2024-02-18 20:11:37,017:INFO:Setup _display_container:                     Description             Value
0                    Session id              4447
1                        Target             Churn
2                   Target type            Binary
3           Original data shape         (7043, 8)
4        Transformed data shape         (7043, 8)
5   Transformed train set shape         (4930, 8)
6    Transformed test set shape         (2113, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              84e3
2024-02-18 20:11:37,106:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:11:37,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:11:37,169:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:11:37,169:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:11:37,171:INFO:setup() successfully completed in 0.77s...............
2024-02-18 20:11:37,296:INFO:Initializing compare_models()
2024-02-18 20:11:37,298:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211B5FB85B0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000211B5FB85B0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-02-18 20:11:37,298:INFO:Checking exceptions
2024-02-18 20:11:37,302:INFO:Preparing display monitor
2024-02-18 20:11:37,341:INFO:Initializing Logistic Regression
2024-02-18 20:11:37,341:INFO:Total runtime is 0.0 minutes
2024-02-18 20:11:37,346:INFO:SubProcess create_model() called ==================================
2024-02-18 20:11:37,346:INFO:Initializing create_model()
2024-02-18 20:11:37,347:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211B5FB85B0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B5F9B250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:11:37,347:INFO:Checking exceptions
2024-02-18 20:11:37,347:INFO:Importing libraries
2024-02-18 20:11:37,347:INFO:Copying training dataset
2024-02-18 20:11:37,355:INFO:Defining folds
2024-02-18 20:11:37,355:INFO:Declaring metric variables
2024-02-18 20:11:37,359:INFO:Importing untrained model
2024-02-18 20:11:37,364:INFO:Logistic Regression Imported successfully
2024-02-18 20:11:37,375:INFO:Starting cross validation
2024-02-18 20:11:37,377:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:11:46,477:INFO:Calculating mean and std
2024-02-18 20:11:46,479:INFO:Creating metrics dataframe
2024-02-18 20:11:46,483:INFO:Uploading results into container
2024-02-18 20:11:46,484:INFO:Uploading model into container now
2024-02-18 20:11:46,485:INFO:_master_model_container: 1
2024-02-18 20:11:46,485:INFO:_display_container: 2
2024-02-18 20:11:46,486:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4447, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-18 20:11:46,486:INFO:create_model() successfully completed......................................
2024-02-18 20:11:46,731:INFO:SubProcess create_model() end ==================================
2024-02-18 20:11:46,732:INFO:Creating metrics dataframe
2024-02-18 20:11:46,743:INFO:Initializing K Neighbors Classifier
2024-02-18 20:11:46,743:INFO:Total runtime is 0.15670908292134603 minutes
2024-02-18 20:11:46,747:INFO:SubProcess create_model() called ==================================
2024-02-18 20:11:46,747:INFO:Initializing create_model()
2024-02-18 20:11:46,748:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211B5FB85B0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B5F9B250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:11:46,748:INFO:Checking exceptions
2024-02-18 20:11:46,748:INFO:Importing libraries
2024-02-18 20:11:46,748:INFO:Copying training dataset
2024-02-18 20:11:46,755:INFO:Defining folds
2024-02-18 20:11:46,755:INFO:Declaring metric variables
2024-02-18 20:11:46,759:INFO:Importing untrained model
2024-02-18 20:11:46,766:INFO:K Neighbors Classifier Imported successfully
2024-02-18 20:11:46,774:INFO:Starting cross validation
2024-02-18 20:11:46,775:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:11:46,959:INFO:Calculating mean and std
2024-02-18 20:11:46,960:INFO:Creating metrics dataframe
2024-02-18 20:11:46,963:INFO:Uploading results into container
2024-02-18 20:11:46,963:INFO:Uploading model into container now
2024-02-18 20:11:46,964:INFO:_master_model_container: 2
2024-02-18 20:11:46,964:INFO:_display_container: 2
2024-02-18 20:11:46,964:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-18 20:11:46,964:INFO:create_model() successfully completed......................................
2024-02-18 20:11:47,053:INFO:SubProcess create_model() end ==================================
2024-02-18 20:11:47,053:INFO:Creating metrics dataframe
2024-02-18 20:11:47,066:INFO:Initializing Naive Bayes
2024-02-18 20:11:47,066:INFO:Total runtime is 0.162083899974823 minutes
2024-02-18 20:11:47,071:INFO:SubProcess create_model() called ==================================
2024-02-18 20:11:47,072:INFO:Initializing create_model()
2024-02-18 20:11:47,072:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211B5FB85B0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B5F9B250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:11:47,072:INFO:Checking exceptions
2024-02-18 20:11:47,072:INFO:Importing libraries
2024-02-18 20:11:47,072:INFO:Copying training dataset
2024-02-18 20:11:47,082:INFO:Defining folds
2024-02-18 20:11:47,083:INFO:Declaring metric variables
2024-02-18 20:11:47,091:INFO:Importing untrained model
2024-02-18 20:11:47,096:INFO:Naive Bayes Imported successfully
2024-02-18 20:11:47,105:INFO:Starting cross validation
2024-02-18 20:11:47,106:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:11:47,205:INFO:Calculating mean and std
2024-02-18 20:11:47,206:INFO:Creating metrics dataframe
2024-02-18 20:11:47,209:INFO:Uploading results into container
2024-02-18 20:11:47,210:INFO:Uploading model into container now
2024-02-18 20:11:47,210:INFO:_master_model_container: 3
2024-02-18 20:11:47,210:INFO:_display_container: 2
2024-02-18 20:11:47,210:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-02-18 20:11:47,211:INFO:create_model() successfully completed......................................
2024-02-18 20:11:47,296:INFO:SubProcess create_model() end ==================================
2024-02-18 20:11:47,296:INFO:Creating metrics dataframe
2024-02-18 20:11:47,305:INFO:Initializing Decision Tree Classifier
2024-02-18 20:11:47,305:INFO:Total runtime is 0.16606995662053425 minutes
2024-02-18 20:11:47,309:INFO:SubProcess create_model() called ==================================
2024-02-18 20:11:47,310:INFO:Initializing create_model()
2024-02-18 20:11:47,310:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211B5FB85B0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B5F9B250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:11:47,310:INFO:Checking exceptions
2024-02-18 20:11:47,310:INFO:Importing libraries
2024-02-18 20:11:47,310:INFO:Copying training dataset
2024-02-18 20:11:47,319:INFO:Defining folds
2024-02-18 20:11:47,319:INFO:Declaring metric variables
2024-02-18 20:11:47,323:INFO:Importing untrained model
2024-02-18 20:11:47,330:INFO:Decision Tree Classifier Imported successfully
2024-02-18 20:11:47,338:INFO:Starting cross validation
2024-02-18 20:11:47,339:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:11:47,451:INFO:Calculating mean and std
2024-02-18 20:11:47,453:INFO:Creating metrics dataframe
2024-02-18 20:11:47,456:INFO:Uploading results into container
2024-02-18 20:11:47,457:INFO:Uploading model into container now
2024-02-18 20:11:47,457:INFO:_master_model_container: 4
2024-02-18 20:11:47,457:INFO:_display_container: 2
2024-02-18 20:11:47,457:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4447, splitter='best')
2024-02-18 20:11:47,457:INFO:create_model() successfully completed......................................
2024-02-18 20:11:47,538:INFO:SubProcess create_model() end ==================================
2024-02-18 20:11:47,538:INFO:Creating metrics dataframe
2024-02-18 20:11:47,549:INFO:Initializing SVM - Linear Kernel
2024-02-18 20:11:47,549:INFO:Total runtime is 0.17013821601867676 minutes
2024-02-18 20:11:47,553:INFO:SubProcess create_model() called ==================================
2024-02-18 20:11:47,553:INFO:Initializing create_model()
2024-02-18 20:11:47,553:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211B5FB85B0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B5F9B250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:11:47,553:INFO:Checking exceptions
2024-02-18 20:11:47,553:INFO:Importing libraries
2024-02-18 20:11:47,553:INFO:Copying training dataset
2024-02-18 20:11:47,558:INFO:Defining folds
2024-02-18 20:11:47,559:INFO:Declaring metric variables
2024-02-18 20:11:47,563:INFO:Importing untrained model
2024-02-18 20:11:47,567:INFO:SVM - Linear Kernel Imported successfully
2024-02-18 20:11:47,575:INFO:Starting cross validation
2024-02-18 20:11:47,577:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:11:47,634:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 20:11:47,652:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 20:11:47,655:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 20:11:47,655:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 20:11:47,658:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 20:11:47,667:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 20:11:47,671:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 20:11:47,684:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 20:11:47,694:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 20:11:47,694:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 20:11:47,702:INFO:Calculating mean and std
2024-02-18 20:11:47,703:INFO:Creating metrics dataframe
2024-02-18 20:11:47,707:INFO:Uploading results into container
2024-02-18 20:11:47,708:INFO:Uploading model into container now
2024-02-18 20:11:47,710:INFO:_master_model_container: 5
2024-02-18 20:11:47,710:INFO:_display_container: 2
2024-02-18 20:11:47,711:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4447, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-02-18 20:11:47,711:INFO:create_model() successfully completed......................................
2024-02-18 20:11:47,797:INFO:SubProcess create_model() end ==================================
2024-02-18 20:11:47,797:INFO:Creating metrics dataframe
2024-02-18 20:11:47,806:INFO:Initializing Ridge Classifier
2024-02-18 20:11:47,806:INFO:Total runtime is 0.17442666292190553 minutes
2024-02-18 20:11:47,809:INFO:SubProcess create_model() called ==================================
2024-02-18 20:11:47,810:INFO:Initializing create_model()
2024-02-18 20:11:47,810:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211B5FB85B0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B5F9B250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:11:47,810:INFO:Checking exceptions
2024-02-18 20:11:47,810:INFO:Importing libraries
2024-02-18 20:11:47,810:INFO:Copying training dataset
2024-02-18 20:11:47,815:INFO:Defining folds
2024-02-18 20:11:47,816:INFO:Declaring metric variables
2024-02-18 20:11:47,819:INFO:Importing untrained model
2024-02-18 20:11:47,824:INFO:Ridge Classifier Imported successfully
2024-02-18 20:11:47,832:INFO:Starting cross validation
2024-02-18 20:11:47,833:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:11:47,858:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.4212e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 20:11:47,865:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.43136e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 20:11:47,866:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 20:11:47,868:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.3895e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 20:11:47,873:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.40383e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 20:11:47,874:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 20:11:47,876:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 20:11:47,877:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.44667e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 20:11:47,881:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 20:11:47,884:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.39613e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 20:11:47,885:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 20:11:47,885:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.42765e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 20:11:47,892:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 20:11:47,893:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.44755e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 20:11:47,894:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 20:11:47,898:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.4342e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 20:11:47,901:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 20:11:47,906:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 20:11:47,906:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.43382e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 20:11:47,914:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 20:11:47,921:INFO:Calculating mean and std
2024-02-18 20:11:47,922:INFO:Creating metrics dataframe
2024-02-18 20:11:47,926:INFO:Uploading results into container
2024-02-18 20:11:47,926:INFO:Uploading model into container now
2024-02-18 20:11:47,926:INFO:_master_model_container: 6
2024-02-18 20:11:47,926:INFO:_display_container: 2
2024-02-18 20:11:47,927:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=4447, solver='auto',
                tol=0.0001)
2024-02-18 20:11:47,927:INFO:create_model() successfully completed......................................
2024-02-18 20:11:48,011:INFO:SubProcess create_model() end ==================================
2024-02-18 20:11:48,011:INFO:Creating metrics dataframe
2024-02-18 20:11:48,025:INFO:Initializing Random Forest Classifier
2024-02-18 20:11:48,025:INFO:Total runtime is 0.17806686957677206 minutes
2024-02-18 20:11:48,029:INFO:SubProcess create_model() called ==================================
2024-02-18 20:11:48,030:INFO:Initializing create_model()
2024-02-18 20:11:48,030:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211B5FB85B0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B5F9B250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:11:48,030:INFO:Checking exceptions
2024-02-18 20:11:48,031:INFO:Importing libraries
2024-02-18 20:11:48,031:INFO:Copying training dataset
2024-02-18 20:11:48,038:INFO:Defining folds
2024-02-18 20:11:48,039:INFO:Declaring metric variables
2024-02-18 20:11:48,044:INFO:Importing untrained model
2024-02-18 20:11:48,050:INFO:Random Forest Classifier Imported successfully
2024-02-18 20:11:48,061:INFO:Starting cross validation
2024-02-18 20:11:48,063:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:11:50,028:INFO:Calculating mean and std
2024-02-18 20:11:50,030:INFO:Creating metrics dataframe
2024-02-18 20:11:50,036:INFO:Uploading results into container
2024-02-18 20:11:50,037:INFO:Uploading model into container now
2024-02-18 20:11:50,038:INFO:_master_model_container: 7
2024-02-18 20:11:50,038:INFO:_display_container: 2
2024-02-18 20:11:50,039:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4447, verbose=0, warm_start=False)
2024-02-18 20:11:50,039:INFO:create_model() successfully completed......................................
2024-02-18 20:11:50,149:INFO:SubProcess create_model() end ==================================
2024-02-18 20:11:50,150:INFO:Creating metrics dataframe
2024-02-18 20:11:50,163:INFO:Initializing Quadratic Discriminant Analysis
2024-02-18 20:11:50,163:INFO:Total runtime is 0.21370954910914103 minutes
2024-02-18 20:11:50,169:INFO:SubProcess create_model() called ==================================
2024-02-18 20:11:50,169:INFO:Initializing create_model()
2024-02-18 20:11:50,169:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211B5FB85B0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B5F9B250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:11:50,171:INFO:Checking exceptions
2024-02-18 20:11:50,171:INFO:Importing libraries
2024-02-18 20:11:50,171:INFO:Copying training dataset
2024-02-18 20:11:50,182:INFO:Defining folds
2024-02-18 20:11:50,182:INFO:Declaring metric variables
2024-02-18 20:11:50,187:INFO:Importing untrained model
2024-02-18 20:11:50,194:INFO:Quadratic Discriminant Analysis Imported successfully
2024-02-18 20:11:50,208:INFO:Starting cross validation
2024-02-18 20:11:50,209:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:11:50,373:INFO:Calculating mean and std
2024-02-18 20:11:50,375:INFO:Creating metrics dataframe
2024-02-18 20:11:50,380:INFO:Uploading results into container
2024-02-18 20:11:50,380:INFO:Uploading model into container now
2024-02-18 20:11:50,381:INFO:_master_model_container: 8
2024-02-18 20:11:50,381:INFO:_display_container: 2
2024-02-18 20:11:50,381:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-02-18 20:11:50,382:INFO:create_model() successfully completed......................................
2024-02-18 20:11:50,499:INFO:SubProcess create_model() end ==================================
2024-02-18 20:11:50,499:INFO:Creating metrics dataframe
2024-02-18 20:11:50,514:INFO:Initializing Ada Boost Classifier
2024-02-18 20:11:50,514:INFO:Total runtime is 0.21955174207687378 minutes
2024-02-18 20:11:50,520:INFO:SubProcess create_model() called ==================================
2024-02-18 20:11:50,520:INFO:Initializing create_model()
2024-02-18 20:11:50,521:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211B5FB85B0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B5F9B250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:11:50,521:INFO:Checking exceptions
2024-02-18 20:11:50,521:INFO:Importing libraries
2024-02-18 20:11:50,521:INFO:Copying training dataset
2024-02-18 20:11:50,528:INFO:Defining folds
2024-02-18 20:11:50,529:INFO:Declaring metric variables
2024-02-18 20:11:50,535:INFO:Importing untrained model
2024-02-18 20:11:50,541:INFO:Ada Boost Classifier Imported successfully
2024-02-18 20:11:50,550:INFO:Starting cross validation
2024-02-18 20:11:50,552:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:11:51,505:INFO:Calculating mean and std
2024-02-18 20:11:51,507:INFO:Creating metrics dataframe
2024-02-18 20:11:51,510:INFO:Uploading results into container
2024-02-18 20:11:51,511:INFO:Uploading model into container now
2024-02-18 20:11:51,511:INFO:_master_model_container: 9
2024-02-18 20:11:51,512:INFO:_display_container: 2
2024-02-18 20:11:51,512:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=4447)
2024-02-18 20:11:51,512:INFO:create_model() successfully completed......................................
2024-02-18 20:11:51,611:INFO:SubProcess create_model() end ==================================
2024-02-18 20:11:51,611:INFO:Creating metrics dataframe
2024-02-18 20:11:51,623:INFO:Initializing Gradient Boosting Classifier
2024-02-18 20:11:51,623:INFO:Total runtime is 0.23803675969441732 minutes
2024-02-18 20:11:51,626:INFO:SubProcess create_model() called ==================================
2024-02-18 20:11:51,627:INFO:Initializing create_model()
2024-02-18 20:11:51,627:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211B5FB85B0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B5F9B250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:11:51,627:INFO:Checking exceptions
2024-02-18 20:11:51,627:INFO:Importing libraries
2024-02-18 20:11:51,627:INFO:Copying training dataset
2024-02-18 20:11:51,633:INFO:Defining folds
2024-02-18 20:11:51,634:INFO:Declaring metric variables
2024-02-18 20:11:51,638:INFO:Importing untrained model
2024-02-18 20:11:51,642:INFO:Gradient Boosting Classifier Imported successfully
2024-02-18 20:11:51,662:INFO:Starting cross validation
2024-02-18 20:11:51,663:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:11:54,403:INFO:Calculating mean and std
2024-02-18 20:11:54,404:INFO:Creating metrics dataframe
2024-02-18 20:11:54,408:INFO:Uploading results into container
2024-02-18 20:11:54,408:INFO:Uploading model into container now
2024-02-18 20:11:54,409:INFO:_master_model_container: 10
2024-02-18 20:11:54,409:INFO:_display_container: 2
2024-02-18 20:11:54,410:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4447, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-18 20:11:54,410:INFO:create_model() successfully completed......................................
2024-02-18 20:11:54,519:INFO:SubProcess create_model() end ==================================
2024-02-18 20:11:54,519:INFO:Creating metrics dataframe
2024-02-18 20:11:54,533:INFO:Initializing Linear Discriminant Analysis
2024-02-18 20:11:54,533:INFO:Total runtime is 0.2865419546763102 minutes
2024-02-18 20:11:54,537:INFO:SubProcess create_model() called ==================================
2024-02-18 20:11:54,538:INFO:Initializing create_model()
2024-02-18 20:11:54,538:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211B5FB85B0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B5F9B250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:11:54,538:INFO:Checking exceptions
2024-02-18 20:11:54,538:INFO:Importing libraries
2024-02-18 20:11:54,538:INFO:Copying training dataset
2024-02-18 20:11:54,544:INFO:Defining folds
2024-02-18 20:11:54,545:INFO:Declaring metric variables
2024-02-18 20:11:54,550:INFO:Importing untrained model
2024-02-18 20:11:54,556:INFO:Linear Discriminant Analysis Imported successfully
2024-02-18 20:11:54,569:INFO:Starting cross validation
2024-02-18 20:11:54,571:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:11:54,694:INFO:Calculating mean and std
2024-02-18 20:11:54,696:INFO:Creating metrics dataframe
2024-02-18 20:11:54,702:INFO:Uploading results into container
2024-02-18 20:11:54,704:INFO:Uploading model into container now
2024-02-18 20:11:54,705:INFO:_master_model_container: 11
2024-02-18 20:11:54,705:INFO:_display_container: 2
2024-02-18 20:11:54,706:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-02-18 20:11:54,706:INFO:create_model() successfully completed......................................
2024-02-18 20:11:54,814:INFO:SubProcess create_model() end ==================================
2024-02-18 20:11:54,814:INFO:Creating metrics dataframe
2024-02-18 20:11:54,829:INFO:Initializing Extra Trees Classifier
2024-02-18 20:11:54,830:INFO:Total runtime is 0.29147897561391195 minutes
2024-02-18 20:11:54,834:INFO:SubProcess create_model() called ==================================
2024-02-18 20:11:54,834:INFO:Initializing create_model()
2024-02-18 20:11:54,835:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211B5FB85B0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B5F9B250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:11:54,835:INFO:Checking exceptions
2024-02-18 20:11:54,835:INFO:Importing libraries
2024-02-18 20:11:54,835:INFO:Copying training dataset
2024-02-18 20:11:54,842:INFO:Defining folds
2024-02-18 20:11:54,843:INFO:Declaring metric variables
2024-02-18 20:11:54,848:INFO:Importing untrained model
2024-02-18 20:11:54,855:INFO:Extra Trees Classifier Imported successfully
2024-02-18 20:11:54,868:INFO:Starting cross validation
2024-02-18 20:11:54,869:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:11:56,676:INFO:Calculating mean and std
2024-02-18 20:11:56,679:INFO:Creating metrics dataframe
2024-02-18 20:11:56,687:INFO:Uploading results into container
2024-02-18 20:11:56,688:INFO:Uploading model into container now
2024-02-18 20:11:56,690:INFO:_master_model_container: 12
2024-02-18 20:11:56,690:INFO:_display_container: 2
2024-02-18 20:11:56,691:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=4447, verbose=0, warm_start=False)
2024-02-18 20:11:56,691:INFO:create_model() successfully completed......................................
2024-02-18 20:11:56,843:INFO:SubProcess create_model() end ==================================
2024-02-18 20:11:56,843:INFO:Creating metrics dataframe
2024-02-18 20:11:56,862:INFO:Initializing Light Gradient Boosting Machine
2024-02-18 20:11:56,862:INFO:Total runtime is 0.3253555615743001 minutes
2024-02-18 20:11:56,871:INFO:SubProcess create_model() called ==================================
2024-02-18 20:11:56,871:INFO:Initializing create_model()
2024-02-18 20:11:56,872:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211B5FB85B0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B5F9B250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:11:56,872:INFO:Checking exceptions
2024-02-18 20:11:56,872:INFO:Importing libraries
2024-02-18 20:11:56,872:INFO:Copying training dataset
2024-02-18 20:11:56,882:INFO:Defining folds
2024-02-18 20:11:56,882:INFO:Declaring metric variables
2024-02-18 20:11:56,889:INFO:Importing untrained model
2024-02-18 20:11:56,897:INFO:Light Gradient Boosting Machine Imported successfully
2024-02-18 20:11:56,912:INFO:Starting cross validation
2024-02-18 20:11:56,914:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:11:58,547:INFO:Calculating mean and std
2024-02-18 20:11:58,549:INFO:Creating metrics dataframe
2024-02-18 20:11:58,558:INFO:Uploading results into container
2024-02-18 20:11:58,560:INFO:Uploading model into container now
2024-02-18 20:11:58,560:INFO:_master_model_container: 13
2024-02-18 20:11:58,561:INFO:_display_container: 2
2024-02-18 20:11:58,562:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4447, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-02-18 20:11:58,562:INFO:create_model() successfully completed......................................
2024-02-18 20:11:58,723:INFO:SubProcess create_model() end ==================================
2024-02-18 20:11:58,723:INFO:Creating metrics dataframe
2024-02-18 20:11:58,744:INFO:Initializing Dummy Classifier
2024-02-18 20:11:58,744:INFO:Total runtime is 0.3567272384961446 minutes
2024-02-18 20:11:58,752:INFO:SubProcess create_model() called ==================================
2024-02-18 20:11:58,753:INFO:Initializing create_model()
2024-02-18 20:11:58,753:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211B5FB85B0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000211B5F9B250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:11:58,753:INFO:Checking exceptions
2024-02-18 20:11:58,754:INFO:Importing libraries
2024-02-18 20:11:58,754:INFO:Copying training dataset
2024-02-18 20:11:58,769:INFO:Defining folds
2024-02-18 20:11:58,769:INFO:Declaring metric variables
2024-02-18 20:11:58,777:INFO:Importing untrained model
2024-02-18 20:11:58,787:INFO:Dummy Classifier Imported successfully
2024-02-18 20:11:58,807:INFO:Starting cross validation
2024-02-18 20:11:58,808:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:11:58,874:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 20:11:58,884:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 20:11:58,894:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 20:11:58,903:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 20:11:58,910:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 20:11:58,916:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 20:11:58,928:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 20:11:58,936:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 20:11:58,939:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 20:11:58,947:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 20:11:58,955:INFO:Calculating mean and std
2024-02-18 20:11:58,957:INFO:Creating metrics dataframe
2024-02-18 20:11:58,961:INFO:Uploading results into container
2024-02-18 20:11:58,962:INFO:Uploading model into container now
2024-02-18 20:11:58,963:INFO:_master_model_container: 14
2024-02-18 20:11:58,963:INFO:_display_container: 2
2024-02-18 20:11:58,963:INFO:DummyClassifier(constant=None, random_state=4447, strategy='prior')
2024-02-18 20:11:58,964:INFO:create_model() successfully completed......................................
2024-02-18 20:11:59,093:INFO:SubProcess create_model() end ==================================
2024-02-18 20:11:59,093:INFO:Creating metrics dataframe
2024-02-18 20:11:59,126:INFO:Initializing create_model()
2024-02-18 20:11:59,126:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211B5FB85B0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=4447), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:11:59,126:INFO:Checking exceptions
2024-02-18 20:11:59,129:INFO:Importing libraries
2024-02-18 20:11:59,130:INFO:Copying training dataset
2024-02-18 20:11:59,140:INFO:Defining folds
2024-02-18 20:11:59,140:INFO:Declaring metric variables
2024-02-18 20:11:59,140:INFO:Importing untrained model
2024-02-18 20:11:59,141:INFO:Declaring custom model
2024-02-18 20:11:59,142:INFO:Ada Boost Classifier Imported successfully
2024-02-18 20:11:59,143:INFO:Cross validation set to False
2024-02-18 20:11:59,143:INFO:Fitting Model
2024-02-18 20:11:59,403:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=4447)
2024-02-18 20:11:59,404:INFO:create_model() successfully completed......................................
2024-02-18 20:11:59,537:INFO:_master_model_container: 14
2024-02-18 20:11:59,537:INFO:_display_container: 2
2024-02-18 20:11:59,538:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=4447)
2024-02-18 20:11:59,538:INFO:compare_models() successfully completed......................................
2024-02-18 20:11:59,573:INFO:Initializing evaluate_model()
2024-02-18 20:11:59,573:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211B5FB85B0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=4447), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-02-18 20:11:59,588:INFO:Initializing plot_model()
2024-02-18 20:11:59,589:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=4447), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211B5FB85B0>, system=True)
2024-02-18 20:11:59,589:INFO:Checking exceptions
2024-02-18 20:11:59,592:INFO:Preloading libraries
2024-02-18 20:11:59,596:INFO:Copying training dataset
2024-02-18 20:11:59,596:INFO:Plot type: pipeline
2024-02-18 20:11:59,665:INFO:Visual Rendered Successfully
2024-02-18 20:11:59,750:INFO:plot_model() successfully completed......................................
2024-02-18 20:11:59,765:INFO:Initializing plot_model()
2024-02-18 20:11:59,765:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=4447), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211B5FB85B0>, system=True)
2024-02-18 20:11:59,765:INFO:Checking exceptions
2024-02-18 20:11:59,773:INFO:Preloading libraries
2024-02-18 20:11:59,779:INFO:Copying training dataset
2024-02-18 20:11:59,779:INFO:Plot type: auc
2024-02-18 20:11:59,890:INFO:Fitting Model
2024-02-18 20:11:59,891:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but AdaBoostClassifier was fitted with feature names
  warnings.warn(

2024-02-18 20:11:59,891:INFO:Scoring test/hold-out set
2024-02-18 20:12:00,079:INFO:Visual Rendered Successfully
2024-02-18 20:12:00,165:INFO:plot_model() successfully completed......................................
2024-02-18 20:12:00,175:INFO:Initializing save_model()
2024-02-18 20:12:00,176:INFO:save_model(model=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=4447), model_name=pycaret_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\santh\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-02-18 20:12:00,176:INFO:Adding model into prep_pipe
2024-02-18 20:12:00,200:INFO:pycaret_model.pkl saved in current working directory
2024-02-18 20:12:00,204:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R',
                                    base_estimator='deprecated', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=4447))],
         verbose=False)
2024-02-18 20:12:00,204:INFO:save_model() successfully completed......................................
2024-02-18 20:12:05,820:INFO:Initializing load_model()
2024-02-18 20:12:05,821:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-18 20:12:07,799:INFO:Initializing predict_model()
2024-02-18 20:12:07,800:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211B5F9AC50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R',
                                    base_estimator='deprecated', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=4447))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000211B5D1F640>)
2024-02-18 20:12:07,800:INFO:Checking exceptions
2024-02-18 20:12:07,800:INFO:Preloading libraries
2024-02-18 20:12:07,800:INFO:Set up data.
2024-02-18 20:12:07,807:INFO:Set up index.
2024-02-18 20:13:26,222:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_a54e3357d26040e194fd3c6793f8f199
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,222:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_17af2bf12cd149588f488a28ffeaaa01_519c71cd3a2e4e6ca70d610091bab855
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,222:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_ac7ea6561f5741dea03aa8249845326c
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,223:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_44861a6f87ab4a03a5ec8e6aa8275f3b_8f2bcc64cd01413f824813c4347586f8
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,223:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_f089e649c227425d884d13f74e0844df
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,223:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_5a90e2c5c3b041749aa77dc0680f1ca7_69a4ba6833c04aa4882a2d7bcee2882d
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,223:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_2cfa6737fd0e4d48b3a0abc774aea5d8
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,223:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_bf8a4ea978c641608431e33dd5a721a7_7ec0de40913f4f6da4b112e8f2c0543e
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,223:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_5fd15dcbc32a44a9b838f1a1a60fa180
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,223:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_f9bafee9cd3444658f74f55a0651fdce_193360eda37f4bc88b55d9aeb97e8c8d
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,223:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_b6c35b4a3a3644028effedd312914599
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,223:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_819a6855324a41c4b83a24939a7a1fad_7c45400466064aa0be26e82c13bc8984
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,224:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_23149e9ab29f460fba023f93c98d22b2
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,224:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_5d6974d1856444ea87196f80c82c32b7_cf4b4cba00854ef0b81f64c1ccd60da9
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,224:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_1eac947e411c478c9eb8c52d55cf2b53
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,224:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_fb0b4d35d4c54b42bfe4f5049cb0b84c_f361532040324e26952568b540fdf992
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,224:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_5ce9d18526ce4122a0c63df6c613ef8d
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,224:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_34ad811635f94c6983ec33f6d7e28729_88da39ae794145989a6cdca641ca6bc7
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,224:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_ad2b436fe05b43b3aa516508ce3fd547
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,224:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_121f40673ce74e28a969aa20ec85dceb_f1655a6bc21940e78ae0925914124f7b
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,224:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_b315c792a4f74dafbe975645e7e0dd50
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,224:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_d5254b9809b447678af82d6d75de4332_6c3fe114e96c4c5aba35e50876c8b725
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,224:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_5b07464113de4739837cee259b804f24
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,225:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_d4f823f7c0924ad89c14f4637888ae39_53b48d29cccb455b9b9bcdcc6e787170
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,225:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_9a35522e25b243c8a4290367bc9c066b
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,225:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_ca60f8b50d4f44e18f7e97966e95c331_ef859ce703454e9b8c0b7a853814c4c1
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,225:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_534543346af34497967aed4f0bb7fd2d
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,225:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_b6305b306f9d453d937795eedbe073ea_ce604245ee1a421da9a88222c44bb1f3
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,229:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_908910981047450083559d71c449c7ac
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,229:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_150032cab64c45908234e947c17aa4b7_f8e5c1f339b6467abcb05f0a21821341
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,229:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_08e1559865a943a09413620a9379fd93
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,229:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_815f22970cec46b59e69dd79acd7e614_2fe14722a2054bf9a52aadc7552e2d3a
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,229:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_5360c76a610a4c87ade92b3e02c3c53b
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,229:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_a6df03e5955a434485d5581ff97974f2_ebe2ff7c3faf4876b60772326b14d05e
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,229:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_92f58933cab2425b9a2040f76100415a
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,229:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_37fcd71de60b4d2d8e46bccf7f6159c5_aaebd1eb0f6c401f9aea314c229e1c64
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,229:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_32d87d93ba9d440eb9ed6c140a293bc8
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,230:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_42b7cbc1f05b49638ab4b80d60fe09a6_75169561ec104e789ba7e2a0fa46956b
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,230:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_81bfc2289b9e428fb24f3540d133b6f2
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,230:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_c02c58fa27244b6ba3aa5ffaa898f17c_5e832f3aa58c4a8f83b1226986325c5a
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,230:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_bc6d5be4ec6b4bdca5edf133559a12b3
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,230:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_d86180231ba84f80973ce9c9fd764537_da2d2a324a50460c99f21fa1bd5fdac0
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,230:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_2d531c277cfc4b2aa67c32d336b96fb9
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,230:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_f7e92926962f4f37b843aa260a0da1d5_d6ec53befbf14ed2b4ff32ac5e64bd2e
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,230:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_7bc04a54a14a4913a58a2ee092145f4a
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,230:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_8b70528d228e4320a87ea66ac20a1d40_59ded9b73a4f4f2092867f9019ca08a6
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,230:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_3f700347a16f4acb9a8d582ac6165f7a
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,231:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_11760602d62644be9619a003d006491a_d1bbc6741b9c495caae5d88fd2239fc4
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,231:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_f71d16d034f04999948eabdf1318bdf4
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,231:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_f91158fd88674c01820afbdb529bec84_450fa7793f5d45878113b77610b78b79
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,231:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_e51eee6c343f4de9ad507c3ddfb9ca78
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,231:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_63aa36a899bc44748a7e41263827d481_ab065cf162fd452d965cf8a16dee7051
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,231:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_62777e21017a43b2b4f07b2ad2e8ff5d
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,231:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_d89c0ff79514418e893be5fcf54a9c59_e1a7b729da8d4d5bbaa95017f60e9ffe
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,231:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_e96a0377d5af4feab805e0a5185e6471
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,231:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_2bf746824e264f29840f52f6be59535d_fbb91309ec8b45839147efe41d530a34
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,231:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_5cc51c1f5fbc48dda7170cbe20366546
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,231:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_ee289673d9ac4bf29c6f8c85127eabc4_5f67422742be48bda3a74d1aa20675e6
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,232:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_abd86c86816b43fea6a57be685026063
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,232:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_a96913abb560466fbe207f683cf4d059_08d11b9754d9446e9cad30dcfcbb4aef
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,232:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_8963710575a448a694b63cd0d33ccb02
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,232:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_9d2fe8dce4994f2e84606e6de603476c_fb916dbd343f40199a1fe5182fe08959
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,232:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_2dbd616f732647d99b5ba59a7ae127d4
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,232:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_96292edbb2fd4c09a41421499feae439_4fbeab9b06d3450692c0b37deb28d09e
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,232:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_e5bda806cf894921afc6ae706909a076
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,232:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_22951d8fd16d4ad39b67af087c0db070_b3fd66114ba94ef6ba818ff115d7e3f5
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,232:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_46301e5a6d4b41b6973909c22fc97356
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,232:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_2a4ccd81f682429688beda9330e36ca3_8ff8c16149b347619055868f35eb2737
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,232:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_7a71714bb0e5487fb901ed50d2898540
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,233:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_cecf4ff7539444aea0f0f26c5ada717f_8f1eeb57e8e643d088d4ad7a3bf84758
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,233:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_b61fdd67bd154a67b49b2cc90c8066ac
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,233:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_cb042d705e30462fa377b1e4fbe60f59_ef733302c2c04138a24457f3dd231cdf
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,233:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_d632538aab584265828f405de7e0b017
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,233:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_0e890ac439354dc2b9469e89a493f4a3_3bd85608918c41f0985ab07c55b1d7c0
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,233:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_690699f739204ae99db56f4f26cd375c
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,233:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_e8798bc92e3f444ca0d28ae39258c0b5_b5416b2b90a44c7e9bc1239b538837d8
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,233:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_5a1dce7407134c52ab43fea4e780c93c
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,233:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_450a93fff0f64944be39139cb9321003_1cb7adf4fc574784968353c503f4fb7e
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,233:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_b4d7b024f13c4ebabd1f7bbdbb26be1b
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,233:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_f71ce985a79f4403b8aaa91bae620d25_1aab747eac1a42508bf77b8b622c01ae
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,233:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_4c6d38239d7d4fc28cbc5b0a3594168b
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,234:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_b9b6e1ed110d4451b7ce2e5b0027dcaa_e7a8cfe1b71e410da30f14a56ca237c9
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,234:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_cda5acc8525f4cbe849ed139d59226b0
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:26,234:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_21916_1bea2c7b7b22401aaa44c1aa4357a97f_4a0f3499c0504c60ac417284b7f63ac5
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-18 20:13:38,806:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-18 20:13:38,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-18 20:13:38,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-18 20:13:38,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-18 20:13:39,537:INFO:PyCaret ClassificationExperiment
2024-02-18 20:13:39,537:INFO:Logging name: clf-default-name
2024-02-18 20:13:39,537:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-18 20:13:39,538:INFO:version 3.2.0
2024-02-18 20:13:39,538:INFO:Initializing setup()
2024-02-18 20:13:39,538:INFO:self.USI: eddf
2024-02-18 20:13:39,538:INFO:self._variable_keys: {'log_plots_param', 'gpu_n_jobs_param', 'fold_groups_param', 'exp_name_log', '_available_plots', 'seed', 'y_train', 'fix_imbalance', 'y_test', 'X_train', 'X', 'logging_param', 'gpu_param', 'n_jobs_param', 'y', 'target_param', 'memory', 'fold_generator', '_ml_usecase', 'html_param', 'exp_id', 'X_test', 'data', 'fold_shuffle_param', 'idx', 'pipeline', 'is_multiclass', 'USI'}
2024-02-18 20:13:39,538:INFO:Checking environment
2024-02-18 20:13:39,538:INFO:python_version: 3.10.13
2024-02-18 20:13:39,538:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2024-02-18 20:13:39,538:INFO:machine: AMD64
2024-02-18 20:13:39,538:INFO:platform: Windows-10-10.0.22621-SP0
2024-02-18 20:13:39,542:INFO:Memory: svmem(total=16952647680, available=6337204224, percent=62.6, used=10615443456, free=6337204224)
2024-02-18 20:13:39,542:INFO:Physical Core: 4
2024-02-18 20:13:39,542:INFO:Logical Core: 8
2024-02-18 20:13:39,542:INFO:Checking libraries
2024-02-18 20:13:39,542:INFO:System:
2024-02-18 20:13:39,542:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2024-02-18 20:13:39,542:INFO:executable: C:\Users\santh\anaconda3\envs\msds\python.exe
2024-02-18 20:13:39,542:INFO:   machine: Windows-10-10.0.22621-SP0
2024-02-18 20:13:39,542:INFO:PyCaret required dependencies:
2024-02-18 20:13:40,420:INFO:                 pip: 23.3.1
2024-02-18 20:13:40,420:INFO:          setuptools: 68.2.2
2024-02-18 20:13:40,420:INFO:             pycaret: 3.2.0
2024-02-18 20:13:40,420:INFO:             IPython: 8.20.0
2024-02-18 20:13:40,421:INFO:          ipywidgets: 8.0.4
2024-02-18 20:13:40,421:INFO:                tqdm: 4.65.0
2024-02-18 20:13:40,421:INFO:               numpy: 1.25.2
2024-02-18 20:13:40,421:INFO:              pandas: 1.5.3
2024-02-18 20:13:40,421:INFO:              jinja2: 3.1.3
2024-02-18 20:13:40,421:INFO:               scipy: 1.10.1
2024-02-18 20:13:40,421:INFO:              joblib: 1.2.0
2024-02-18 20:13:40,421:INFO:             sklearn: 1.2.2
2024-02-18 20:13:40,421:INFO:                pyod: 1.1.3
2024-02-18 20:13:40,421:INFO:            imblearn: 0.11.0
2024-02-18 20:13:40,421:INFO:   category_encoders: 2.6.3
2024-02-18 20:13:40,421:INFO:            lightgbm: 4.3.0
2024-02-18 20:13:40,421:INFO:               numba: 0.59.0
2024-02-18 20:13:40,421:INFO:            requests: 2.31.0
2024-02-18 20:13:40,421:INFO:          matplotlib: 3.6.0
2024-02-18 20:13:40,421:INFO:          scikitplot: 0.3.7
2024-02-18 20:13:40,421:INFO:         yellowbrick: 1.5
2024-02-18 20:13:40,421:INFO:              plotly: 5.9.0
2024-02-18 20:13:40,421:INFO:    plotly-resampler: Not installed
2024-02-18 20:13:40,421:INFO:             kaleido: 0.2.1
2024-02-18 20:13:40,421:INFO:           schemdraw: 0.15
2024-02-18 20:13:40,421:INFO:         statsmodels: 0.14.0
2024-02-18 20:13:40,421:INFO:              sktime: 0.21.1
2024-02-18 20:13:40,421:INFO:               tbats: 1.1.3
2024-02-18 20:13:40,421:INFO:            pmdarima: 2.0.4
2024-02-18 20:13:40,421:INFO:              psutil: 5.9.0
2024-02-18 20:13:40,421:INFO:          markupsafe: 2.1.3
2024-02-18 20:13:40,421:INFO:             pickle5: Not installed
2024-02-18 20:13:40,421:INFO:         cloudpickle: 2.2.1
2024-02-18 20:13:40,421:INFO:         deprecation: 2.1.0
2024-02-18 20:13:40,422:INFO:              xxhash: 2.0.2
2024-02-18 20:13:40,422:INFO:           wurlitzer: Not installed
2024-02-18 20:13:40,422:INFO:PyCaret optional dependencies:
2024-02-18 20:13:40,437:INFO:                shap: Not installed
2024-02-18 20:13:40,437:INFO:           interpret: Not installed
2024-02-18 20:13:40,437:INFO:                umap: Not installed
2024-02-18 20:13:40,437:INFO:     ydata_profiling: Not installed
2024-02-18 20:13:40,437:INFO:  explainerdashboard: Not installed
2024-02-18 20:13:40,437:INFO:             autoviz: Not installed
2024-02-18 20:13:40,437:INFO:           fairlearn: Not installed
2024-02-18 20:13:40,437:INFO:          deepchecks: Not installed
2024-02-18 20:13:40,437:INFO:             xgboost: Not installed
2024-02-18 20:13:40,437:INFO:            catboost: Not installed
2024-02-18 20:13:40,437:INFO:              kmodes: Not installed
2024-02-18 20:13:40,437:INFO:             mlxtend: Not installed
2024-02-18 20:13:40,437:INFO:       statsforecast: Not installed
2024-02-18 20:13:40,437:INFO:        tune_sklearn: Not installed
2024-02-18 20:13:40,438:INFO:                 ray: Not installed
2024-02-18 20:13:40,438:INFO:            hyperopt: Not installed
2024-02-18 20:13:40,438:INFO:              optuna: Not installed
2024-02-18 20:13:40,438:INFO:               skopt: Not installed
2024-02-18 20:13:40,438:INFO:              mlflow: Not installed
2024-02-18 20:13:40,438:INFO:              gradio: Not installed
2024-02-18 20:13:40,438:INFO:             fastapi: Not installed
2024-02-18 20:13:40,438:INFO:             uvicorn: Not installed
2024-02-18 20:13:40,438:INFO:              m2cgen: Not installed
2024-02-18 20:13:40,438:INFO:           evidently: Not installed
2024-02-18 20:13:40,438:INFO:               fugue: Not installed
2024-02-18 20:13:40,438:INFO:           streamlit: Not installed
2024-02-18 20:13:40,438:INFO:             prophet: Not installed
2024-02-18 20:13:40,438:INFO:None
2024-02-18 20:13:40,438:INFO:Set up data.
2024-02-18 20:13:40,444:INFO:Set up folding strategy.
2024-02-18 20:13:40,444:INFO:Set up train/test split.
2024-02-18 20:13:40,449:INFO:Set up index.
2024-02-18 20:13:40,449:INFO:Assigning column types.
2024-02-18 20:13:40,451:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-18 20:13:40,490:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-18 20:13:40,493:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 20:13:40,523:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:13:40,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:13:40,568:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-18 20:13:40,568:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 20:13:40,602:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:13:40,603:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:13:40,603:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-18 20:13:40,669:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 20:13:40,704:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:13:40,705:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:13:40,759:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 20:13:40,787:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:13:40,787:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:13:40,788:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-18 20:13:40,869:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:13:40,870:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:13:40,939:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:13:40,939:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:13:40,941:INFO:Preparing preprocessing pipeline...
2024-02-18 20:13:40,942:INFO:Set up simple imputation.
2024-02-18 20:13:40,984:INFO:Finished creating preprocessing pipeline.
2024-02-18 20:13:40,990:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\santh\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-18 20:13:40,990:INFO:Creating final display dataframe.
2024-02-18 20:13:41,106:INFO:Setup _display_container:                     Description             Value
0                    Session id              2316
1                        Target             Churn
2                   Target type            Binary
3           Original data shape         (7043, 8)
4        Transformed data shape         (7043, 8)
5   Transformed train set shape         (4930, 8)
6    Transformed test set shape         (2113, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              eddf
2024-02-18 20:13:41,310:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:13:41,311:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:13:41,555:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:13:41,555:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 20:13:41,556:INFO:setup() successfully completed in 2.02s...............
2024-02-18 20:13:41,593:INFO:Initializing compare_models()
2024-02-18 20:13:41,593:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B5B52E470>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000020B5B52E470>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-02-18 20:13:41,594:INFO:Checking exceptions
2024-02-18 20:13:41,602:INFO:Preparing display monitor
2024-02-18 20:13:41,643:INFO:Initializing Logistic Regression
2024-02-18 20:13:41,643:INFO:Total runtime is 0.0 minutes
2024-02-18 20:13:41,649:INFO:SubProcess create_model() called ==================================
2024-02-18 20:13:41,650:INFO:Initializing create_model()
2024-02-18 20:13:41,650:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B5B52E470>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B5B52E260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:13:41,650:INFO:Checking exceptions
2024-02-18 20:13:41,650:INFO:Importing libraries
2024-02-18 20:13:41,650:INFO:Copying training dataset
2024-02-18 20:13:41,657:INFO:Defining folds
2024-02-18 20:13:41,658:INFO:Declaring metric variables
2024-02-18 20:13:41,662:INFO:Importing untrained model
2024-02-18 20:13:41,668:INFO:Logistic Regression Imported successfully
2024-02-18 20:13:41,679:INFO:Starting cross validation
2024-02-18 20:13:41,681:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:13:50,715:INFO:Calculating mean and std
2024-02-18 20:13:50,717:INFO:Creating metrics dataframe
2024-02-18 20:13:50,724:INFO:Uploading results into container
2024-02-18 20:13:50,725:INFO:Uploading model into container now
2024-02-18 20:13:50,726:INFO:_master_model_container: 1
2024-02-18 20:13:50,726:INFO:_display_container: 2
2024-02-18 20:13:50,728:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2316, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-18 20:13:50,728:INFO:create_model() successfully completed......................................
2024-02-18 20:13:50,808:INFO:SubProcess create_model() end ==================================
2024-02-18 20:13:50,808:INFO:Creating metrics dataframe
2024-02-18 20:13:50,818:INFO:Initializing K Neighbors Classifier
2024-02-18 20:13:50,818:INFO:Total runtime is 0.15292105674743653 minutes
2024-02-18 20:13:50,822:INFO:SubProcess create_model() called ==================================
2024-02-18 20:13:50,823:INFO:Initializing create_model()
2024-02-18 20:13:50,823:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B5B52E470>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B5B52E260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:13:50,823:INFO:Checking exceptions
2024-02-18 20:13:50,823:INFO:Importing libraries
2024-02-18 20:13:50,823:INFO:Copying training dataset
2024-02-18 20:13:50,833:INFO:Defining folds
2024-02-18 20:13:50,833:INFO:Declaring metric variables
2024-02-18 20:13:50,839:INFO:Importing untrained model
2024-02-18 20:13:50,846:INFO:K Neighbors Classifier Imported successfully
2024-02-18 20:13:50,857:INFO:Starting cross validation
2024-02-18 20:13:50,859:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:13:51,095:INFO:Calculating mean and std
2024-02-18 20:13:51,096:INFO:Creating metrics dataframe
2024-02-18 20:13:51,100:INFO:Uploading results into container
2024-02-18 20:13:51,101:INFO:Uploading model into container now
2024-02-18 20:13:51,101:INFO:_master_model_container: 2
2024-02-18 20:13:51,101:INFO:_display_container: 2
2024-02-18 20:13:51,102:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-18 20:13:51,102:INFO:create_model() successfully completed......................................
2024-02-18 20:13:51,177:INFO:SubProcess create_model() end ==================================
2024-02-18 20:13:51,177:INFO:Creating metrics dataframe
2024-02-18 20:13:51,188:INFO:Initializing Naive Bayes
2024-02-18 20:13:51,188:INFO:Total runtime is 0.15908653736114503 minutes
2024-02-18 20:13:51,195:INFO:SubProcess create_model() called ==================================
2024-02-18 20:13:51,195:INFO:Initializing create_model()
2024-02-18 20:13:51,195:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B5B52E470>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B5B52E260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:13:51,195:INFO:Checking exceptions
2024-02-18 20:13:51,196:INFO:Importing libraries
2024-02-18 20:13:51,196:INFO:Copying training dataset
2024-02-18 20:13:51,206:INFO:Defining folds
2024-02-18 20:13:51,207:INFO:Declaring metric variables
2024-02-18 20:13:51,216:INFO:Importing untrained model
2024-02-18 20:13:51,223:INFO:Naive Bayes Imported successfully
2024-02-18 20:13:51,235:INFO:Starting cross validation
2024-02-18 20:13:51,237:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:13:51,343:INFO:Calculating mean and std
2024-02-18 20:13:51,345:INFO:Creating metrics dataframe
2024-02-18 20:13:51,348:INFO:Uploading results into container
2024-02-18 20:13:51,349:INFO:Uploading model into container now
2024-02-18 20:13:51,350:INFO:_master_model_container: 3
2024-02-18 20:13:51,350:INFO:_display_container: 2
2024-02-18 20:13:51,350:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-02-18 20:13:51,350:INFO:create_model() successfully completed......................................
2024-02-18 20:13:51,418:INFO:SubProcess create_model() end ==================================
2024-02-18 20:13:51,418:INFO:Creating metrics dataframe
2024-02-18 20:13:51,429:INFO:Initializing Decision Tree Classifier
2024-02-18 20:13:51,430:INFO:Total runtime is 0.16311124960581463 minutes
2024-02-18 20:13:51,435:INFO:SubProcess create_model() called ==================================
2024-02-18 20:13:51,435:INFO:Initializing create_model()
2024-02-18 20:13:51,435:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B5B52E470>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B5B52E260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:13:51,435:INFO:Checking exceptions
2024-02-18 20:13:51,435:INFO:Importing libraries
2024-02-18 20:13:51,436:INFO:Copying training dataset
2024-02-18 20:13:51,441:INFO:Defining folds
2024-02-18 20:13:51,441:INFO:Declaring metric variables
2024-02-18 20:13:51,444:INFO:Importing untrained model
2024-02-18 20:13:51,451:INFO:Decision Tree Classifier Imported successfully
2024-02-18 20:13:51,466:INFO:Starting cross validation
2024-02-18 20:13:51,467:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:13:51,617:INFO:Calculating mean and std
2024-02-18 20:13:51,617:INFO:Creating metrics dataframe
2024-02-18 20:13:51,622:INFO:Uploading results into container
2024-02-18 20:13:51,623:INFO:Uploading model into container now
2024-02-18 20:13:51,623:INFO:_master_model_container: 4
2024-02-18 20:13:51,623:INFO:_display_container: 2
2024-02-18 20:13:51,624:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2316, splitter='best')
2024-02-18 20:13:51,624:INFO:create_model() successfully completed......................................
2024-02-18 20:13:51,691:INFO:SubProcess create_model() end ==================================
2024-02-18 20:13:51,691:INFO:Creating metrics dataframe
2024-02-18 20:13:51,704:INFO:Initializing SVM - Linear Kernel
2024-02-18 20:13:51,705:INFO:Total runtime is 0.1676953117052714 minutes
2024-02-18 20:13:51,709:INFO:SubProcess create_model() called ==================================
2024-02-18 20:13:51,709:INFO:Initializing create_model()
2024-02-18 20:13:51,709:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B5B52E470>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B5B52E260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:13:51,709:INFO:Checking exceptions
2024-02-18 20:13:51,710:INFO:Importing libraries
2024-02-18 20:13:51,710:INFO:Copying training dataset
2024-02-18 20:13:51,717:INFO:Defining folds
2024-02-18 20:13:51,718:INFO:Declaring metric variables
2024-02-18 20:13:51,722:INFO:Importing untrained model
2024-02-18 20:13:51,727:INFO:SVM - Linear Kernel Imported successfully
2024-02-18 20:13:51,740:INFO:Starting cross validation
2024-02-18 20:13:51,741:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:13:51,824:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 20:13:51,827:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 20:13:51,831:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 20:13:51,832:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 20:13:51,835:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 20:13:51,840:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 20:13:51,843:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 20:13:51,859:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 20:13:51,893:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 20:13:51,904:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 20:13:51,913:INFO:Calculating mean and std
2024-02-18 20:13:51,914:INFO:Creating metrics dataframe
2024-02-18 20:13:51,918:INFO:Uploading results into container
2024-02-18 20:13:51,919:INFO:Uploading model into container now
2024-02-18 20:13:51,920:INFO:_master_model_container: 5
2024-02-18 20:13:51,920:INFO:_display_container: 2
2024-02-18 20:13:51,921:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2316, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-02-18 20:13:51,921:INFO:create_model() successfully completed......................................
2024-02-18 20:13:51,994:INFO:SubProcess create_model() end ==================================
2024-02-18 20:13:51,994:INFO:Creating metrics dataframe
2024-02-18 20:13:52,006:INFO:Initializing Ridge Classifier
2024-02-18 20:13:52,006:INFO:Total runtime is 0.17271796464920045 minutes
2024-02-18 20:13:52,010:INFO:SubProcess create_model() called ==================================
2024-02-18 20:13:52,011:INFO:Initializing create_model()
2024-02-18 20:13:52,011:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B5B52E470>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B5B52E260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:13:52,011:INFO:Checking exceptions
2024-02-18 20:13:52,011:INFO:Importing libraries
2024-02-18 20:13:52,012:INFO:Copying training dataset
2024-02-18 20:13:52,017:INFO:Defining folds
2024-02-18 20:13:52,017:INFO:Declaring metric variables
2024-02-18 20:13:52,021:INFO:Importing untrained model
2024-02-18 20:13:52,028:INFO:Ridge Classifier Imported successfully
2024-02-18 20:13:52,040:INFO:Starting cross validation
2024-02-18 20:13:52,041:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:13:52,070:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.40333e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 20:13:52,079:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.41811e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 20:13:52,080:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.38004e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 20:13:52,080:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 20:13:52,089:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.36028e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 20:13:52,089:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 20:13:52,090:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 20:13:52,094:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.38109e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 20:13:52,099:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 20:13:52,099:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.36988e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 20:13:52,104:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 20:13:52,104:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.36692e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 20:13:52,109:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 20:13:52,111:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.38155e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 20:13:52,114:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 20:13:52,121:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 20:13:52,123:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.37866e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 20:13:52,129:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.376e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-18 20:13:52,130:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 20:13:52,136:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 20:13:52,146:INFO:Calculating mean and std
2024-02-18 20:13:52,146:INFO:Creating metrics dataframe
2024-02-18 20:13:52,151:INFO:Uploading results into container
2024-02-18 20:13:52,151:INFO:Uploading model into container now
2024-02-18 20:13:52,152:INFO:_master_model_container: 6
2024-02-18 20:13:52,152:INFO:_display_container: 2
2024-02-18 20:13:52,152:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2316, solver='auto',
                tol=0.0001)
2024-02-18 20:13:52,152:INFO:create_model() successfully completed......................................
2024-02-18 20:13:52,227:INFO:SubProcess create_model() end ==================================
2024-02-18 20:13:52,228:INFO:Creating metrics dataframe
2024-02-18 20:13:52,245:INFO:Initializing Random Forest Classifier
2024-02-18 20:13:52,245:INFO:Total runtime is 0.17670137484868367 minutes
2024-02-18 20:13:52,251:INFO:SubProcess create_model() called ==================================
2024-02-18 20:13:52,253:INFO:Initializing create_model()
2024-02-18 20:13:52,253:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B5B52E470>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B5B52E260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:13:52,253:INFO:Checking exceptions
2024-02-18 20:13:52,254:INFO:Importing libraries
2024-02-18 20:13:52,254:INFO:Copying training dataset
2024-02-18 20:13:52,261:INFO:Defining folds
2024-02-18 20:13:52,261:INFO:Declaring metric variables
2024-02-18 20:13:52,265:INFO:Importing untrained model
2024-02-18 20:13:52,271:INFO:Random Forest Classifier Imported successfully
2024-02-18 20:13:52,286:INFO:Starting cross validation
2024-02-18 20:13:52,287:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:13:54,448:INFO:Calculating mean and std
2024-02-18 20:13:54,448:INFO:Creating metrics dataframe
2024-02-18 20:13:54,453:INFO:Uploading results into container
2024-02-18 20:13:54,454:INFO:Uploading model into container now
2024-02-18 20:13:54,455:INFO:_master_model_container: 7
2024-02-18 20:13:54,455:INFO:_display_container: 2
2024-02-18 20:13:54,456:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2316, verbose=0, warm_start=False)
2024-02-18 20:13:54,456:INFO:create_model() successfully completed......................................
2024-02-18 20:13:54,534:INFO:SubProcess create_model() end ==================================
2024-02-18 20:13:54,534:INFO:Creating metrics dataframe
2024-02-18 20:13:54,551:INFO:Initializing Quadratic Discriminant Analysis
2024-02-18 20:13:54,552:INFO:Total runtime is 0.21513993342717488 minutes
2024-02-18 20:13:54,557:INFO:SubProcess create_model() called ==================================
2024-02-18 20:13:54,557:INFO:Initializing create_model()
2024-02-18 20:13:54,557:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B5B52E470>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B5B52E260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:13:54,557:INFO:Checking exceptions
2024-02-18 20:13:54,557:INFO:Importing libraries
2024-02-18 20:13:54,557:INFO:Copying training dataset
2024-02-18 20:13:54,565:INFO:Defining folds
2024-02-18 20:13:54,565:INFO:Declaring metric variables
2024-02-18 20:13:54,571:INFO:Importing untrained model
2024-02-18 20:13:54,578:INFO:Quadratic Discriminant Analysis Imported successfully
2024-02-18 20:13:54,593:INFO:Starting cross validation
2024-02-18 20:13:54,595:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:13:54,711:INFO:Calculating mean and std
2024-02-18 20:13:54,711:INFO:Creating metrics dataframe
2024-02-18 20:13:54,716:INFO:Uploading results into container
2024-02-18 20:13:54,717:INFO:Uploading model into container now
2024-02-18 20:13:54,718:INFO:_master_model_container: 8
2024-02-18 20:13:54,718:INFO:_display_container: 2
2024-02-18 20:13:54,718:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-02-18 20:13:54,718:INFO:create_model() successfully completed......................................
2024-02-18 20:13:54,792:INFO:SubProcess create_model() end ==================================
2024-02-18 20:13:54,793:INFO:Creating metrics dataframe
2024-02-18 20:13:54,810:INFO:Initializing Ada Boost Classifier
2024-02-18 20:13:54,810:INFO:Total runtime is 0.21943898995717367 minutes
2024-02-18 20:13:54,816:INFO:SubProcess create_model() called ==================================
2024-02-18 20:13:54,816:INFO:Initializing create_model()
2024-02-18 20:13:54,816:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B5B52E470>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B5B52E260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:13:54,816:INFO:Checking exceptions
2024-02-18 20:13:54,816:INFO:Importing libraries
2024-02-18 20:13:54,817:INFO:Copying training dataset
2024-02-18 20:13:54,825:INFO:Defining folds
2024-02-18 20:13:54,825:INFO:Declaring metric variables
2024-02-18 20:13:54,829:INFO:Importing untrained model
2024-02-18 20:13:54,835:INFO:Ada Boost Classifier Imported successfully
2024-02-18 20:13:54,845:INFO:Starting cross validation
2024-02-18 20:13:54,847:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:13:55,713:INFO:Calculating mean and std
2024-02-18 20:13:55,713:INFO:Creating metrics dataframe
2024-02-18 20:13:55,718:INFO:Uploading results into container
2024-02-18 20:13:55,719:INFO:Uploading model into container now
2024-02-18 20:13:55,720:INFO:_master_model_container: 9
2024-02-18 20:13:55,720:INFO:_display_container: 2
2024-02-18 20:13:55,720:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2316)
2024-02-18 20:13:55,721:INFO:create_model() successfully completed......................................
2024-02-18 20:13:55,791:INFO:SubProcess create_model() end ==================================
2024-02-18 20:13:55,791:INFO:Creating metrics dataframe
2024-02-18 20:13:55,804:INFO:Initializing Gradient Boosting Classifier
2024-02-18 20:13:55,804:INFO:Total runtime is 0.2360107978185018 minutes
2024-02-18 20:13:55,810:INFO:SubProcess create_model() called ==================================
2024-02-18 20:13:55,811:INFO:Initializing create_model()
2024-02-18 20:13:55,811:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B5B52E470>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B5B52E260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:13:55,811:INFO:Checking exceptions
2024-02-18 20:13:55,811:INFO:Importing libraries
2024-02-18 20:13:55,811:INFO:Copying training dataset
2024-02-18 20:13:55,817:INFO:Defining folds
2024-02-18 20:13:55,817:INFO:Declaring metric variables
2024-02-18 20:13:55,822:INFO:Importing untrained model
2024-02-18 20:13:55,831:INFO:Gradient Boosting Classifier Imported successfully
2024-02-18 20:13:55,843:INFO:Starting cross validation
2024-02-18 20:13:55,845:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:13:58,193:INFO:Calculating mean and std
2024-02-18 20:13:58,195:INFO:Creating metrics dataframe
2024-02-18 20:13:58,199:INFO:Uploading results into container
2024-02-18 20:13:58,200:INFO:Uploading model into container now
2024-02-18 20:13:58,200:INFO:_master_model_container: 10
2024-02-18 20:13:58,200:INFO:_display_container: 2
2024-02-18 20:13:58,200:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2316, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-18 20:13:58,200:INFO:create_model() successfully completed......................................
2024-02-18 20:13:58,271:INFO:SubProcess create_model() end ==================================
2024-02-18 20:13:58,271:INFO:Creating metrics dataframe
2024-02-18 20:13:58,282:INFO:Initializing Linear Discriminant Analysis
2024-02-18 20:13:58,282:INFO:Total runtime is 0.27731088797251385 minutes
2024-02-18 20:13:58,285:INFO:SubProcess create_model() called ==================================
2024-02-18 20:13:58,286:INFO:Initializing create_model()
2024-02-18 20:13:58,286:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B5B52E470>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B5B52E260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:13:58,286:INFO:Checking exceptions
2024-02-18 20:13:58,286:INFO:Importing libraries
2024-02-18 20:13:58,286:INFO:Copying training dataset
2024-02-18 20:13:58,292:INFO:Defining folds
2024-02-18 20:13:58,292:INFO:Declaring metric variables
2024-02-18 20:13:58,297:INFO:Importing untrained model
2024-02-18 20:13:58,304:INFO:Linear Discriminant Analysis Imported successfully
2024-02-18 20:13:58,317:INFO:Starting cross validation
2024-02-18 20:13:58,318:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:13:58,426:INFO:Calculating mean and std
2024-02-18 20:13:58,427:INFO:Creating metrics dataframe
2024-02-18 20:13:58,430:INFO:Uploading results into container
2024-02-18 20:13:58,431:INFO:Uploading model into container now
2024-02-18 20:13:58,431:INFO:_master_model_container: 11
2024-02-18 20:13:58,431:INFO:_display_container: 2
2024-02-18 20:13:58,432:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-02-18 20:13:58,432:INFO:create_model() successfully completed......................................
2024-02-18 20:13:58,498:INFO:SubProcess create_model() end ==================================
2024-02-18 20:13:58,498:INFO:Creating metrics dataframe
2024-02-18 20:13:58,512:INFO:Initializing Extra Trees Classifier
2024-02-18 20:13:58,512:INFO:Total runtime is 0.281151819229126 minutes
2024-02-18 20:13:58,518:INFO:SubProcess create_model() called ==================================
2024-02-18 20:13:58,519:INFO:Initializing create_model()
2024-02-18 20:13:58,519:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B5B52E470>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B5B52E260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:13:58,519:INFO:Checking exceptions
2024-02-18 20:13:58,519:INFO:Importing libraries
2024-02-18 20:13:58,519:INFO:Copying training dataset
2024-02-18 20:13:58,524:INFO:Defining folds
2024-02-18 20:13:58,525:INFO:Declaring metric variables
2024-02-18 20:13:58,528:INFO:Importing untrained model
2024-02-18 20:13:58,534:INFO:Extra Trees Classifier Imported successfully
2024-02-18 20:13:58,548:INFO:Starting cross validation
2024-02-18 20:13:58,549:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:14:00,098:INFO:Calculating mean and std
2024-02-18 20:14:00,098:INFO:Creating metrics dataframe
2024-02-18 20:14:00,105:INFO:Uploading results into container
2024-02-18 20:14:00,105:INFO:Uploading model into container now
2024-02-18 20:14:00,107:INFO:_master_model_container: 12
2024-02-18 20:14:00,107:INFO:_display_container: 2
2024-02-18 20:14:00,108:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2316, verbose=0, warm_start=False)
2024-02-18 20:14:00,108:INFO:create_model() successfully completed......................................
2024-02-18 20:14:00,184:INFO:SubProcess create_model() end ==================================
2024-02-18 20:14:00,185:INFO:Creating metrics dataframe
2024-02-18 20:14:00,199:INFO:Initializing Light Gradient Boosting Machine
2024-02-18 20:14:00,200:INFO:Total runtime is 0.3092801928520203 minutes
2024-02-18 20:14:00,204:INFO:SubProcess create_model() called ==================================
2024-02-18 20:14:00,204:INFO:Initializing create_model()
2024-02-18 20:14:00,205:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B5B52E470>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B5B52E260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:14:00,205:INFO:Checking exceptions
2024-02-18 20:14:00,205:INFO:Importing libraries
2024-02-18 20:14:00,205:INFO:Copying training dataset
2024-02-18 20:14:00,215:INFO:Defining folds
2024-02-18 20:14:00,215:INFO:Declaring metric variables
2024-02-18 20:14:00,221:INFO:Importing untrained model
2024-02-18 20:14:00,227:INFO:Light Gradient Boosting Machine Imported successfully
2024-02-18 20:14:00,241:INFO:Starting cross validation
2024-02-18 20:14:00,243:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:14:01,693:INFO:Calculating mean and std
2024-02-18 20:14:01,694:INFO:Creating metrics dataframe
2024-02-18 20:14:01,701:INFO:Uploading results into container
2024-02-18 20:14:01,702:INFO:Uploading model into container now
2024-02-18 20:14:01,703:INFO:_master_model_container: 13
2024-02-18 20:14:01,703:INFO:_display_container: 2
2024-02-18 20:14:01,704:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2316, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-02-18 20:14:01,705:INFO:create_model() successfully completed......................................
2024-02-18 20:14:01,804:INFO:SubProcess create_model() end ==================================
2024-02-18 20:14:01,804:INFO:Creating metrics dataframe
2024-02-18 20:14:01,820:INFO:Initializing Dummy Classifier
2024-02-18 20:14:01,821:INFO:Total runtime is 0.3362967411677043 minutes
2024-02-18 20:14:01,827:INFO:SubProcess create_model() called ==================================
2024-02-18 20:14:01,828:INFO:Initializing create_model()
2024-02-18 20:14:01,829:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B5B52E470>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B5B52E260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:14:01,829:INFO:Checking exceptions
2024-02-18 20:14:01,829:INFO:Importing libraries
2024-02-18 20:14:01,829:INFO:Copying training dataset
2024-02-18 20:14:01,838:INFO:Defining folds
2024-02-18 20:14:01,839:INFO:Declaring metric variables
2024-02-18 20:14:01,846:INFO:Importing untrained model
2024-02-18 20:14:01,854:INFO:Dummy Classifier Imported successfully
2024-02-18 20:14:01,863:INFO:Starting cross validation
2024-02-18 20:14:01,865:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 20:14:01,910:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 20:14:01,910:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 20:14:01,923:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 20:14:01,931:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 20:14:01,935:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 20:14:01,941:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 20:14:01,947:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 20:14:01,948:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 20:14:01,955:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 20:14:01,955:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 20:14:01,962:INFO:Calculating mean and std
2024-02-18 20:14:01,964:INFO:Creating metrics dataframe
2024-02-18 20:14:01,968:INFO:Uploading results into container
2024-02-18 20:14:01,969:INFO:Uploading model into container now
2024-02-18 20:14:01,970:INFO:_master_model_container: 14
2024-02-18 20:14:01,970:INFO:_display_container: 2
2024-02-18 20:14:01,970:INFO:DummyClassifier(constant=None, random_state=2316, strategy='prior')
2024-02-18 20:14:01,970:INFO:create_model() successfully completed......................................
2024-02-18 20:14:02,047:INFO:SubProcess create_model() end ==================================
2024-02-18 20:14:02,048:INFO:Creating metrics dataframe
2024-02-18 20:14:02,076:INFO:Initializing create_model()
2024-02-18 20:14:02,077:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B5B52E470>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2316, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 20:14:02,077:INFO:Checking exceptions
2024-02-18 20:14:02,079:INFO:Importing libraries
2024-02-18 20:14:02,080:INFO:Copying training dataset
2024-02-18 20:14:02,090:INFO:Defining folds
2024-02-18 20:14:02,090:INFO:Declaring metric variables
2024-02-18 20:14:02,090:INFO:Importing untrained model
2024-02-18 20:14:02,090:INFO:Declaring custom model
2024-02-18 20:14:02,091:INFO:Logistic Regression Imported successfully
2024-02-18 20:14:02,092:INFO:Cross validation set to False
2024-02-18 20:14:02,092:INFO:Fitting Model
2024-02-18 20:14:02,155:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2316, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-18 20:14:02,155:INFO:create_model() successfully completed......................................
2024-02-18 20:14:02,265:INFO:_master_model_container: 14
2024-02-18 20:14:02,266:INFO:_display_container: 2
2024-02-18 20:14:02,266:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2316, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-18 20:14:02,267:INFO:compare_models() successfully completed......................................
2024-02-18 20:14:02,299:INFO:Initializing evaluate_model()
2024-02-18 20:14:02,300:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B5B52E470>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2316, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-02-18 20:14:02,324:INFO:Initializing plot_model()
2024-02-18 20:14:02,324:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2316, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B5B52E470>, system=True)
2024-02-18 20:14:02,324:INFO:Checking exceptions
2024-02-18 20:14:02,328:INFO:Preloading libraries
2024-02-18 20:14:02,328:INFO:Copying training dataset
2024-02-18 20:14:02,328:INFO:Plot type: pipeline
2024-02-18 20:14:02,459:INFO:Visual Rendered Successfully
2024-02-18 20:14:02,527:INFO:plot_model() successfully completed......................................
2024-02-18 20:14:02,552:INFO:Initializing plot_model()
2024-02-18 20:14:02,552:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2316, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B5B52E470>, system=True)
2024-02-18 20:14:02,553:INFO:Checking exceptions
2024-02-18 20:14:02,558:INFO:Preloading libraries
2024-02-18 20:14:02,558:INFO:Copying training dataset
2024-02-18 20:14:02,558:INFO:Plot type: auc
2024-02-18 20:14:02,692:INFO:Fitting Model
2024-02-18 20:14:02,694:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-02-18 20:14:02,694:INFO:Scoring test/hold-out set
2024-02-18 20:14:02,897:INFO:Visual Rendered Successfully
2024-02-18 20:14:02,977:INFO:plot_model() successfully completed......................................
2024-02-18 20:14:03,013:INFO:Initializing save_model()
2024-02-18 20:14:03,014:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2316, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=pycaret_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\santh\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-02-18 20:14:03,014:INFO:Adding model into prep_pipe
2024-02-18 20:14:03,020:INFO:pycaret_model.pkl saved in current working directory
2024-02-18 20:14:03,026:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=2316,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-02-18 20:14:03,027:INFO:save_model() successfully completed......................................
2024-02-18 20:14:03,134:INFO:Initializing load_model()
2024-02-18 20:14:03,134:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-18 20:14:03,175:INFO:Initializing predict_model()
2024-02-18 20:14:03,176:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B5D2A3D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=2316,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B5D7F56C0>)
2024-02-18 20:14:03,176:INFO:Checking exceptions
2024-02-18 20:14:03,176:INFO:Preloading libraries
2024-02-18 20:14:03,176:INFO:Set up data.
2024-02-18 20:14:03,185:INFO:Set up index.
2024-02-18 20:14:03,726:INFO:Initializing load_model()
2024-02-18 20:14:03,726:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-18 20:14:03,734:INFO:Initializing predict_model()
2024-02-18 20:14:03,734:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B5D40E7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=2316,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B5F894160>)
2024-02-18 20:14:03,734:INFO:Checking exceptions
2024-02-18 20:14:03,734:INFO:Preloading libraries
2024-02-18 20:14:03,735:INFO:Set up data.
2024-02-18 20:14:03,741:INFO:Set up index.
2024-02-18 20:14:57,796:INFO:Initializing load_model()
2024-02-18 20:14:57,796:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-18 20:14:57,802:INFO:Initializing predict_model()
2024-02-18 20:14:57,802:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B47DD81F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=2316,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B61878310>)
2024-02-18 20:14:57,803:INFO:Checking exceptions
2024-02-18 20:14:57,803:INFO:Preloading libraries
2024-02-18 20:14:57,803:INFO:Set up data.
2024-02-18 20:14:57,808:INFO:Set up index.
2024-02-18 20:15:39,480:INFO:Initializing load_model()
2024-02-18 20:15:39,482:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-18 20:15:39,493:INFO:Initializing predict_model()
2024-02-18 20:15:39,493:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B47DD8040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=2316,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B5D4143A0>)
2024-02-18 20:15:39,493:INFO:Checking exceptions
2024-02-18 20:15:39,493:INFO:Preloading libraries
2024-02-18 20:15:39,493:INFO:Set up data.
2024-02-18 20:15:39,502:INFO:Set up index.
2024-02-18 20:21:14,561:INFO:Initializing load_model()
2024-02-18 20:21:14,561:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-18 20:21:14,571:INFO:Initializing predict_model()
2024-02-18 20:21:14,571:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B6214BF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=2316,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B372DD630>)
2024-02-18 20:21:14,571:INFO:Checking exceptions
2024-02-18 20:21:14,571:INFO:Preloading libraries
2024-02-18 20:21:14,571:INFO:Set up data.
2024-02-18 20:21:14,578:INFO:Set up index.
2024-02-18 20:48:44,291:INFO:Initializing load_model()
2024-02-18 20:48:44,291:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-18 20:48:44,298:INFO:Initializing predict_model()
2024-02-18 20:48:44,298:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B62623160>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=2316,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B626E3A30>)
2024-02-18 20:48:44,298:INFO:Checking exceptions
2024-02-18 20:48:44,299:INFO:Preloading libraries
2024-02-18 20:48:44,299:INFO:Set up data.
2024-02-18 20:48:44,308:INFO:Set up index.
2024-02-18 20:58:55,815:INFO:Initializing load_model()
2024-02-18 20:58:55,816:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-18 20:58:55,823:INFO:Initializing predict_model()
2024-02-18 20:58:55,824:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B5CC03850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=2316,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B62653490>)
2024-02-18 20:58:55,824:INFO:Checking exceptions
2024-02-18 20:58:55,824:INFO:Preloading libraries
2024-02-18 20:58:55,824:INFO:Set up data.
2024-02-18 20:58:55,829:INFO:Set up index.
2024-02-18 20:58:55,939:INFO:Initializing load_model()
2024-02-18 20:58:55,939:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-18 20:58:55,945:INFO:Initializing predict_model()
2024-02-18 20:58:55,945:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B5FC530D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=2316,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B5AEBF400>)
2024-02-18 20:58:55,945:INFO:Checking exceptions
2024-02-18 20:58:55,945:INFO:Preloading libraries
2024-02-18 20:58:55,945:INFO:Set up data.
2024-02-18 20:58:55,949:INFO:Set up index.
2024-02-19 11:22:16,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-19 11:22:16,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-19 11:22:16,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-19 11:22:16,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-19 11:22:18,768:INFO:PyCaret ClassificationExperiment
2024-02-19 11:22:18,768:INFO:Logging name: clf-default-name
2024-02-19 11:22:18,768:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-19 11:22:18,768:INFO:version 3.2.0
2024-02-19 11:22:18,768:INFO:Initializing setup()
2024-02-19 11:22:18,768:INFO:self.USI: 39b8
2024-02-19 11:22:18,768:INFO:self._variable_keys: {'y_train', 'n_jobs_param', 'is_multiclass', 'idx', '_available_plots', 'y', 'data', 'X', 'gpu_param', 'X_train', 'y_test', 'gpu_n_jobs_param', 'USI', 'memory', 'target_param', 'logging_param', 'exp_name_log', '_ml_usecase', 'log_plots_param', 'seed', 'X_test', 'html_param', 'fold_groups_param', 'fold_generator', 'fix_imbalance', 'pipeline', 'fold_shuffle_param', 'exp_id'}
2024-02-19 11:22:18,768:INFO:Checking environment
2024-02-19 11:22:18,768:INFO:python_version: 3.10.13
2024-02-19 11:22:18,768:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2024-02-19 11:22:18,768:INFO:machine: AMD64
2024-02-19 11:22:18,768:INFO:platform: Windows-10-10.0.22621-SP0
2024-02-19 11:22:18,776:INFO:Memory: svmem(total=16952647680, available=5998702592, percent=64.6, used=10953945088, free=5998702592)
2024-02-19 11:22:18,776:INFO:Physical Core: 4
2024-02-19 11:22:18,776:INFO:Logical Core: 8
2024-02-19 11:22:18,776:INFO:Checking libraries
2024-02-19 11:22:18,776:INFO:System:
2024-02-19 11:22:18,776:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2024-02-19 11:22:18,776:INFO:executable: C:\Users\santh\anaconda3\envs\msds\python.exe
2024-02-19 11:22:18,776:INFO:   machine: Windows-10-10.0.22621-SP0
2024-02-19 11:22:18,776:INFO:PyCaret required dependencies:
2024-02-19 11:22:22,265:INFO:                 pip: 23.3.1
2024-02-19 11:22:22,265:INFO:          setuptools: 68.2.2
2024-02-19 11:22:22,265:INFO:             pycaret: 3.2.0
2024-02-19 11:22:22,265:INFO:             IPython: 8.20.0
2024-02-19 11:22:22,265:INFO:          ipywidgets: 8.0.4
2024-02-19 11:22:22,265:INFO:                tqdm: 4.65.0
2024-02-19 11:22:22,265:INFO:               numpy: 1.25.2
2024-02-19 11:22:22,265:INFO:              pandas: 1.5.3
2024-02-19 11:22:22,265:INFO:              jinja2: 3.1.3
2024-02-19 11:22:22,265:INFO:               scipy: 1.10.1
2024-02-19 11:22:22,265:INFO:              joblib: 1.2.0
2024-02-19 11:22:22,265:INFO:             sklearn: 1.2.2
2024-02-19 11:22:22,265:INFO:                pyod: 1.1.3
2024-02-19 11:22:22,265:INFO:            imblearn: 0.11.0
2024-02-19 11:22:22,265:INFO:   category_encoders: 2.6.3
2024-02-19 11:22:22,273:INFO:            lightgbm: 4.3.0
2024-02-19 11:22:22,273:INFO:               numba: 0.59.0
2024-02-19 11:22:22,273:INFO:            requests: 2.31.0
2024-02-19 11:22:22,273:INFO:          matplotlib: 3.6.0
2024-02-19 11:22:22,273:INFO:          scikitplot: 0.3.7
2024-02-19 11:22:22,273:INFO:         yellowbrick: 1.5
2024-02-19 11:22:22,273:INFO:              plotly: 5.9.0
2024-02-19 11:22:22,273:INFO:    plotly-resampler: Not installed
2024-02-19 11:22:22,273:INFO:             kaleido: 0.2.1
2024-02-19 11:22:22,273:INFO:           schemdraw: 0.15
2024-02-19 11:22:22,273:INFO:         statsmodels: 0.14.0
2024-02-19 11:22:22,273:INFO:              sktime: 0.21.1
2024-02-19 11:22:22,273:INFO:               tbats: 1.1.3
2024-02-19 11:22:22,273:INFO:            pmdarima: 2.0.4
2024-02-19 11:22:22,273:INFO:              psutil: 5.9.0
2024-02-19 11:22:22,273:INFO:          markupsafe: 2.1.3
2024-02-19 11:22:22,273:INFO:             pickle5: Not installed
2024-02-19 11:22:22,273:INFO:         cloudpickle: 2.2.1
2024-02-19 11:22:22,273:INFO:         deprecation: 2.1.0
2024-02-19 11:22:22,273:INFO:              xxhash: 2.0.2
2024-02-19 11:22:22,273:INFO:           wurlitzer: Not installed
2024-02-19 11:22:22,273:INFO:PyCaret optional dependencies:
2024-02-19 11:22:22,337:INFO:                shap: Not installed
2024-02-19 11:22:22,337:INFO:           interpret: Not installed
2024-02-19 11:22:22,337:INFO:                umap: Not installed
2024-02-19 11:22:22,337:INFO:     ydata_profiling: Not installed
2024-02-19 11:22:22,337:INFO:  explainerdashboard: Not installed
2024-02-19 11:22:22,337:INFO:             autoviz: Not installed
2024-02-19 11:22:22,337:INFO:           fairlearn: Not installed
2024-02-19 11:22:22,337:INFO:          deepchecks: Not installed
2024-02-19 11:22:22,337:INFO:             xgboost: Not installed
2024-02-19 11:22:22,337:INFO:            catboost: Not installed
2024-02-19 11:22:22,337:INFO:              kmodes: Not installed
2024-02-19 11:22:22,337:INFO:             mlxtend: Not installed
2024-02-19 11:22:22,337:INFO:       statsforecast: Not installed
2024-02-19 11:22:22,345:INFO:        tune_sklearn: Not installed
2024-02-19 11:22:22,345:INFO:                 ray: Not installed
2024-02-19 11:22:22,345:INFO:            hyperopt: Not installed
2024-02-19 11:22:22,345:INFO:              optuna: Not installed
2024-02-19 11:22:22,345:INFO:               skopt: Not installed
2024-02-19 11:22:22,345:INFO:              mlflow: Not installed
2024-02-19 11:22:22,345:INFO:              gradio: Not installed
2024-02-19 11:22:22,345:INFO:             fastapi: Not installed
2024-02-19 11:22:22,345:INFO:             uvicorn: Not installed
2024-02-19 11:22:22,345:INFO:              m2cgen: Not installed
2024-02-19 11:22:22,345:INFO:           evidently: Not installed
2024-02-19 11:22:22,345:INFO:               fugue: Not installed
2024-02-19 11:22:22,345:INFO:           streamlit: Not installed
2024-02-19 11:22:22,345:INFO:             prophet: Not installed
2024-02-19 11:22:22,345:INFO:None
2024-02-19 11:22:22,345:INFO:Set up data.
2024-02-19 11:22:22,370:INFO:Set up folding strategy.
2024-02-19 11:22:22,370:INFO:Set up train/test split.
2024-02-19 11:22:22,394:INFO:Set up index.
2024-02-19 11:22:22,394:INFO:Assigning column types.
2024-02-19 11:22:22,410:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-19 11:22:22,576:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-19 11:22:22,592:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-19 11:22:22,704:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 11:22:22,704:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 11:22:22,923:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-19 11:22:22,931:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-19 11:22:23,043:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 11:22:23,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 11:22:23,043:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-19 11:22:23,205:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-19 11:22:23,310:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 11:22:23,310:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 11:22:23,471:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-19 11:22:23,569:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 11:22:23,573:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 11:22:23,573:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-19 11:22:23,838:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 11:22:23,838:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 11:22:24,121:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 11:22:24,121:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 11:22:24,137:INFO:Preparing preprocessing pipeline...
2024-02-19 11:22:24,137:INFO:Set up simple imputation.
2024-02-19 11:22:24,275:INFO:Finished creating preprocessing pipeline.
2024-02-19 11:22:24,291:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\santh\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-19 11:22:24,291:INFO:Creating final display dataframe.
2024-02-19 11:22:24,728:INFO:Setup _display_container:                     Description             Value
0                    Session id              5761
1                        Target             Churn
2                   Target type            Binary
3           Original data shape         (7043, 8)
4        Transformed data shape         (7043, 8)
5   Transformed train set shape         (4930, 8)
6    Transformed test set shape         (2113, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              39b8
2024-02-19 11:22:25,038:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 11:22:25,038:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 11:22:25,305:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 11:22:25,305:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 11:22:25,305:INFO:setup() successfully completed in 6.55s...............
2024-02-19 11:22:29,808:INFO:Initializing compare_models()
2024-02-19 11:22:29,808:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE16F0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE16F0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-02-19 11:22:29,808:INFO:Checking exceptions
2024-02-19 11:22:29,813:INFO:Preparing display monitor
2024-02-19 11:22:29,901:INFO:Initializing Logistic Regression
2024-02-19 11:22:29,901:INFO:Total runtime is 0.0 minutes
2024-02-19 11:22:29,909:INFO:SubProcess create_model() called ==================================
2024-02-19 11:22:29,918:INFO:Initializing create_model()
2024-02-19 11:22:29,918:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE16F0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2BC9C0C70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 11:22:29,918:INFO:Checking exceptions
2024-02-19 11:22:29,918:INFO:Importing libraries
2024-02-19 11:22:29,918:INFO:Copying training dataset
2024-02-19 11:22:29,934:INFO:Defining folds
2024-02-19 11:22:29,934:INFO:Declaring metric variables
2024-02-19 11:22:29,951:INFO:Importing untrained model
2024-02-19 11:22:29,958:INFO:Logistic Regression Imported successfully
2024-02-19 11:22:29,984:INFO:Starting cross validation
2024-02-19 11:22:29,991:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 11:22:38,944:INFO:Calculating mean and std
2024-02-19 11:22:38,952:INFO:Creating metrics dataframe
2024-02-19 11:22:38,968:INFO:Uploading results into container
2024-02-19 11:22:38,968:INFO:Uploading model into container now
2024-02-19 11:22:38,968:INFO:_master_model_container: 1
2024-02-19 11:22:38,968:INFO:_display_container: 2
2024-02-19 11:22:38,968:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5761, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-19 11:22:38,968:INFO:create_model() successfully completed......................................
2024-02-19 11:22:39,162:INFO:SubProcess create_model() end ==================================
2024-02-19 11:22:39,162:INFO:Creating metrics dataframe
2024-02-19 11:22:39,195:INFO:Initializing K Neighbors Classifier
2024-02-19 11:22:39,195:INFO:Total runtime is 0.1548892617225647 minutes
2024-02-19 11:22:39,203:INFO:SubProcess create_model() called ==================================
2024-02-19 11:22:39,203:INFO:Initializing create_model()
2024-02-19 11:22:39,203:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE16F0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2BC9C0C70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 11:22:39,203:INFO:Checking exceptions
2024-02-19 11:22:39,203:INFO:Importing libraries
2024-02-19 11:22:39,203:INFO:Copying training dataset
2024-02-19 11:22:39,227:INFO:Defining folds
2024-02-19 11:22:39,227:INFO:Declaring metric variables
2024-02-19 11:22:39,244:INFO:Importing untrained model
2024-02-19 11:22:39,251:INFO:K Neighbors Classifier Imported successfully
2024-02-19 11:22:39,275:INFO:Starting cross validation
2024-02-19 11:22:39,284:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 11:22:39,859:INFO:Calculating mean and std
2024-02-19 11:22:39,867:INFO:Creating metrics dataframe
2024-02-19 11:22:39,875:INFO:Uploading results into container
2024-02-19 11:22:39,884:INFO:Uploading model into container now
2024-02-19 11:22:39,884:INFO:_master_model_container: 2
2024-02-19 11:22:39,884:INFO:_display_container: 2
2024-02-19 11:22:39,884:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-19 11:22:39,884:INFO:create_model() successfully completed......................................
2024-02-19 11:22:40,061:INFO:SubProcess create_model() end ==================================
2024-02-19 11:22:40,061:INFO:Creating metrics dataframe
2024-02-19 11:22:40,102:INFO:Initializing Naive Bayes
2024-02-19 11:22:40,102:INFO:Total runtime is 0.17001400391260785 minutes
2024-02-19 11:22:40,118:INFO:SubProcess create_model() called ==================================
2024-02-19 11:22:40,118:INFO:Initializing create_model()
2024-02-19 11:22:40,118:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE16F0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2BC9C0C70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 11:22:40,126:INFO:Checking exceptions
2024-02-19 11:22:40,126:INFO:Importing libraries
2024-02-19 11:22:40,126:INFO:Copying training dataset
2024-02-19 11:22:40,151:INFO:Defining folds
2024-02-19 11:22:40,151:INFO:Declaring metric variables
2024-02-19 11:22:40,167:INFO:Importing untrained model
2024-02-19 11:22:40,184:INFO:Naive Bayes Imported successfully
2024-02-19 11:22:40,217:INFO:Starting cross validation
2024-02-19 11:22:40,220:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 11:22:40,524:INFO:Calculating mean and std
2024-02-19 11:22:40,532:INFO:Creating metrics dataframe
2024-02-19 11:22:40,541:INFO:Uploading results into container
2024-02-19 11:22:40,548:INFO:Uploading model into container now
2024-02-19 11:22:40,548:INFO:_master_model_container: 3
2024-02-19 11:22:40,548:INFO:_display_container: 2
2024-02-19 11:22:40,548:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-02-19 11:22:40,548:INFO:create_model() successfully completed......................................
2024-02-19 11:22:40,718:INFO:SubProcess create_model() end ==================================
2024-02-19 11:22:40,718:INFO:Creating metrics dataframe
2024-02-19 11:22:40,758:INFO:Initializing Decision Tree Classifier
2024-02-19 11:22:40,758:INFO:Total runtime is 0.1809485713640849 minutes
2024-02-19 11:22:40,767:INFO:SubProcess create_model() called ==================================
2024-02-19 11:22:40,767:INFO:Initializing create_model()
2024-02-19 11:22:40,767:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE16F0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2BC9C0C70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 11:22:40,775:INFO:Checking exceptions
2024-02-19 11:22:40,775:INFO:Importing libraries
2024-02-19 11:22:40,775:INFO:Copying training dataset
2024-02-19 11:22:40,801:INFO:Defining folds
2024-02-19 11:22:40,801:INFO:Declaring metric variables
2024-02-19 11:22:40,824:INFO:Importing untrained model
2024-02-19 11:22:40,832:INFO:Decision Tree Classifier Imported successfully
2024-02-19 11:22:40,864:INFO:Starting cross validation
2024-02-19 11:22:40,864:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 11:22:41,317:INFO:Calculating mean and std
2024-02-19 11:22:41,317:INFO:Creating metrics dataframe
2024-02-19 11:22:41,333:INFO:Uploading results into container
2024-02-19 11:22:41,334:INFO:Uploading model into container now
2024-02-19 11:22:41,337:INFO:_master_model_container: 4
2024-02-19 11:22:41,337:INFO:_display_container: 2
2024-02-19 11:22:41,337:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5761, splitter='best')
2024-02-19 11:22:41,337:INFO:create_model() successfully completed......................................
2024-02-19 11:22:41,503:INFO:SubProcess create_model() end ==================================
2024-02-19 11:22:41,503:INFO:Creating metrics dataframe
2024-02-19 11:22:41,543:INFO:Initializing SVM - Linear Kernel
2024-02-19 11:22:41,543:INFO:Total runtime is 0.1940326491991679 minutes
2024-02-19 11:22:41,551:INFO:SubProcess create_model() called ==================================
2024-02-19 11:22:41,551:INFO:Initializing create_model()
2024-02-19 11:22:41,558:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE16F0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2BC9C0C70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 11:22:41,558:INFO:Checking exceptions
2024-02-19 11:22:41,559:INFO:Importing libraries
2024-02-19 11:22:41,559:INFO:Copying training dataset
2024-02-19 11:22:41,574:INFO:Defining folds
2024-02-19 11:22:41,574:INFO:Declaring metric variables
2024-02-19 11:22:41,585:INFO:Importing untrained model
2024-02-19 11:22:41,592:INFO:SVM - Linear Kernel Imported successfully
2024-02-19 11:22:41,622:INFO:Starting cross validation
2024-02-19 11:22:41,624:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 11:22:41,854:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 11:22:41,857:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 11:22:41,857:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 11:22:41,873:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 11:22:41,873:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 11:22:41,885:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 11:22:41,889:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 11:22:41,889:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 11:22:42,067:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 11:22:42,083:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 11:22:42,115:INFO:Calculating mean and std
2024-02-19 11:22:42,115:INFO:Creating metrics dataframe
2024-02-19 11:22:42,131:INFO:Uploading results into container
2024-02-19 11:22:42,131:INFO:Uploading model into container now
2024-02-19 11:22:42,131:INFO:_master_model_container: 5
2024-02-19 11:22:42,131:INFO:_display_container: 2
2024-02-19 11:22:42,131:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5761, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-02-19 11:22:42,131:INFO:create_model() successfully completed......................................
2024-02-19 11:22:42,317:INFO:SubProcess create_model() end ==================================
2024-02-19 11:22:42,317:INFO:Creating metrics dataframe
2024-02-19 11:22:42,358:INFO:Initializing Ridge Classifier
2024-02-19 11:22:42,366:INFO:Total runtime is 0.2077381491661072 minutes
2024-02-19 11:22:42,374:INFO:SubProcess create_model() called ==================================
2024-02-19 11:22:42,374:INFO:Initializing create_model()
2024-02-19 11:22:42,374:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE16F0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2BC9C0C70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 11:22:42,374:INFO:Checking exceptions
2024-02-19 11:22:42,374:INFO:Importing libraries
2024-02-19 11:22:42,374:INFO:Copying training dataset
2024-02-19 11:22:42,398:INFO:Defining folds
2024-02-19 11:22:42,398:INFO:Declaring metric variables
2024-02-19 11:22:42,406:INFO:Importing untrained model
2024-02-19 11:22:42,422:INFO:Ridge Classifier Imported successfully
2024-02-19 11:22:42,438:INFO:Starting cross validation
2024-02-19 11:22:42,446:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 11:22:42,551:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.46698e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 11:22:42,551:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.51364e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 11:22:42,559:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.46601e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 11:22:42,567:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.49988e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 11:22:42,575:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 11:22:42,575:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 11:22:42,586:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.49919e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 11:22:42,592:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 11:22:42,601:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 11:22:42,601:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.45269e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 11:22:42,616:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 11:22:42,618:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.46777e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 11:22:42,633:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.50744e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 11:22:42,641:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 11:22:42,641:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 11:22:42,657:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 11:22:42,665:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.48138e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 11:22:42,673:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.48236e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 11:22:42,689:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 11:22:42,697:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 11:22:42,721:INFO:Calculating mean and std
2024-02-19 11:22:42,729:INFO:Creating metrics dataframe
2024-02-19 11:22:42,737:INFO:Uploading results into container
2024-02-19 11:22:42,745:INFO:Uploading model into container now
2024-02-19 11:22:42,745:INFO:_master_model_container: 6
2024-02-19 11:22:42,745:INFO:_display_container: 2
2024-02-19 11:22:42,745:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5761, solver='auto',
                tol=0.0001)
2024-02-19 11:22:42,745:INFO:create_model() successfully completed......................................
2024-02-19 11:22:42,907:INFO:SubProcess create_model() end ==================================
2024-02-19 11:22:42,907:INFO:Creating metrics dataframe
2024-02-19 11:22:42,955:INFO:Initializing Random Forest Classifier
2024-02-19 11:22:42,955:INFO:Total runtime is 0.21756753524144493 minutes
2024-02-19 11:22:42,968:INFO:SubProcess create_model() called ==================================
2024-02-19 11:22:42,972:INFO:Initializing create_model()
2024-02-19 11:22:42,972:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE16F0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2BC9C0C70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 11:22:42,972:INFO:Checking exceptions
2024-02-19 11:22:42,972:INFO:Importing libraries
2024-02-19 11:22:42,972:INFO:Copying training dataset
2024-02-19 11:22:42,988:INFO:Defining folds
2024-02-19 11:22:42,988:INFO:Declaring metric variables
2024-02-19 11:22:43,000:INFO:Importing untrained model
2024-02-19 11:22:43,013:INFO:Random Forest Classifier Imported successfully
2024-02-19 11:22:43,035:INFO:Starting cross validation
2024-02-19 11:22:43,037:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 11:22:47,896:INFO:Calculating mean and std
2024-02-19 11:22:47,904:INFO:Creating metrics dataframe
2024-02-19 11:22:47,918:INFO:Uploading results into container
2024-02-19 11:22:47,920:INFO:Uploading model into container now
2024-02-19 11:22:47,920:INFO:_master_model_container: 7
2024-02-19 11:22:47,920:INFO:_display_container: 2
2024-02-19 11:22:47,926:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5761, verbose=0, warm_start=False)
2024-02-19 11:22:47,926:INFO:create_model() successfully completed......................................
2024-02-19 11:22:48,073:INFO:SubProcess create_model() end ==================================
2024-02-19 11:22:48,073:INFO:Creating metrics dataframe
2024-02-19 11:22:48,105:INFO:Initializing Quadratic Discriminant Analysis
2024-02-19 11:22:48,105:INFO:Total runtime is 0.30339669783910117 minutes
2024-02-19 11:22:48,113:INFO:SubProcess create_model() called ==================================
2024-02-19 11:22:48,120:INFO:Initializing create_model()
2024-02-19 11:22:48,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE16F0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2BC9C0C70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 11:22:48,120:INFO:Checking exceptions
2024-02-19 11:22:48,120:INFO:Importing libraries
2024-02-19 11:22:48,120:INFO:Copying training dataset
2024-02-19 11:22:48,130:INFO:Defining folds
2024-02-19 11:22:48,130:INFO:Declaring metric variables
2024-02-19 11:22:48,146:INFO:Importing untrained model
2024-02-19 11:22:48,156:INFO:Quadratic Discriminant Analysis Imported successfully
2024-02-19 11:22:48,179:INFO:Starting cross validation
2024-02-19 11:22:48,179:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 11:22:48,478:INFO:Calculating mean and std
2024-02-19 11:22:48,478:INFO:Creating metrics dataframe
2024-02-19 11:22:48,486:INFO:Uploading results into container
2024-02-19 11:22:48,486:INFO:Uploading model into container now
2024-02-19 11:22:48,493:INFO:_master_model_container: 8
2024-02-19 11:22:48,494:INFO:_display_container: 2
2024-02-19 11:22:48,494:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-02-19 11:22:48,494:INFO:create_model() successfully completed......................................
2024-02-19 11:22:48,634:INFO:SubProcess create_model() end ==================================
2024-02-19 11:22:48,634:INFO:Creating metrics dataframe
2024-02-19 11:22:48,665:INFO:Initializing Ada Boost Classifier
2024-02-19 11:22:48,665:INFO:Total runtime is 0.312724769115448 minutes
2024-02-19 11:22:48,673:INFO:SubProcess create_model() called ==================================
2024-02-19 11:22:48,681:INFO:Initializing create_model()
2024-02-19 11:22:48,681:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE16F0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2BC9C0C70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 11:22:48,681:INFO:Checking exceptions
2024-02-19 11:22:48,681:INFO:Importing libraries
2024-02-19 11:22:48,681:INFO:Copying training dataset
2024-02-19 11:22:48,693:INFO:Defining folds
2024-02-19 11:22:48,693:INFO:Declaring metric variables
2024-02-19 11:22:48,706:INFO:Importing untrained model
2024-02-19 11:22:48,722:INFO:Ada Boost Classifier Imported successfully
2024-02-19 11:22:48,738:INFO:Starting cross validation
2024-02-19 11:22:48,738:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 11:22:50,846:INFO:Calculating mean and std
2024-02-19 11:22:50,854:INFO:Creating metrics dataframe
2024-02-19 11:22:50,862:INFO:Uploading results into container
2024-02-19 11:22:50,870:INFO:Uploading model into container now
2024-02-19 11:22:50,870:INFO:_master_model_container: 9
2024-02-19 11:22:50,870:INFO:_display_container: 2
2024-02-19 11:22:50,870:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=5761)
2024-02-19 11:22:50,875:INFO:create_model() successfully completed......................................
2024-02-19 11:22:51,040:INFO:SubProcess create_model() end ==================================
2024-02-19 11:22:51,040:INFO:Creating metrics dataframe
2024-02-19 11:22:51,081:INFO:Initializing Gradient Boosting Classifier
2024-02-19 11:22:51,088:INFO:Total runtime is 0.353119421005249 minutes
2024-02-19 11:22:51,101:INFO:SubProcess create_model() called ==================================
2024-02-19 11:22:51,101:INFO:Initializing create_model()
2024-02-19 11:22:51,105:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE16F0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2BC9C0C70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 11:22:51,105:INFO:Checking exceptions
2024-02-19 11:22:51,105:INFO:Importing libraries
2024-02-19 11:22:51,105:INFO:Copying training dataset
2024-02-19 11:22:51,121:INFO:Defining folds
2024-02-19 11:22:51,125:INFO:Declaring metric variables
2024-02-19 11:22:51,138:INFO:Importing untrained model
2024-02-19 11:22:51,145:INFO:Gradient Boosting Classifier Imported successfully
2024-02-19 11:22:51,170:INFO:Starting cross validation
2024-02-19 11:22:51,178:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 11:22:57,290:INFO:Calculating mean and std
2024-02-19 11:22:57,290:INFO:Creating metrics dataframe
2024-02-19 11:22:57,306:INFO:Uploading results into container
2024-02-19 11:22:57,306:INFO:Uploading model into container now
2024-02-19 11:22:57,306:INFO:_master_model_container: 10
2024-02-19 11:22:57,306:INFO:_display_container: 2
2024-02-19 11:22:57,306:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5761, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-19 11:22:57,314:INFO:create_model() successfully completed......................................
2024-02-19 11:22:57,483:INFO:SubProcess create_model() end ==================================
2024-02-19 11:22:57,483:INFO:Creating metrics dataframe
2024-02-19 11:22:57,516:INFO:Initializing Linear Discriminant Analysis
2024-02-19 11:22:57,516:INFO:Total runtime is 0.4602512001991272 minutes
2024-02-19 11:22:57,534:INFO:SubProcess create_model() called ==================================
2024-02-19 11:22:57,534:INFO:Initializing create_model()
2024-02-19 11:22:57,534:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE16F0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2BC9C0C70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 11:22:57,534:INFO:Checking exceptions
2024-02-19 11:22:57,534:INFO:Importing libraries
2024-02-19 11:22:57,534:INFO:Copying training dataset
2024-02-19 11:22:57,550:INFO:Defining folds
2024-02-19 11:22:57,552:INFO:Declaring metric variables
2024-02-19 11:22:57,561:INFO:Importing untrained model
2024-02-19 11:22:57,574:INFO:Linear Discriminant Analysis Imported successfully
2024-02-19 11:22:57,600:INFO:Starting cross validation
2024-02-19 11:22:57,604:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 11:22:57,914:INFO:Calculating mean and std
2024-02-19 11:22:57,914:INFO:Creating metrics dataframe
2024-02-19 11:22:57,930:INFO:Uploading results into container
2024-02-19 11:22:57,930:INFO:Uploading model into container now
2024-02-19 11:22:57,930:INFO:_master_model_container: 11
2024-02-19 11:22:57,930:INFO:_display_container: 2
2024-02-19 11:22:57,930:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-02-19 11:22:57,930:INFO:create_model() successfully completed......................................
2024-02-19 11:22:58,107:INFO:SubProcess create_model() end ==================================
2024-02-19 11:22:58,107:INFO:Creating metrics dataframe
2024-02-19 11:22:58,166:INFO:Initializing Extra Trees Classifier
2024-02-19 11:22:58,166:INFO:Total runtime is 0.4710862159729004 minutes
2024-02-19 11:22:58,181:INFO:SubProcess create_model() called ==================================
2024-02-19 11:22:58,181:INFO:Initializing create_model()
2024-02-19 11:22:58,181:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE16F0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2BC9C0C70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 11:22:58,181:INFO:Checking exceptions
2024-02-19 11:22:58,186:INFO:Importing libraries
2024-02-19 11:22:58,186:INFO:Copying training dataset
2024-02-19 11:22:58,197:INFO:Defining folds
2024-02-19 11:22:58,197:INFO:Declaring metric variables
2024-02-19 11:22:58,207:INFO:Importing untrained model
2024-02-19 11:22:58,222:INFO:Extra Trees Classifier Imported successfully
2024-02-19 11:22:58,238:INFO:Starting cross validation
2024-02-19 11:22:58,246:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 11:23:01,651:INFO:Calculating mean and std
2024-02-19 11:23:01,651:INFO:Creating metrics dataframe
2024-02-19 11:23:01,668:INFO:Uploading results into container
2024-02-19 11:23:01,668:INFO:Uploading model into container now
2024-02-19 11:23:01,668:INFO:_master_model_container: 12
2024-02-19 11:23:01,668:INFO:_display_container: 2
2024-02-19 11:23:01,668:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5761, verbose=0, warm_start=False)
2024-02-19 11:23:01,668:INFO:create_model() successfully completed......................................
2024-02-19 11:23:01,845:INFO:SubProcess create_model() end ==================================
2024-02-19 11:23:01,845:INFO:Creating metrics dataframe
2024-02-19 11:23:01,893:INFO:Initializing Light Gradient Boosting Machine
2024-02-19 11:23:01,901:INFO:Total runtime is 0.5333292961120606 minutes
2024-02-19 11:23:01,910:INFO:SubProcess create_model() called ==================================
2024-02-19 11:23:01,910:INFO:Initializing create_model()
2024-02-19 11:23:01,910:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE16F0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2BC9C0C70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 11:23:01,910:INFO:Checking exceptions
2024-02-19 11:23:01,910:INFO:Importing libraries
2024-02-19 11:23:01,910:INFO:Copying training dataset
2024-02-19 11:23:01,928:INFO:Defining folds
2024-02-19 11:23:01,928:INFO:Declaring metric variables
2024-02-19 11:23:01,943:INFO:Importing untrained model
2024-02-19 11:23:01,951:INFO:Light Gradient Boosting Machine Imported successfully
2024-02-19 11:23:01,975:INFO:Starting cross validation
2024-02-19 11:23:01,983:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 11:23:05,602:INFO:Calculating mean and std
2024-02-19 11:23:05,612:INFO:Creating metrics dataframe
2024-02-19 11:23:05,628:INFO:Uploading results into container
2024-02-19 11:23:05,629:INFO:Uploading model into container now
2024-02-19 11:23:05,630:INFO:_master_model_container: 13
2024-02-19 11:23:05,630:INFO:_display_container: 2
2024-02-19 11:23:05,633:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5761, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-02-19 11:23:05,633:INFO:create_model() successfully completed......................................
2024-02-19 11:23:05,812:INFO:SubProcess create_model() end ==================================
2024-02-19 11:23:05,812:INFO:Creating metrics dataframe
2024-02-19 11:23:05,877:INFO:Initializing Dummy Classifier
2024-02-19 11:23:05,877:INFO:Total runtime is 0.599597998460134 minutes
2024-02-19 11:23:05,885:INFO:SubProcess create_model() called ==================================
2024-02-19 11:23:05,885:INFO:Initializing create_model()
2024-02-19 11:23:05,893:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE16F0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2BC9C0C70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 11:23:05,893:INFO:Checking exceptions
2024-02-19 11:23:05,893:INFO:Importing libraries
2024-02-19 11:23:05,893:INFO:Copying training dataset
2024-02-19 11:23:05,913:INFO:Defining folds
2024-02-19 11:23:05,913:INFO:Declaring metric variables
2024-02-19 11:23:05,918:INFO:Importing untrained model
2024-02-19 11:23:05,926:INFO:Dummy Classifier Imported successfully
2024-02-19 11:23:05,950:INFO:Starting cross validation
2024-02-19 11:23:05,950:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 11:23:06,063:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 11:23:06,096:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 11:23:06,113:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 11:23:06,128:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 11:23:06,144:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 11:23:06,152:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 11:23:06,152:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 11:23:06,176:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 11:23:06,184:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 11:23:06,200:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 11:23:06,216:INFO:Calculating mean and std
2024-02-19 11:23:06,224:INFO:Creating metrics dataframe
2024-02-19 11:23:06,233:INFO:Uploading results into container
2024-02-19 11:23:06,241:INFO:Uploading model into container now
2024-02-19 11:23:06,241:INFO:_master_model_container: 14
2024-02-19 11:23:06,241:INFO:_display_container: 2
2024-02-19 11:23:06,241:INFO:DummyClassifier(constant=None, random_state=5761, strategy='prior')
2024-02-19 11:23:06,241:INFO:create_model() successfully completed......................................
2024-02-19 11:23:06,414:INFO:SubProcess create_model() end ==================================
2024-02-19 11:23:06,414:INFO:Creating metrics dataframe
2024-02-19 11:23:06,516:INFO:Initializing create_model()
2024-02-19 11:23:06,516:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE16F0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5761, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 11:23:06,516:INFO:Checking exceptions
2024-02-19 11:23:06,516:INFO:Importing libraries
2024-02-19 11:23:06,516:INFO:Copying training dataset
2024-02-19 11:23:06,533:INFO:Defining folds
2024-02-19 11:23:06,533:INFO:Declaring metric variables
2024-02-19 11:23:06,533:INFO:Importing untrained model
2024-02-19 11:23:06,533:INFO:Declaring custom model
2024-02-19 11:23:06,540:INFO:Logistic Regression Imported successfully
2024-02-19 11:23:06,540:INFO:Cross validation set to False
2024-02-19 11:23:06,540:INFO:Fitting Model
2024-02-19 11:23:06,703:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5761, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-19 11:23:06,703:INFO:create_model() successfully completed......................................
2024-02-19 11:23:07,005:INFO:_master_model_container: 14
2024-02-19 11:23:07,005:INFO:_display_container: 2
2024-02-19 11:23:07,005:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5761, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-19 11:23:07,013:INFO:compare_models() successfully completed......................................
2024-02-19 11:23:12,527:INFO:Initializing evaluate_model()
2024-02-19 11:23:12,527:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE16F0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5761, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-02-19 11:23:12,571:INFO:Initializing plot_model()
2024-02-19 11:23:12,574:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5761, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE16F0>, system=True)
2024-02-19 11:23:12,574:INFO:Checking exceptions
2024-02-19 11:23:12,580:INFO:Preloading libraries
2024-02-19 11:23:12,580:INFO:Copying training dataset
2024-02-19 11:23:12,580:INFO:Plot type: pipeline
2024-02-19 11:23:13,032:INFO:Visual Rendered Successfully
2024-02-19 11:23:13,203:INFO:plot_model() successfully completed......................................
2024-02-19 11:23:15,695:INFO:Initializing plot_model()
2024-02-19 11:23:15,695:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5761, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE16F0>, system=True)
2024-02-19 11:23:15,695:INFO:Checking exceptions
2024-02-19 11:23:15,711:INFO:Preloading libraries
2024-02-19 11:23:15,711:INFO:Copying training dataset
2024-02-19 11:23:15,711:INFO:Plot type: auc
2024-02-19 11:23:16,097:INFO:Fitting Model
2024-02-19 11:23:16,107:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-02-19 11:23:16,107:INFO:Scoring test/hold-out set
2024-02-19 11:23:16,723:INFO:Visual Rendered Successfully
2024-02-19 11:23:16,866:INFO:plot_model() successfully completed......................................
2024-02-19 11:23:19,440:INFO:Initializing save_model()
2024-02-19 11:23:19,440:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5761, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=pycaret_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\santh\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-02-19 11:23:19,440:INFO:Adding model into prep_pipe
2024-02-19 11:23:19,455:INFO:pycaret_model.pkl saved in current working directory
2024-02-19 11:23:19,471:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5761,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-02-19 11:23:19,471:INFO:save_model() successfully completed......................................
2024-02-19 11:23:22,420:INFO:Initializing load_model()
2024-02-19 11:23:22,420:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 11:23:26,148:INFO:Initializing predict_model()
2024-02-19 11:23:26,149:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE28C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5761,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F2BC8803A0>)
2024-02-19 11:23:26,149:INFO:Checking exceptions
2024-02-19 11:23:26,149:INFO:Preloading libraries
2024-02-19 11:23:26,149:INFO:Set up data.
2024-02-19 11:23:26,166:INFO:Set up index.
2024-02-19 11:23:59,926:INFO:Initializing load_model()
2024-02-19 11:23:59,926:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 11:23:59,939:INFO:Initializing predict_model()
2024-02-19 11:23:59,939:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BCACB280>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5761,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F2BA46F400>)
2024-02-19 11:23:59,939:INFO:Checking exceptions
2024-02-19 11:23:59,939:INFO:Preloading libraries
2024-02-19 11:23:59,947:INFO:Set up data.
2024-02-19 11:23:59,964:INFO:Set up index.
2024-02-19 11:24:00,205:INFO:Initializing load_model()
2024-02-19 11:24:00,205:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 11:24:00,230:INFO:Initializing predict_model()
2024-02-19 11:24:00,230:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BCD635B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5761,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F2BCA12950>)
2024-02-19 11:24:00,230:INFO:Checking exceptions
2024-02-19 11:24:00,230:INFO:Preloading libraries
2024-02-19 11:24:00,237:INFO:Set up data.
2024-02-19 11:24:00,254:INFO:Set up index.
2024-02-19 11:24:06,855:INFO:Initializing load_model()
2024-02-19 11:24:06,855:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 11:24:06,881:INFO:Initializing predict_model()
2024-02-19 11:24:06,881:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BEE1E920>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5761,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F2BEDD1F30>)
2024-02-19 11:24:06,881:INFO:Checking exceptions
2024-02-19 11:24:06,881:INFO:Preloading libraries
2024-02-19 11:35:25,203:INFO:Initializing load_model()
2024-02-19 11:35:25,203:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 11:35:25,226:INFO:Initializing predict_model()
2024-02-19 11:35:25,226:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BEE1F280>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5761,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F2BEEB4160>)
2024-02-19 11:35:25,226:INFO:Checking exceptions
2024-02-19 11:35:25,232:INFO:Preloading libraries
2024-02-19 11:35:25,234:INFO:Set up data.
2024-02-19 11:35:25,243:INFO:Set up index.
2024-02-19 11:36:08,095:INFO:Initializing load_model()
2024-02-19 11:36:08,098:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 11:36:08,127:INFO:Initializing predict_model()
2024-02-19 11:36:08,127:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2C067B850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5761,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F2BF0DB490>)
2024-02-19 11:36:08,127:INFO:Checking exceptions
2024-02-19 11:36:08,127:INFO:Preloading libraries
2024-02-19 11:36:08,127:INFO:Set up data.
2024-02-19 11:36:08,135:INFO:Set up index.
2024-02-19 11:37:09,764:INFO:Initializing predict_model()
2024-02-19 11:37:09,764:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE28C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5761,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F2BCD2C670>)
2024-02-19 11:37:09,769:INFO:Checking exceptions
2024-02-19 11:37:09,769:INFO:Preloading libraries
2024-02-19 11:37:09,769:INFO:Set up data.
2024-02-19 11:37:09,784:INFO:Set up index.
2024-02-19 11:39:59,681:INFO:Initializing plot_model()
2024-02-19 11:39:59,681:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5761, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE16F0>, system=True)
2024-02-19 11:39:59,681:INFO:Checking exceptions
2024-02-19 11:39:59,689:INFO:Preloading libraries
2024-02-19 11:39:59,697:INFO:Copying training dataset
2024-02-19 11:39:59,697:INFO:Plot type: feature_all
2024-02-19 11:40:00,323:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\matplotlib\_tight_bbox.py:67: RuntimeWarning: divide by zero encountered in scalar divide
  fig.patch.set_bounds(x0 / w1, y0 / h1,

2024-02-19 11:40:00,323:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\matplotlib\_tight_bbox.py:68: RuntimeWarning: divide by zero encountered in scalar divide
  fig.bbox.width / w1, fig.bbox.height / h1)

2024-02-19 11:40:00,336:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\matplotlib\patches.py:737: RuntimeWarning: invalid value encountered in scalar add
  y1 = self.convert_yunits(self._y0 + self._height)

2024-02-19 11:40:00,340:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\matplotlib\transforms.py:2047: RuntimeWarning: invalid value encountered in scalar add
  self._mtx[1, 2] += ty

2024-02-19 11:40:00,444:INFO:Visual Rendered Successfully
2024-02-19 11:40:00,664:INFO:plot_model() successfully completed......................................
2024-02-19 11:40:08,540:INFO:Initializing plot_model()
2024-02-19 11:40:08,540:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5761, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE16F0>, system=True)
2024-02-19 11:40:08,545:INFO:Checking exceptions
2024-02-19 11:40:08,556:INFO:Preloading libraries
2024-02-19 11:40:08,558:INFO:Copying training dataset
2024-02-19 11:40:08,558:INFO:Plot type: rfe
2024-02-19 11:40:08,950:INFO:Fitting Model
2024-02-19 11:40:42,561:INFO:Visual Rendered Successfully
2024-02-19 11:40:42,772:INFO:plot_model() successfully completed......................................
2024-02-19 11:40:42,871:INFO:Initializing plot_model()
2024-02-19 11:40:42,871:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5761, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE16F0>, system=True)
2024-02-19 11:40:42,871:INFO:Checking exceptions
2024-02-19 11:40:42,879:INFO:Preloading libraries
2024-02-19 11:40:42,879:INFO:Copying training dataset
2024-02-19 11:40:42,879:INFO:Plot type: feature
2024-02-19 11:40:43,454:INFO:Visual Rendered Successfully
2024-02-19 11:40:43,671:INFO:plot_model() successfully completed......................................
2024-02-19 11:44:22,201:INFO:Initializing load_model()
2024-02-19 11:44:22,201:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 11:44:22,217:INFO:Initializing predict_model()
2024-02-19 11:44:22,217:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2C067BA30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5761,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F2BF175870>)
2024-02-19 11:44:22,217:INFO:Checking exceptions
2024-02-19 11:44:22,217:INFO:Preloading libraries
2024-02-19 11:44:22,217:INFO:Set up data.
2024-02-19 11:44:22,229:INFO:Set up index.
2024-02-19 11:44:22,378:INFO:Initializing load_model()
2024-02-19 11:44:22,378:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 11:45:00,150:INFO:Initializing load_model()
2024-02-19 11:45:00,150:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 11:45:00,167:INFO:Initializing predict_model()
2024-02-19 11:45:00,167:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BF184100>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5761,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F2C0F69120>)
2024-02-19 11:45:00,167:INFO:Checking exceptions
2024-02-19 11:45:00,167:INFO:Preloading libraries
2024-02-19 11:45:00,167:INFO:Set up data.
2024-02-19 11:45:00,175:INFO:Set up index.
2024-02-19 11:45:00,304:INFO:Initializing load_model()
2024-02-19 11:45:00,304:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 12:12:54,756:INFO:Initializing load_model()
2024-02-19 12:12:54,756:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 12:12:54,772:INFO:Initializing predict_model()
2024-02-19 12:12:54,772:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2C0F8AF80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5761,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F2C15B95A0>)
2024-02-19 12:12:54,772:INFO:Checking exceptions
2024-02-19 12:12:54,772:INFO:Preloading libraries
2024-02-19 12:12:54,772:INFO:Set up data.
2024-02-19 12:12:54,780:INFO:Set up index.
2024-02-19 12:12:54,927:INFO:Initializing load_model()
2024-02-19 12:12:54,927:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 12:12:54,933:INFO:Initializing predict_model()
2024-02-19 12:12:54,933:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BF1A4A60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5761,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F2BCA12950>)
2024-02-19 12:12:54,933:INFO:Checking exceptions
2024-02-19 12:12:54,933:INFO:Preloading libraries
2024-02-19 12:12:54,933:INFO:Set up data.
2024-02-19 12:12:54,946:INFO:Set up index.
2024-02-19 12:14:15,799:INFO:Initializing load_model()
2024-02-19 12:14:15,799:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 12:14:15,807:INFO:Initializing predict_model()
2024-02-19 12:14:15,807:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2C0383670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5761,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F2C1F20430>)
2024-02-19 12:14:15,816:INFO:Checking exceptions
2024-02-19 12:14:15,816:INFO:Preloading libraries
2024-02-19 12:14:15,816:INFO:Set up data.
2024-02-19 12:14:15,816:INFO:Set up index.
2024-02-19 12:14:15,985:INFO:Initializing load_model()
2024-02-19 12:14:15,985:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 12:14:15,993:INFO:Initializing predict_model()
2024-02-19 12:14:16,001:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2A738C1F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5761,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F2922E9D80>)
2024-02-19 12:14:16,001:INFO:Checking exceptions
2024-02-19 12:14:16,001:INFO:Preloading libraries
2024-02-19 12:14:16,001:INFO:Set up data.
2024-02-19 12:14:16,016:INFO:Set up index.
2024-02-19 12:15:55,384:INFO:Initializing predict_model()
2024-02-19 12:15:55,384:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BAAE28C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5761,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F2C15B8790>)
2024-02-19 12:15:55,384:INFO:Checking exceptions
2024-02-19 12:15:55,384:INFO:Preloading libraries
2024-02-19 12:15:55,384:INFO:Set up data.
2024-02-19 12:15:55,393:INFO:Set up index.
2024-02-19 12:19:22,565:INFO:Initializing load_model()
2024-02-19 12:19:22,565:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 12:19:22,580:INFO:Initializing predict_model()
2024-02-19 12:19:22,580:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2C15A9240>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5761,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F2C1717760>)
2024-02-19 12:19:22,580:INFO:Checking exceptions
2024-02-19 12:19:22,580:INFO:Preloading libraries
2024-02-19 12:19:22,580:INFO:Set up data.
2024-02-19 12:19:22,588:INFO:Set up index.
2024-02-19 12:19:22,757:INFO:Initializing load_model()
2024-02-19 12:19:22,757:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 12:19:22,765:INFO:Initializing predict_model()
2024-02-19 12:19:22,767:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BC7CE6E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5761,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F2C1FAFD00>)
2024-02-19 12:19:22,767:INFO:Checking exceptions
2024-02-19 12:19:22,767:INFO:Preloading libraries
2024-02-19 12:19:22,767:INFO:Set up data.
2024-02-19 12:19:22,767:INFO:Set up index.
2024-02-19 12:19:28,993:INFO:Initializing load_model()
2024-02-19 12:19:28,993:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 12:19:29,025:INFO:Initializing predict_model()
2024-02-19 12:19:29,025:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2C15A9390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5761,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F2C1F20E50>)
2024-02-19 12:19:29,025:INFO:Checking exceptions
2024-02-19 12:19:29,025:INFO:Preloading libraries
2024-02-19 12:19:29,025:INFO:Set up data.
2024-02-19 12:19:29,033:INFO:Set up index.
2024-02-19 12:20:41,790:INFO:Initializing load_model()
2024-02-19 12:20:41,790:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 12:20:41,807:INFO:Initializing predict_model()
2024-02-19 12:20:41,807:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2C04EB190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5761,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F2C1F20310>)
2024-02-19 12:20:41,807:INFO:Checking exceptions
2024-02-19 12:20:41,807:INFO:Preloading libraries
2024-02-19 12:20:41,807:INFO:Set up data.
2024-02-19 12:20:41,824:INFO:Set up index.
2024-02-19 12:20:41,991:INFO:Initializing load_model()
2024-02-19 12:20:41,991:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 12:20:41,999:INFO:Initializing predict_model()
2024-02-19 12:20:41,999:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BADE3C70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5761,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F2BEDD1000>)
2024-02-19 12:20:41,999:INFO:Checking exceptions
2024-02-19 12:20:41,999:INFO:Preloading libraries
2024-02-19 12:20:41,999:INFO:Set up data.
2024-02-19 12:20:41,999:INFO:Set up index.
2024-02-19 12:21:09,946:INFO:Initializing load_model()
2024-02-19 12:21:09,946:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 12:21:09,955:INFO:Initializing predict_model()
2024-02-19 12:21:09,955:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2C1178880>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5761,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F2C1717490>)
2024-02-19 12:21:09,955:INFO:Checking exceptions
2024-02-19 12:21:09,955:INFO:Preloading libraries
2024-02-19 12:21:09,955:INFO:Set up data.
2024-02-19 12:21:09,973:INFO:Set up index.
2024-02-19 12:21:10,132:INFO:Initializing load_model()
2024-02-19 12:21:10,132:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 12:21:10,140:INFO:Initializing predict_model()
2024-02-19 12:21:10,140:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2C10ED240>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5761,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F2C1019EA0>)
2024-02-19 12:21:10,140:INFO:Checking exceptions
2024-02-19 12:21:10,140:INFO:Preloading libraries
2024-02-19 12:21:10,140:INFO:Set up data.
2024-02-19 12:21:10,148:INFO:Set up index.
2024-02-19 12:21:14,717:INFO:Initializing load_model()
2024-02-19 12:21:14,717:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 12:21:14,742:INFO:Initializing predict_model()
2024-02-19 12:21:14,742:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BEDCAFB0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5761,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F2C101B400>)
2024-02-19 12:21:14,742:INFO:Checking exceptions
2024-02-19 12:21:14,742:INFO:Preloading libraries
2024-02-19 12:21:14,742:INFO:Set up data.
2024-02-19 12:21:14,750:INFO:Set up index.
2024-02-19 12:21:15,651:INFO:Initializing load_model()
2024-02-19 12:21:15,651:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 12:21:15,676:INFO:Initializing predict_model()
2024-02-19 12:21:15,676:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2BADE3B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5761,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F2C101B400>)
2024-02-19 12:21:15,676:INFO:Checking exceptions
2024-02-19 12:21:15,676:INFO:Preloading libraries
2024-02-19 12:21:15,676:INFO:Set up data.
2024-02-19 12:21:15,688:INFO:Set up index.
2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_42f364e98f7444a9b9ace75c00eb2534_a77880e8255541ffb05b9d6bb98c5f51
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_dc9897d843d34fe48da8f3af435b37d4_76db6a625f024f6b92be61c029d69665
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_42f364e98f7444a9b9ace75c00eb2534_3995f1c2b1914f1d8db1237f2fffb503
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_0684cdfa829848faae11eeba01df013d_125414b3757e4db1be678d336bbe1ded
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_42f364e98f7444a9b9ace75c00eb2534_6867bf7bb0764659a1c67fca2ee1c22a
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_a3cc6274256c47439b0929b33a7e6ddd_412c4b8e17cb4262a175c0ba5057c834
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_42f364e98f7444a9b9ace75c00eb2534_2732e3e4807e4682bab5e26882501a22
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_c932b131a5e54239a240dd0776a4632c_c2d97ec29fff4fbfb340f47aec175bb2
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_42f364e98f7444a9b9ace75c00eb2534_b85ed953dcda436493ae61d8aa034d84
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_eecc83001d094796be05608ed144c96f_35d1fb877b4045b0947781b6daf0b797
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_42f364e98f7444a9b9ace75c00eb2534_425cc289c80e49c9bf94ab92055b90bd
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_932497f2c2d24a3e8007ab330fa690e0_d4a4e5c8c6994c888419d9622ca48213
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_42f364e98f7444a9b9ace75c00eb2534_a2d356ffc54a4bd882aa414ec250d909
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_eb0024c2794c4f9f80a04c8755545ed6_1032bd9721b04c1f8a16506329db2fc7
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_42f364e98f7444a9b9ace75c00eb2534_ead62b179c6b4ab2b1af331a0e10b5d4
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_e616300b35d14ec7a7a09a6856a52922_b3c30c39ceb0452381bb25ba35548a16
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_42f364e98f7444a9b9ace75c00eb2534_78a96cd1b5044ce5a6d913ab39914354
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_48be1e6e28594ac7af97637da84d190c_ef7c420550c8477594032a6c30450cc8
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_42f364e98f7444a9b9ace75c00eb2534_4b127d9db4c64649b45c3dd444b345f6
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_d2f7614098804213a90359fb0cdb027d_7663de7dc77f40d49316473f1c2587c2
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_42f364e98f7444a9b9ace75c00eb2534_0ba350d6b98940e89bdc8bf39423a1af
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_07e18058ea1040b3b1e187073371b54e_540dda03c3c94c07ace34ac2c820a66f
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_42f364e98f7444a9b9ace75c00eb2534_bd61c6a80fc944ad9803db83924d7eb8
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_a0088da3f31142a2a7a8ca3a7b7fef5e_d6bb76ce43004bb8bfcf46f2a42721fc
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_42f364e98f7444a9b9ace75c00eb2534_058a793f77154a5692afa667c2ea10d9
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_37446035c4f64232be2dff433af3f28d_21ecb0f8bbe64739a8487c82e8cf1748
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_42f364e98f7444a9b9ace75c00eb2534_8ecc61d23cca4b4ca7aa8f5425c7a5dc
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:23,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\santh\AppData\Local\Temp\joblib_memmapping_folder_22684_42f364e98f7444a9b9ace75c00eb2534_e6c1bcdc80e343669aed4d5924cc17de
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-19 12:22:35,027:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-19 12:22:35,027:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-19 12:22:35,027:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-19 12:22:35,027:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-19 12:22:35,927:INFO:PyCaret ClassificationExperiment
2024-02-19 12:22:35,927:INFO:Logging name: clf-default-name
2024-02-19 12:22:35,927:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-19 12:22:35,927:INFO:version 3.2.0
2024-02-19 12:22:35,927:INFO:Initializing setup()
2024-02-19 12:22:35,927:INFO:self.USI: c9b2
2024-02-19 12:22:35,927:INFO:self._variable_keys: {'n_jobs_param', 'logging_param', 'X_test', '_available_plots', '_ml_usecase', 'data', 'y_test', 'exp_name_log', 'USI', 'log_plots_param', 'html_param', 'seed', 'fold_groups_param', 'memory', 'y_train', 'y', 'exp_id', 'fold_generator', 'pipeline', 'gpu_param', 'target_param', 'fix_imbalance', 'idx', 'X_train', 'X', 'fold_shuffle_param', 'gpu_n_jobs_param', 'is_multiclass'}
2024-02-19 12:22:35,927:INFO:Checking environment
2024-02-19 12:22:35,927:INFO:python_version: 3.10.13
2024-02-19 12:22:35,927:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2024-02-19 12:22:35,927:INFO:machine: AMD64
2024-02-19 12:22:35,927:INFO:platform: Windows-10-10.0.22621-SP0
2024-02-19 12:22:35,935:INFO:Memory: svmem(total=16952647680, available=6335156224, percent=62.6, used=10617491456, free=6335156224)
2024-02-19 12:22:35,935:INFO:Physical Core: 4
2024-02-19 12:22:35,935:INFO:Logical Core: 8
2024-02-19 12:22:35,935:INFO:Checking libraries
2024-02-19 12:22:35,935:INFO:System:
2024-02-19 12:22:35,935:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2024-02-19 12:22:35,935:INFO:executable: C:\Users\santh\anaconda3\envs\msds\python.exe
2024-02-19 12:22:35,935:INFO:   machine: Windows-10-10.0.22621-SP0
2024-02-19 12:22:35,935:INFO:PyCaret required dependencies:
2024-02-19 12:22:37,303:INFO:                 pip: 23.3.1
2024-02-19 12:22:37,303:INFO:          setuptools: 68.2.2
2024-02-19 12:22:37,303:INFO:             pycaret: 3.2.0
2024-02-19 12:22:37,303:INFO:             IPython: 8.20.0
2024-02-19 12:22:37,303:INFO:          ipywidgets: 8.0.4
2024-02-19 12:22:37,303:INFO:                tqdm: 4.65.0
2024-02-19 12:22:37,303:INFO:               numpy: 1.25.2
2024-02-19 12:22:37,303:INFO:              pandas: 1.5.3
2024-02-19 12:22:37,303:INFO:              jinja2: 3.1.3
2024-02-19 12:22:37,303:INFO:               scipy: 1.10.1
2024-02-19 12:22:37,303:INFO:              joblib: 1.2.0
2024-02-19 12:22:37,303:INFO:             sklearn: 1.2.2
2024-02-19 12:22:37,303:INFO:                pyod: 1.1.3
2024-02-19 12:22:37,303:INFO:            imblearn: 0.11.0
2024-02-19 12:22:37,303:INFO:   category_encoders: 2.6.3
2024-02-19 12:22:37,303:INFO:            lightgbm: 4.3.0
2024-02-19 12:22:37,303:INFO:               numba: 0.59.0
2024-02-19 12:22:37,303:INFO:            requests: 2.31.0
2024-02-19 12:22:37,303:INFO:          matplotlib: 3.6.0
2024-02-19 12:22:37,303:INFO:          scikitplot: 0.3.7
2024-02-19 12:22:37,303:INFO:         yellowbrick: 1.5
2024-02-19 12:22:37,303:INFO:              plotly: 5.9.0
2024-02-19 12:22:37,303:INFO:    plotly-resampler: Not installed
2024-02-19 12:22:37,303:INFO:             kaleido: 0.2.1
2024-02-19 12:22:37,303:INFO:           schemdraw: 0.15
2024-02-19 12:22:37,303:INFO:         statsmodels: 0.14.0
2024-02-19 12:22:37,303:INFO:              sktime: 0.21.1
2024-02-19 12:22:37,303:INFO:               tbats: 1.1.3
2024-02-19 12:22:37,303:INFO:            pmdarima: 2.0.4
2024-02-19 12:22:37,303:INFO:              psutil: 5.9.0
2024-02-19 12:22:37,303:INFO:          markupsafe: 2.1.3
2024-02-19 12:22:37,303:INFO:             pickle5: Not installed
2024-02-19 12:22:37,303:INFO:         cloudpickle: 2.2.1
2024-02-19 12:22:37,303:INFO:         deprecation: 2.1.0
2024-02-19 12:22:37,303:INFO:              xxhash: 2.0.2
2024-02-19 12:22:37,303:INFO:           wurlitzer: Not installed
2024-02-19 12:22:37,303:INFO:PyCaret optional dependencies:
2024-02-19 12:22:37,327:INFO:                shap: Not installed
2024-02-19 12:22:37,327:INFO:           interpret: Not installed
2024-02-19 12:22:37,327:INFO:                umap: Not installed
2024-02-19 12:22:37,327:INFO:     ydata_profiling: Not installed
2024-02-19 12:22:37,327:INFO:  explainerdashboard: Not installed
2024-02-19 12:22:37,327:INFO:             autoviz: Not installed
2024-02-19 12:22:37,327:INFO:           fairlearn: Not installed
2024-02-19 12:22:37,327:INFO:          deepchecks: Not installed
2024-02-19 12:22:37,327:INFO:             xgboost: Not installed
2024-02-19 12:22:37,327:INFO:            catboost: Not installed
2024-02-19 12:22:37,327:INFO:              kmodes: Not installed
2024-02-19 12:22:37,327:INFO:             mlxtend: Not installed
2024-02-19 12:22:37,327:INFO:       statsforecast: Not installed
2024-02-19 12:22:37,327:INFO:        tune_sklearn: Not installed
2024-02-19 12:22:37,327:INFO:                 ray: Not installed
2024-02-19 12:22:37,327:INFO:            hyperopt: Not installed
2024-02-19 12:22:37,327:INFO:              optuna: Not installed
2024-02-19 12:22:37,327:INFO:               skopt: Not installed
2024-02-19 12:22:37,327:INFO:              mlflow: Not installed
2024-02-19 12:22:37,327:INFO:              gradio: Not installed
2024-02-19 12:22:37,327:INFO:             fastapi: Not installed
2024-02-19 12:22:37,327:INFO:             uvicorn: Not installed
2024-02-19 12:22:37,327:INFO:              m2cgen: Not installed
2024-02-19 12:22:37,327:INFO:           evidently: Not installed
2024-02-19 12:22:37,327:INFO:               fugue: Not installed
2024-02-19 12:22:37,327:INFO:           streamlit: Not installed
2024-02-19 12:22:37,327:INFO:             prophet: Not installed
2024-02-19 12:22:37,327:INFO:None
2024-02-19 12:22:37,327:INFO:Set up data.
2024-02-19 12:22:37,335:INFO:Set up folding strategy.
2024-02-19 12:22:37,335:INFO:Set up train/test split.
2024-02-19 12:22:37,335:INFO:Set up index.
2024-02-19 12:22:37,335:INFO:Assigning column types.
2024-02-19 12:22:37,343:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-19 12:22:37,392:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-19 12:22:37,402:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-19 12:22:37,448:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 12:22:37,448:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 12:22:37,513:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-19 12:22:37,513:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-19 12:22:37,545:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 12:22:37,545:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 12:22:37,545:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-19 12:22:37,593:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-19 12:22:37,626:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 12:22:37,626:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 12:22:37,698:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-19 12:22:37,739:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 12:22:37,739:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 12:22:37,739:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-19 12:22:37,843:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 12:22:37,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 12:22:37,915:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 12:22:37,915:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 12:22:37,923:INFO:Preparing preprocessing pipeline...
2024-02-19 12:22:37,923:INFO:Set up simple imputation.
2024-02-19 12:22:37,963:INFO:Finished creating preprocessing pipeline.
2024-02-19 12:22:37,963:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\santh\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-19 12:22:37,963:INFO:Creating final display dataframe.
2024-02-19 12:22:38,110:INFO:Setup _display_container:                     Description             Value
0                    Session id              6737
1                        Target             Churn
2                   Target type            Binary
3           Original data shape         (7043, 8)
4        Transformed data shape         (7043, 8)
5   Transformed train set shape         (4930, 8)
6    Transformed test set shape         (2113, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              c9b2
2024-02-19 12:22:38,279:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 12:22:38,279:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 12:22:38,372:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 12:22:38,372:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 12:22:38,372:INFO:setup() successfully completed in 2.45s...............
2024-02-19 12:22:38,409:INFO:Initializing compare_models()
2024-02-19 12:22:38,409:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A055CC8B20>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001A055CC8B20>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-02-19 12:22:38,409:INFO:Checking exceptions
2024-02-19 12:22:38,418:INFO:Preparing display monitor
2024-02-19 12:22:38,466:INFO:Initializing Logistic Regression
2024-02-19 12:22:38,466:INFO:Total runtime is 0.0 minutes
2024-02-19 12:22:38,474:INFO:SubProcess create_model() called ==================================
2024-02-19 12:22:38,474:INFO:Initializing create_model()
2024-02-19 12:22:38,474:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A055CC8B20>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057DA6C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 12:22:38,474:INFO:Checking exceptions
2024-02-19 12:22:38,474:INFO:Importing libraries
2024-02-19 12:22:38,474:INFO:Copying training dataset
2024-02-19 12:22:38,474:INFO:Defining folds
2024-02-19 12:22:38,474:INFO:Declaring metric variables
2024-02-19 12:22:38,482:INFO:Importing untrained model
2024-02-19 12:22:38,490:INFO:Logistic Regression Imported successfully
2024-02-19 12:22:38,498:INFO:Starting cross validation
2024-02-19 12:22:38,498:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 12:22:47,292:INFO:Calculating mean and std
2024-02-19 12:22:47,292:INFO:Creating metrics dataframe
2024-02-19 12:22:47,300:INFO:Uploading results into container
2024-02-19 12:22:47,300:INFO:Uploading model into container now
2024-02-19 12:22:47,300:INFO:_master_model_container: 1
2024-02-19 12:22:47,300:INFO:_display_container: 2
2024-02-19 12:22:47,308:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6737, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-19 12:22:47,308:INFO:create_model() successfully completed......................................
2024-02-19 12:22:47,397:INFO:SubProcess create_model() end ==================================
2024-02-19 12:22:47,397:INFO:Creating metrics dataframe
2024-02-19 12:22:47,413:INFO:Initializing K Neighbors Classifier
2024-02-19 12:22:47,413:INFO:Total runtime is 0.14911742607752482 minutes
2024-02-19 12:22:47,413:INFO:SubProcess create_model() called ==================================
2024-02-19 12:22:47,413:INFO:Initializing create_model()
2024-02-19 12:22:47,413:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A055CC8B20>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057DA6C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 12:22:47,413:INFO:Checking exceptions
2024-02-19 12:22:47,421:INFO:Importing libraries
2024-02-19 12:22:47,421:INFO:Copying training dataset
2024-02-19 12:22:47,429:INFO:Defining folds
2024-02-19 12:22:47,429:INFO:Declaring metric variables
2024-02-19 12:22:47,438:INFO:Importing untrained model
2024-02-19 12:22:47,445:INFO:K Neighbors Classifier Imported successfully
2024-02-19 12:22:47,454:INFO:Starting cross validation
2024-02-19 12:22:47,454:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 12:22:47,687:INFO:Calculating mean and std
2024-02-19 12:22:47,687:INFO:Creating metrics dataframe
2024-02-19 12:22:47,695:INFO:Uploading results into container
2024-02-19 12:22:47,695:INFO:Uploading model into container now
2024-02-19 12:22:47,695:INFO:_master_model_container: 2
2024-02-19 12:22:47,695:INFO:_display_container: 2
2024-02-19 12:22:47,695:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-19 12:22:47,695:INFO:create_model() successfully completed......................................
2024-02-19 12:22:47,823:INFO:SubProcess create_model() end ==================================
2024-02-19 12:22:47,823:INFO:Creating metrics dataframe
2024-02-19 12:22:47,841:INFO:Initializing Naive Bayes
2024-02-19 12:22:47,841:INFO:Total runtime is 0.1562533418337504 minutes
2024-02-19 12:22:47,841:INFO:SubProcess create_model() called ==================================
2024-02-19 12:22:47,841:INFO:Initializing create_model()
2024-02-19 12:22:47,849:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A055CC8B20>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057DA6C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 12:22:47,849:INFO:Checking exceptions
2024-02-19 12:22:47,849:INFO:Importing libraries
2024-02-19 12:22:47,849:INFO:Copying training dataset
2024-02-19 12:22:47,857:INFO:Defining folds
2024-02-19 12:22:47,857:INFO:Declaring metric variables
2024-02-19 12:22:47,865:INFO:Importing untrained model
2024-02-19 12:22:47,873:INFO:Naive Bayes Imported successfully
2024-02-19 12:22:47,886:INFO:Starting cross validation
2024-02-19 12:22:47,886:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 12:22:48,010:INFO:Calculating mean and std
2024-02-19 12:22:48,018:INFO:Creating metrics dataframe
2024-02-19 12:22:48,018:INFO:Uploading results into container
2024-02-19 12:22:48,018:INFO:Uploading model into container now
2024-02-19 12:22:48,018:INFO:_master_model_container: 3
2024-02-19 12:22:48,018:INFO:_display_container: 2
2024-02-19 12:22:48,018:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-02-19 12:22:48,018:INFO:create_model() successfully completed......................................
2024-02-19 12:22:48,106:INFO:SubProcess create_model() end ==================================
2024-02-19 12:22:48,106:INFO:Creating metrics dataframe
2024-02-19 12:22:48,114:INFO:Initializing Decision Tree Classifier
2024-02-19 12:22:48,114:INFO:Total runtime is 0.16080567042032876 minutes
2024-02-19 12:22:48,122:INFO:SubProcess create_model() called ==================================
2024-02-19 12:22:48,122:INFO:Initializing create_model()
2024-02-19 12:22:48,122:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A055CC8B20>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057DA6C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 12:22:48,122:INFO:Checking exceptions
2024-02-19 12:22:48,122:INFO:Importing libraries
2024-02-19 12:22:48,122:INFO:Copying training dataset
2024-02-19 12:22:48,138:INFO:Defining folds
2024-02-19 12:22:48,138:INFO:Declaring metric variables
2024-02-19 12:22:48,146:INFO:Importing untrained model
2024-02-19 12:22:48,154:INFO:Decision Tree Classifier Imported successfully
2024-02-19 12:22:48,162:INFO:Starting cross validation
2024-02-19 12:22:48,162:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 12:22:48,315:INFO:Calculating mean and std
2024-02-19 12:22:48,315:INFO:Creating metrics dataframe
2024-02-19 12:22:48,323:INFO:Uploading results into container
2024-02-19 12:22:48,323:INFO:Uploading model into container now
2024-02-19 12:22:48,323:INFO:_master_model_container: 4
2024-02-19 12:22:48,323:INFO:_display_container: 2
2024-02-19 12:22:48,323:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6737, splitter='best')
2024-02-19 12:22:48,323:INFO:create_model() successfully completed......................................
2024-02-19 12:22:48,411:INFO:SubProcess create_model() end ==================================
2024-02-19 12:22:48,411:INFO:Creating metrics dataframe
2024-02-19 12:22:48,435:INFO:Initializing SVM - Linear Kernel
2024-02-19 12:22:48,435:INFO:Total runtime is 0.16616318623224893 minutes
2024-02-19 12:22:48,452:INFO:SubProcess create_model() called ==================================
2024-02-19 12:22:48,452:INFO:Initializing create_model()
2024-02-19 12:22:48,452:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A055CC8B20>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057DA6C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 12:22:48,452:INFO:Checking exceptions
2024-02-19 12:22:48,452:INFO:Importing libraries
2024-02-19 12:22:48,452:INFO:Copying training dataset
2024-02-19 12:22:48,460:INFO:Defining folds
2024-02-19 12:22:48,460:INFO:Declaring metric variables
2024-02-19 12:22:48,471:INFO:Importing untrained model
2024-02-19 12:22:48,478:INFO:SVM - Linear Kernel Imported successfully
2024-02-19 12:22:48,492:INFO:Starting cross validation
2024-02-19 12:22:48,492:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 12:22:48,581:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 12:22:48,589:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 12:22:48,597:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 12:22:48,597:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 12:22:48,597:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 12:22:48,638:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 12:22:48,646:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 12:22:48,655:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 12:22:48,663:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 12:22:48,679:INFO:Calculating mean and std
2024-02-19 12:22:48,687:INFO:Creating metrics dataframe
2024-02-19 12:22:48,690:INFO:Uploading results into container
2024-02-19 12:22:48,690:INFO:Uploading model into container now
2024-02-19 12:22:48,690:INFO:_master_model_container: 5
2024-02-19 12:22:48,690:INFO:_display_container: 2
2024-02-19 12:22:48,695:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6737, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-02-19 12:22:48,695:INFO:create_model() successfully completed......................................
2024-02-19 12:22:48,792:INFO:SubProcess create_model() end ==================================
2024-02-19 12:22:48,792:INFO:Creating metrics dataframe
2024-02-19 12:22:48,808:INFO:Initializing Ridge Classifier
2024-02-19 12:22:48,808:INFO:Total runtime is 0.17237949768702188 minutes
2024-02-19 12:22:48,816:INFO:SubProcess create_model() called ==================================
2024-02-19 12:22:48,816:INFO:Initializing create_model()
2024-02-19 12:22:48,816:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A055CC8B20>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057DA6C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 12:22:48,816:INFO:Checking exceptions
2024-02-19 12:22:48,816:INFO:Importing libraries
2024-02-19 12:22:48,818:INFO:Copying training dataset
2024-02-19 12:22:48,824:INFO:Defining folds
2024-02-19 12:22:48,824:INFO:Declaring metric variables
2024-02-19 12:22:48,835:INFO:Importing untrained model
2024-02-19 12:22:48,841:INFO:Ridge Classifier Imported successfully
2024-02-19 12:22:48,857:INFO:Starting cross validation
2024-02-19 12:22:48,857:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 12:22:48,897:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.46655e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 12:22:48,905:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.46801e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 12:22:48,913:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 12:22:48,913:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.46207e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 12:22:48,913:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 12:22:48,913:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.37704e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 12:22:48,921:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.44518e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 12:22:48,921:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 12:22:48,929:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 12:22:48,929:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.43531e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 12:22:48,929:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 12:22:48,937:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 12:22:48,945:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.43522e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 12:22:48,948:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.4313e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 12:22:48,953:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 12:22:48,959:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.45259e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 12:22:48,959:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 12:22:48,963:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.4537e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 12:22:48,970:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 12:22:48,970:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 12:22:48,986:INFO:Calculating mean and std
2024-02-19 12:22:48,986:INFO:Creating metrics dataframe
2024-02-19 12:22:48,994:INFO:Uploading results into container
2024-02-19 12:22:49,002:INFO:Uploading model into container now
2024-02-19 12:22:49,002:INFO:_master_model_container: 6
2024-02-19 12:22:49,002:INFO:_display_container: 2
2024-02-19 12:22:49,002:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6737, solver='auto',
                tol=0.0001)
2024-02-19 12:22:49,002:INFO:create_model() successfully completed......................................
2024-02-19 12:22:49,102:INFO:SubProcess create_model() end ==================================
2024-02-19 12:22:49,102:INFO:Creating metrics dataframe
2024-02-19 12:22:49,123:INFO:Initializing Random Forest Classifier
2024-02-19 12:22:49,123:INFO:Total runtime is 0.17761968771616615 minutes
2024-02-19 12:22:49,134:INFO:SubProcess create_model() called ==================================
2024-02-19 12:22:49,134:INFO:Initializing create_model()
2024-02-19 12:22:49,134:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A055CC8B20>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057DA6C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 12:22:49,134:INFO:Checking exceptions
2024-02-19 12:22:49,134:INFO:Importing libraries
2024-02-19 12:22:49,134:INFO:Copying training dataset
2024-02-19 12:22:49,148:INFO:Defining folds
2024-02-19 12:22:49,148:INFO:Declaring metric variables
2024-02-19 12:22:49,156:INFO:Importing untrained model
2024-02-19 12:22:49,164:INFO:Random Forest Classifier Imported successfully
2024-02-19 12:22:49,179:INFO:Starting cross validation
2024-02-19 12:22:49,180:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 12:22:51,085:INFO:Calculating mean and std
2024-02-19 12:22:51,085:INFO:Creating metrics dataframe
2024-02-19 12:22:51,091:INFO:Uploading results into container
2024-02-19 12:22:51,091:INFO:Uploading model into container now
2024-02-19 12:22:51,091:INFO:_master_model_container: 7
2024-02-19 12:22:51,091:INFO:_display_container: 2
2024-02-19 12:22:51,091:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=6737, verbose=0, warm_start=False)
2024-02-19 12:22:51,091:INFO:create_model() successfully completed......................................
2024-02-19 12:22:51,212:INFO:SubProcess create_model() end ==================================
2024-02-19 12:22:51,212:INFO:Creating metrics dataframe
2024-02-19 12:22:51,236:INFO:Initializing Quadratic Discriminant Analysis
2024-02-19 12:22:51,236:INFO:Total runtime is 0.21284085114796952 minutes
2024-02-19 12:22:51,252:INFO:SubProcess create_model() called ==================================
2024-02-19 12:22:51,252:INFO:Initializing create_model()
2024-02-19 12:22:51,252:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A055CC8B20>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057DA6C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 12:22:51,252:INFO:Checking exceptions
2024-02-19 12:22:51,252:INFO:Importing libraries
2024-02-19 12:22:51,252:INFO:Copying training dataset
2024-02-19 12:22:51,273:INFO:Defining folds
2024-02-19 12:22:51,273:INFO:Declaring metric variables
2024-02-19 12:22:51,285:INFO:Importing untrained model
2024-02-19 12:22:51,293:INFO:Quadratic Discriminant Analysis Imported successfully
2024-02-19 12:22:51,302:INFO:Starting cross validation
2024-02-19 12:22:51,302:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 12:22:51,422:INFO:Calculating mean and std
2024-02-19 12:22:51,422:INFO:Creating metrics dataframe
2024-02-19 12:22:51,430:INFO:Uploading results into container
2024-02-19 12:22:51,430:INFO:Uploading model into container now
2024-02-19 12:22:51,430:INFO:_master_model_container: 8
2024-02-19 12:22:51,430:INFO:_display_container: 2
2024-02-19 12:22:51,430:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-02-19 12:22:51,430:INFO:create_model() successfully completed......................................
2024-02-19 12:22:51,526:INFO:SubProcess create_model() end ==================================
2024-02-19 12:22:51,526:INFO:Creating metrics dataframe
2024-02-19 12:22:51,543:INFO:Initializing Ada Boost Classifier
2024-02-19 12:22:51,543:INFO:Total runtime is 0.21794916391372676 minutes
2024-02-19 12:22:51,551:INFO:SubProcess create_model() called ==================================
2024-02-19 12:22:51,551:INFO:Initializing create_model()
2024-02-19 12:22:51,551:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A055CC8B20>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057DA6C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 12:22:51,551:INFO:Checking exceptions
2024-02-19 12:22:51,551:INFO:Importing libraries
2024-02-19 12:22:51,551:INFO:Copying training dataset
2024-02-19 12:22:51,559:INFO:Defining folds
2024-02-19 12:22:51,559:INFO:Declaring metric variables
2024-02-19 12:22:51,568:INFO:Importing untrained model
2024-02-19 12:22:51,575:INFO:Ada Boost Classifier Imported successfully
2024-02-19 12:22:51,592:INFO:Starting cross validation
2024-02-19 12:22:51,592:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 12:22:52,407:INFO:Calculating mean and std
2024-02-19 12:22:52,407:INFO:Creating metrics dataframe
2024-02-19 12:22:52,407:INFO:Uploading results into container
2024-02-19 12:22:52,407:INFO:Uploading model into container now
2024-02-19 12:22:52,407:INFO:_master_model_container: 9
2024-02-19 12:22:52,407:INFO:_display_container: 2
2024-02-19 12:22:52,407:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=6737)
2024-02-19 12:22:52,407:INFO:create_model() successfully completed......................................
2024-02-19 12:22:52,520:INFO:SubProcess create_model() end ==================================
2024-02-19 12:22:52,520:INFO:Creating metrics dataframe
2024-02-19 12:22:52,536:INFO:Initializing Gradient Boosting Classifier
2024-02-19 12:22:52,536:INFO:Total runtime is 0.23450126250584916 minutes
2024-02-19 12:22:52,552:INFO:SubProcess create_model() called ==================================
2024-02-19 12:22:52,552:INFO:Initializing create_model()
2024-02-19 12:22:52,552:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A055CC8B20>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057DA6C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 12:22:52,552:INFO:Checking exceptions
2024-02-19 12:22:52,555:INFO:Importing libraries
2024-02-19 12:22:52,555:INFO:Copying training dataset
2024-02-19 12:22:52,560:INFO:Defining folds
2024-02-19 12:22:52,568:INFO:Declaring metric variables
2024-02-19 12:22:52,576:INFO:Importing untrained model
2024-02-19 12:22:52,584:INFO:Gradient Boosting Classifier Imported successfully
2024-02-19 12:22:52,592:INFO:Starting cross validation
2024-02-19 12:22:52,592:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 12:22:54,855:INFO:Calculating mean and std
2024-02-19 12:22:54,863:INFO:Creating metrics dataframe
2024-02-19 12:22:54,865:INFO:Uploading results into container
2024-02-19 12:22:54,871:INFO:Uploading model into container now
2024-02-19 12:22:54,871:INFO:_master_model_container: 10
2024-02-19 12:22:54,871:INFO:_display_container: 2
2024-02-19 12:22:54,871:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6737, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-19 12:22:54,871:INFO:create_model() successfully completed......................................
2024-02-19 12:22:54,952:INFO:SubProcess create_model() end ==================================
2024-02-19 12:22:54,952:INFO:Creating metrics dataframe
2024-02-19 12:22:54,976:INFO:Initializing Linear Discriminant Analysis
2024-02-19 12:22:54,976:INFO:Total runtime is 0.2751744667689005 minutes
2024-02-19 12:22:54,984:INFO:SubProcess create_model() called ==================================
2024-02-19 12:22:54,984:INFO:Initializing create_model()
2024-02-19 12:22:54,984:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A055CC8B20>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057DA6C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 12:22:54,984:INFO:Checking exceptions
2024-02-19 12:22:54,984:INFO:Importing libraries
2024-02-19 12:22:54,984:INFO:Copying training dataset
2024-02-19 12:22:55,001:INFO:Defining folds
2024-02-19 12:22:55,001:INFO:Declaring metric variables
2024-02-19 12:22:55,011:INFO:Importing untrained model
2024-02-19 12:22:55,017:INFO:Linear Discriminant Analysis Imported successfully
2024-02-19 12:22:55,025:INFO:Starting cross validation
2024-02-19 12:22:55,025:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 12:22:55,146:INFO:Calculating mean and std
2024-02-19 12:22:55,154:INFO:Creating metrics dataframe
2024-02-19 12:22:55,154:INFO:Uploading results into container
2024-02-19 12:22:55,154:INFO:Uploading model into container now
2024-02-19 12:22:55,154:INFO:_master_model_container: 11
2024-02-19 12:22:55,154:INFO:_display_container: 2
2024-02-19 12:22:55,154:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-02-19 12:22:55,154:INFO:create_model() successfully completed......................................
2024-02-19 12:22:55,251:INFO:SubProcess create_model() end ==================================
2024-02-19 12:22:55,251:INFO:Creating metrics dataframe
2024-02-19 12:22:55,274:INFO:Initializing Extra Trees Classifier
2024-02-19 12:22:55,274:INFO:Total runtime is 0.2801461577415466 minutes
2024-02-19 12:22:55,274:INFO:SubProcess create_model() called ==================================
2024-02-19 12:22:55,282:INFO:Initializing create_model()
2024-02-19 12:22:55,282:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A055CC8B20>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057DA6C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 12:22:55,282:INFO:Checking exceptions
2024-02-19 12:22:55,282:INFO:Importing libraries
2024-02-19 12:22:55,282:INFO:Copying training dataset
2024-02-19 12:22:55,291:INFO:Defining folds
2024-02-19 12:22:55,291:INFO:Declaring metric variables
2024-02-19 12:22:55,299:INFO:Importing untrained model
2024-02-19 12:22:55,309:INFO:Extra Trees Classifier Imported successfully
2024-02-19 12:22:55,324:INFO:Starting cross validation
2024-02-19 12:22:55,324:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 12:22:56,793:INFO:Calculating mean and std
2024-02-19 12:22:56,801:INFO:Creating metrics dataframe
2024-02-19 12:22:56,803:INFO:Uploading results into container
2024-02-19 12:22:56,803:INFO:Uploading model into container now
2024-02-19 12:22:56,803:INFO:_master_model_container: 12
2024-02-19 12:22:56,803:INFO:_display_container: 2
2024-02-19 12:22:56,803:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=6737, verbose=0, warm_start=False)
2024-02-19 12:22:56,810:INFO:create_model() successfully completed......................................
2024-02-19 12:22:56,907:INFO:SubProcess create_model() end ==================================
2024-02-19 12:22:56,907:INFO:Creating metrics dataframe
2024-02-19 12:22:56,931:INFO:Initializing Light Gradient Boosting Machine
2024-02-19 12:22:56,931:INFO:Total runtime is 0.3077620506286621 minutes
2024-02-19 12:22:56,940:INFO:SubProcess create_model() called ==================================
2024-02-19 12:22:56,940:INFO:Initializing create_model()
2024-02-19 12:22:56,940:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A055CC8B20>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057DA6C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 12:22:56,940:INFO:Checking exceptions
2024-02-19 12:22:56,940:INFO:Importing libraries
2024-02-19 12:22:56,940:INFO:Copying training dataset
2024-02-19 12:22:56,948:INFO:Defining folds
2024-02-19 12:22:56,948:INFO:Declaring metric variables
2024-02-19 12:22:56,956:INFO:Importing untrained model
2024-02-19 12:22:56,966:INFO:Light Gradient Boosting Machine Imported successfully
2024-02-19 12:22:56,985:INFO:Starting cross validation
2024-02-19 12:22:56,986:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 12:22:58,434:INFO:Calculating mean and std
2024-02-19 12:22:58,440:INFO:Creating metrics dataframe
2024-02-19 12:22:58,445:INFO:Uploading results into container
2024-02-19 12:22:58,448:INFO:Uploading model into container now
2024-02-19 12:22:58,448:INFO:_master_model_container: 13
2024-02-19 12:22:58,448:INFO:_display_container: 2
2024-02-19 12:22:58,448:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6737, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-02-19 12:22:58,448:INFO:create_model() successfully completed......................................
2024-02-19 12:22:58,560:INFO:SubProcess create_model() end ==================================
2024-02-19 12:22:58,560:INFO:Creating metrics dataframe
2024-02-19 12:22:58,576:INFO:Initializing Dummy Classifier
2024-02-19 12:22:58,576:INFO:Total runtime is 0.3351799329121907 minutes
2024-02-19 12:22:58,585:INFO:SubProcess create_model() called ==================================
2024-02-19 12:22:58,585:INFO:Initializing create_model()
2024-02-19 12:22:58,587:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A055CC8B20>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057DA6C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 12:22:58,587:INFO:Checking exceptions
2024-02-19 12:22:58,587:INFO:Importing libraries
2024-02-19 12:22:58,587:INFO:Copying training dataset
2024-02-19 12:22:58,593:INFO:Defining folds
2024-02-19 12:22:58,593:INFO:Declaring metric variables
2024-02-19 12:22:58,605:INFO:Importing untrained model
2024-02-19 12:22:58,610:INFO:Dummy Classifier Imported successfully
2024-02-19 12:22:58,619:INFO:Starting cross validation
2024-02-19 12:22:58,626:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 12:22:58,675:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 12:22:58,687:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 12:22:58,687:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 12:22:58,699:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 12:22:58,699:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 12:22:58,699:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 12:22:58,707:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 12:22:58,707:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 12:22:58,715:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 12:22:58,723:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 12:22:58,731:INFO:Calculating mean and std
2024-02-19 12:22:58,731:INFO:Creating metrics dataframe
2024-02-19 12:22:58,739:INFO:Uploading results into container
2024-02-19 12:22:58,739:INFO:Uploading model into container now
2024-02-19 12:22:58,739:INFO:_master_model_container: 14
2024-02-19 12:22:58,739:INFO:_display_container: 2
2024-02-19 12:22:58,739:INFO:DummyClassifier(constant=None, random_state=6737, strategy='prior')
2024-02-19 12:22:58,739:INFO:create_model() successfully completed......................................
2024-02-19 12:22:58,844:INFO:SubProcess create_model() end ==================================
2024-02-19 12:22:58,844:INFO:Creating metrics dataframe
2024-02-19 12:22:58,918:INFO:Initializing create_model()
2024-02-19 12:22:58,918:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A055CC8B20>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6737, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 12:22:58,918:INFO:Checking exceptions
2024-02-19 12:22:58,918:INFO:Importing libraries
2024-02-19 12:22:58,918:INFO:Copying training dataset
2024-02-19 12:22:58,934:INFO:Defining folds
2024-02-19 12:22:58,934:INFO:Declaring metric variables
2024-02-19 12:22:58,934:INFO:Importing untrained model
2024-02-19 12:22:58,934:INFO:Declaring custom model
2024-02-19 12:22:58,934:INFO:Logistic Regression Imported successfully
2024-02-19 12:22:58,934:INFO:Cross validation set to False
2024-02-19 12:22:58,934:INFO:Fitting Model
2024-02-19 12:22:59,133:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6737, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-19 12:22:59,133:INFO:create_model() successfully completed......................................
2024-02-19 12:22:59,288:INFO:_master_model_container: 14
2024-02-19 12:22:59,288:INFO:_display_container: 2
2024-02-19 12:22:59,288:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6737, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-19 12:22:59,288:INFO:compare_models() successfully completed......................................
2024-02-19 12:22:59,349:INFO:Initializing evaluate_model()
2024-02-19 12:22:59,349:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A055CC8B20>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6737, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-02-19 12:22:59,397:INFO:Initializing plot_model()
2024-02-19 12:22:59,397:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6737, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A055CC8B20>, system=True)
2024-02-19 12:22:59,397:INFO:Checking exceptions
2024-02-19 12:22:59,405:INFO:Preloading libraries
2024-02-19 12:22:59,405:INFO:Copying training dataset
2024-02-19 12:22:59,405:INFO:Plot type: pipeline
2024-02-19 12:22:59,671:INFO:Visual Rendered Successfully
2024-02-19 12:22:59,752:INFO:plot_model() successfully completed......................................
2024-02-19 12:22:59,768:INFO:Initializing plot_model()
2024-02-19 12:22:59,768:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6737, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A055CC8B20>, system=True)
2024-02-19 12:22:59,768:INFO:Checking exceptions
2024-02-19 12:22:59,776:INFO:Preloading libraries
2024-02-19 12:22:59,776:INFO:Copying training dataset
2024-02-19 12:22:59,776:INFO:Plot type: auc
2024-02-19 12:22:59,995:INFO:Fitting Model
2024-02-19 12:22:59,995:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-02-19 12:22:59,995:INFO:Scoring test/hold-out set
2024-02-19 12:23:00,317:INFO:Visual Rendered Successfully
2024-02-19 12:23:00,407:INFO:plot_model() successfully completed......................................
2024-02-19 12:23:00,424:INFO:Initializing save_model()
2024-02-19 12:23:00,424:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6737, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=pycaret_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\santh\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-02-19 12:23:00,424:INFO:Adding model into prep_pipe
2024-02-19 12:23:00,435:INFO:pycaret_model.pkl saved in current working directory
2024-02-19 12:23:00,440:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=6737,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-02-19 12:23:00,440:INFO:save_model() successfully completed......................................
2024-02-19 12:23:00,552:INFO:Initializing load_model()
2024-02-19 12:23:00,552:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 12:23:00,589:INFO:Initializing predict_model()
2024-02-19 12:23:00,589:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A057BB09D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=6737,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A057A70EE0>)
2024-02-19 12:23:00,589:INFO:Checking exceptions
2024-02-19 12:23:00,589:INFO:Preloading libraries
2024-02-19 12:23:00,593:INFO:Set up data.
2024-02-19 12:23:00,593:INFO:Set up index.
2024-02-19 12:23:01,239:INFO:Initializing load_model()
2024-02-19 12:23:01,239:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 12:23:01,247:INFO:Initializing predict_model()
2024-02-19 12:23:01,247:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A059FC3FA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=6737,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05A018820>)
2024-02-19 12:23:01,247:INFO:Checking exceptions
2024-02-19 12:23:01,247:INFO:Preloading libraries
2024-02-19 12:23:01,247:INFO:Set up data.
2024-02-19 12:23:01,255:INFO:Set up index.
2024-02-19 12:23:01,376:INFO:Initializing load_model()
2024-02-19 12:23:01,376:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 12:23:01,384:INFO:Initializing predict_model()
2024-02-19 12:23:01,384:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A057F45E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=6737,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A057A22170>)
2024-02-19 12:23:01,384:INFO:Checking exceptions
2024-02-19 12:23:01,384:INFO:Preloading libraries
2024-02-19 12:23:01,384:INFO:Set up data.
2024-02-19 12:23:01,392:INFO:Set up index.
2024-02-19 12:23:01,591:INFO:Initializing load_model()
2024-02-19 12:23:01,597:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 12:23:01,606:INFO:Initializing predict_model()
2024-02-19 12:23:01,606:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A057AAFF40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=6737,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A055FF68C0>)
2024-02-19 12:23:01,606:INFO:Checking exceptions
2024-02-19 12:23:01,606:INFO:Preloading libraries
2024-02-19 12:23:01,606:INFO:Set up data.
2024-02-19 12:23:01,614:INFO:Set up index.
2024-02-19 12:23:01,743:INFO:Initializing load_model()
2024-02-19 12:23:01,743:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 12:23:01,759:INFO:Initializing predict_model()
2024-02-19 12:23:01,759:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A031A3F070>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=6737,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A059FC7250>)
2024-02-19 12:23:01,759:INFO:Checking exceptions
2024-02-19 12:23:01,759:INFO:Preloading libraries
2024-02-19 12:23:01,759:INFO:Set up data.
2024-02-19 12:23:01,767:INFO:Set up index.
2024-02-19 12:23:01,914:INFO:Initializing load_model()
2024-02-19 12:23:01,914:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 12:23:01,938:INFO:Initializing predict_model()
2024-02-19 12:23:01,938:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A057D55840>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=6737,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05A0183A0>)
2024-02-19 12:23:01,938:INFO:Checking exceptions
2024-02-19 12:23:01,938:INFO:Preloading libraries
2024-02-19 12:23:01,938:INFO:Set up data.
2024-02-19 12:23:01,944:INFO:Set up index.
2024-02-19 13:10:51,575:INFO:Initializing load_model()
2024-02-19 13:10:51,575:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:10:51,583:INFO:Initializing predict_model()
2024-02-19 13:10:51,583:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BFFEB30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=6737,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05C04D120>)
2024-02-19 13:10:51,583:INFO:Checking exceptions
2024-02-19 13:10:51,583:INFO:Preloading libraries
2024-02-19 13:10:51,583:INFO:Set up data.
2024-02-19 13:10:51,599:INFO:Set up index.
2024-02-19 13:10:51,913:INFO:Initializing load_model()
2024-02-19 13:10:51,913:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:10:51,921:INFO:Initializing predict_model()
2024-02-19 13:10:51,921:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A042578100>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=6737,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A055FF69E0>)
2024-02-19 13:10:51,921:INFO:Checking exceptions
2024-02-19 13:10:51,921:INFO:Preloading libraries
2024-02-19 13:10:51,921:INFO:Set up data.
2024-02-19 13:10:51,930:INFO:Set up index.
2024-02-19 13:10:52,054:INFO:Initializing load_model()
2024-02-19 13:10:52,054:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:10:52,061:INFO:Initializing predict_model()
2024-02-19 13:10:52,061:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05B988040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=6737,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A055FF69E0>)
2024-02-19 13:10:52,061:INFO:Checking exceptions
2024-02-19 13:10:52,061:INFO:Preloading libraries
2024-02-19 13:10:52,070:INFO:Set up data.
2024-02-19 13:10:52,070:INFO:Set up index.
2024-02-19 13:12:06,784:INFO:Initializing load_model()
2024-02-19 13:12:06,784:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:12:06,792:INFO:Initializing predict_model()
2024-02-19 13:12:06,792:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A057ECFAF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=6737,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05C02D900>)
2024-02-19 13:12:06,792:INFO:Checking exceptions
2024-02-19 13:12:06,792:INFO:Preloading libraries
2024-02-19 13:12:06,792:INFO:Set up data.
2024-02-19 13:12:06,808:INFO:Set up index.
2024-02-19 13:12:06,961:INFO:Initializing load_model()
2024-02-19 13:12:06,961:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:12:06,969:INFO:Initializing predict_model()
2024-02-19 13:12:06,969:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05A4B4190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=6737,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05B6EBF40>)
2024-02-19 13:12:06,969:INFO:Checking exceptions
2024-02-19 13:12:06,969:INFO:Preloading libraries
2024-02-19 13:12:06,970:INFO:Set up data.
2024-02-19 13:12:06,977:INFO:Set up index.
2024-02-19 13:12:07,147:INFO:Initializing load_model()
2024-02-19 13:12:07,147:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:12:07,170:INFO:Initializing predict_model()
2024-02-19 13:12:07,170:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05A4B4190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=6737,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05B6EBF40>)
2024-02-19 13:12:07,170:INFO:Checking exceptions
2024-02-19 13:12:07,170:INFO:Preloading libraries
2024-02-19 13:12:07,170:INFO:Set up data.
2024-02-19 13:12:07,186:INFO:Set up index.
2024-02-19 13:12:35,806:INFO:PyCaret ClassificationExperiment
2024-02-19 13:12:35,806:INFO:Logging name: clf-default-name
2024-02-19 13:12:35,806:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-19 13:12:35,806:INFO:version 3.2.0
2024-02-19 13:12:35,806:INFO:Initializing setup()
2024-02-19 13:12:35,806:INFO:self.USI: fc9f
2024-02-19 13:12:35,806:INFO:self._variable_keys: {'n_jobs_param', 'logging_param', 'X_test', '_available_plots', '_ml_usecase', 'data', 'y_test', 'exp_name_log', 'USI', 'log_plots_param', 'html_param', 'seed', 'fold_groups_param', 'memory', 'y_train', 'y', 'exp_id', 'fold_generator', 'pipeline', 'gpu_param', 'target_param', 'fix_imbalance', 'idx', 'X_train', 'X', 'fold_shuffle_param', 'gpu_n_jobs_param', 'is_multiclass'}
2024-02-19 13:12:35,806:INFO:Checking environment
2024-02-19 13:12:35,806:INFO:python_version: 3.10.13
2024-02-19 13:12:35,806:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2024-02-19 13:12:35,806:INFO:machine: AMD64
2024-02-19 13:12:35,806:INFO:platform: Windows-10-10.0.22621-SP0
2024-02-19 13:12:35,806:INFO:Memory: svmem(total=16952647680, available=6457409536, percent=61.9, used=10495238144, free=6457409536)
2024-02-19 13:12:35,814:INFO:Physical Core: 4
2024-02-19 13:12:35,814:INFO:Logical Core: 8
2024-02-19 13:12:35,814:INFO:Checking libraries
2024-02-19 13:12:35,814:INFO:System:
2024-02-19 13:12:35,814:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2024-02-19 13:12:35,814:INFO:executable: C:\Users\santh\anaconda3\envs\msds\python.exe
2024-02-19 13:12:35,814:INFO:   machine: Windows-10-10.0.22621-SP0
2024-02-19 13:12:35,815:INFO:PyCaret required dependencies:
2024-02-19 13:12:35,815:INFO:                 pip: 23.3.1
2024-02-19 13:12:35,815:INFO:          setuptools: 68.2.2
2024-02-19 13:12:35,815:INFO:             pycaret: 3.2.0
2024-02-19 13:12:35,815:INFO:             IPython: 8.20.0
2024-02-19 13:12:35,815:INFO:          ipywidgets: 8.0.4
2024-02-19 13:12:35,815:INFO:                tqdm: 4.65.0
2024-02-19 13:12:35,815:INFO:               numpy: 1.25.2
2024-02-19 13:12:35,815:INFO:              pandas: 1.5.3
2024-02-19 13:12:35,815:INFO:              jinja2: 3.1.3
2024-02-19 13:12:35,815:INFO:               scipy: 1.10.1
2024-02-19 13:12:35,815:INFO:              joblib: 1.2.0
2024-02-19 13:12:35,815:INFO:             sklearn: 1.2.2
2024-02-19 13:12:35,815:INFO:                pyod: 1.1.3
2024-02-19 13:12:35,815:INFO:            imblearn: 0.11.0
2024-02-19 13:12:35,815:INFO:   category_encoders: 2.6.3
2024-02-19 13:12:35,815:INFO:            lightgbm: 4.3.0
2024-02-19 13:12:35,815:INFO:               numba: 0.59.0
2024-02-19 13:12:35,815:INFO:            requests: 2.31.0
2024-02-19 13:12:35,815:INFO:          matplotlib: 3.6.0
2024-02-19 13:12:35,815:INFO:          scikitplot: 0.3.7
2024-02-19 13:12:35,815:INFO:         yellowbrick: 1.5
2024-02-19 13:12:35,815:INFO:              plotly: 5.9.0
2024-02-19 13:12:35,815:INFO:    plotly-resampler: Not installed
2024-02-19 13:12:35,815:INFO:             kaleido: 0.2.1
2024-02-19 13:12:35,815:INFO:           schemdraw: 0.15
2024-02-19 13:12:35,815:INFO:         statsmodels: 0.14.0
2024-02-19 13:12:35,815:INFO:              sktime: 0.21.1
2024-02-19 13:12:35,815:INFO:               tbats: 1.1.3
2024-02-19 13:12:35,815:INFO:            pmdarima: 2.0.4
2024-02-19 13:12:35,815:INFO:              psutil: 5.9.0
2024-02-19 13:12:35,815:INFO:          markupsafe: 2.1.3
2024-02-19 13:12:35,815:INFO:             pickle5: Not installed
2024-02-19 13:12:35,815:INFO:         cloudpickle: 2.2.1
2024-02-19 13:12:35,815:INFO:         deprecation: 2.1.0
2024-02-19 13:12:35,815:INFO:              xxhash: 2.0.2
2024-02-19 13:12:35,815:INFO:           wurlitzer: Not installed
2024-02-19 13:12:35,815:INFO:PyCaret optional dependencies:
2024-02-19 13:12:35,815:INFO:                shap: Not installed
2024-02-19 13:12:35,815:INFO:           interpret: Not installed
2024-02-19 13:12:35,815:INFO:                umap: Not installed
2024-02-19 13:12:35,815:INFO:     ydata_profiling: Not installed
2024-02-19 13:12:35,815:INFO:  explainerdashboard: Not installed
2024-02-19 13:12:35,815:INFO:             autoviz: Not installed
2024-02-19 13:12:35,815:INFO:           fairlearn: Not installed
2024-02-19 13:12:35,815:INFO:          deepchecks: Not installed
2024-02-19 13:12:35,815:INFO:             xgboost: Not installed
2024-02-19 13:12:35,815:INFO:            catboost: Not installed
2024-02-19 13:12:35,815:INFO:              kmodes: Not installed
2024-02-19 13:12:35,815:INFO:             mlxtend: Not installed
2024-02-19 13:12:35,815:INFO:       statsforecast: Not installed
2024-02-19 13:12:35,815:INFO:        tune_sklearn: Not installed
2024-02-19 13:12:35,815:INFO:                 ray: Not installed
2024-02-19 13:12:35,815:INFO:            hyperopt: Not installed
2024-02-19 13:12:35,815:INFO:              optuna: Not installed
2024-02-19 13:12:35,815:INFO:               skopt: Not installed
2024-02-19 13:12:35,815:INFO:              mlflow: Not installed
2024-02-19 13:12:35,815:INFO:              gradio: Not installed
2024-02-19 13:12:35,815:INFO:             fastapi: Not installed
2024-02-19 13:12:35,815:INFO:             uvicorn: Not installed
2024-02-19 13:12:35,815:INFO:              m2cgen: Not installed
2024-02-19 13:12:35,815:INFO:           evidently: Not installed
2024-02-19 13:12:35,815:INFO:               fugue: Not installed
2024-02-19 13:12:35,815:INFO:           streamlit: Not installed
2024-02-19 13:12:35,815:INFO:             prophet: Not installed
2024-02-19 13:12:35,815:INFO:None
2024-02-19 13:12:35,815:INFO:Set up data.
2024-02-19 13:12:35,823:INFO:Set up folding strategy.
2024-02-19 13:12:35,823:INFO:Set up train/test split.
2024-02-19 13:12:35,834:INFO:Set up index.
2024-02-19 13:12:35,834:INFO:Assigning column types.
2024-02-19 13:12:35,839:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-19 13:12:35,896:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-19 13:12:35,904:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-19 13:12:35,944:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 13:12:35,944:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 13:12:36,000:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-19 13:12:36,000:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-19 13:12:36,040:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 13:12:36,040:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 13:12:36,040:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-19 13:12:36,113:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-19 13:12:36,161:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 13:12:36,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 13:12:36,209:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-19 13:12:36,241:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 13:12:36,241:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 13:12:36,241:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-19 13:12:36,346:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 13:12:36,346:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 13:12:36,418:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 13:12:36,418:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 13:12:36,418:INFO:Preparing preprocessing pipeline...
2024-02-19 13:12:36,426:INFO:Set up simple imputation.
2024-02-19 13:12:36,474:INFO:Finished creating preprocessing pipeline.
2024-02-19 13:12:36,474:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\santh\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-19 13:12:36,474:INFO:Creating final display dataframe.
2024-02-19 13:12:36,627:INFO:Setup _display_container:                     Description             Value
0                    Session id              5189
1                        Target             Churn
2                   Target type            Binary
3           Original data shape         (7043, 8)
4        Transformed data shape         (7043, 8)
5   Transformed train set shape         (4930, 8)
6    Transformed test set shape         (2113, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              fc9f
2024-02-19 13:12:36,724:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 13:12:36,732:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 13:12:36,821:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 13:12:36,821:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 13:12:36,821:INFO:setup() successfully completed in 1.02s...............
2024-02-19 13:12:37,383:INFO:Initializing compare_models()
2024-02-19 13:12:37,383:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-02-19 13:12:37,383:INFO:Checking exceptions
2024-02-19 13:12:37,400:INFO:Preparing display monitor
2024-02-19 13:12:37,448:INFO:Initializing Logistic Regression
2024-02-19 13:12:37,448:INFO:Total runtime is 0.0 minutes
2024-02-19 13:12:37,456:INFO:SubProcess create_model() called ==================================
2024-02-19 13:12:37,456:INFO:Initializing create_model()
2024-02-19 13:12:37,456:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057C45C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 13:12:37,456:INFO:Checking exceptions
2024-02-19 13:12:37,456:INFO:Importing libraries
2024-02-19 13:12:37,456:INFO:Copying training dataset
2024-02-19 13:12:37,465:INFO:Defining folds
2024-02-19 13:12:37,465:INFO:Declaring metric variables
2024-02-19 13:12:37,465:INFO:Importing untrained model
2024-02-19 13:12:37,472:INFO:Logistic Regression Imported successfully
2024-02-19 13:12:37,488:INFO:Starting cross validation
2024-02-19 13:12:37,488:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 13:12:46,369:INFO:Calculating mean and std
2024-02-19 13:12:46,369:INFO:Creating metrics dataframe
2024-02-19 13:12:46,369:INFO:Uploading results into container
2024-02-19 13:12:46,369:INFO:Uploading model into container now
2024-02-19 13:12:46,369:INFO:_master_model_container: 1
2024-02-19 13:12:46,369:INFO:_display_container: 2
2024-02-19 13:12:46,377:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5189, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-19 13:12:46,377:INFO:create_model() successfully completed......................................
2024-02-19 13:12:46,481:INFO:SubProcess create_model() end ==================================
2024-02-19 13:12:46,481:INFO:Creating metrics dataframe
2024-02-19 13:12:46,505:INFO:Initializing K Neighbors Classifier
2024-02-19 13:12:46,505:INFO:Total runtime is 0.15094995896021526 minutes
2024-02-19 13:12:46,522:INFO:SubProcess create_model() called ==================================
2024-02-19 13:12:46,522:INFO:Initializing create_model()
2024-02-19 13:12:46,522:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057C45C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 13:12:46,522:INFO:Checking exceptions
2024-02-19 13:12:46,522:INFO:Importing libraries
2024-02-19 13:12:46,522:INFO:Copying training dataset
2024-02-19 13:12:46,538:INFO:Defining folds
2024-02-19 13:12:46,538:INFO:Declaring metric variables
2024-02-19 13:12:46,546:INFO:Importing untrained model
2024-02-19 13:12:46,554:INFO:K Neighbors Classifier Imported successfully
2024-02-19 13:12:46,570:INFO:Starting cross validation
2024-02-19 13:12:46,570:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 13:12:46,782:INFO:Calculating mean and std
2024-02-19 13:12:46,782:INFO:Creating metrics dataframe
2024-02-19 13:12:46,789:INFO:Uploading results into container
2024-02-19 13:12:46,789:INFO:Uploading model into container now
2024-02-19 13:12:46,797:INFO:_master_model_container: 2
2024-02-19 13:12:46,799:INFO:_display_container: 2
2024-02-19 13:12:46,799:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-19 13:12:46,799:INFO:create_model() successfully completed......................................
2024-02-19 13:12:46,925:INFO:SubProcess create_model() end ==================================
2024-02-19 13:12:46,925:INFO:Creating metrics dataframe
2024-02-19 13:12:46,933:INFO:Initializing Naive Bayes
2024-02-19 13:12:46,933:INFO:Total runtime is 0.15807270208994548 minutes
2024-02-19 13:12:46,942:INFO:SubProcess create_model() called ==================================
2024-02-19 13:12:46,942:INFO:Initializing create_model()
2024-02-19 13:12:46,942:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057C45C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 13:12:46,942:INFO:Checking exceptions
2024-02-19 13:12:46,942:INFO:Importing libraries
2024-02-19 13:12:46,942:INFO:Copying training dataset
2024-02-19 13:12:46,957:INFO:Defining folds
2024-02-19 13:12:46,957:INFO:Declaring metric variables
2024-02-19 13:12:46,965:INFO:Importing untrained model
2024-02-19 13:12:46,973:INFO:Naive Bayes Imported successfully
2024-02-19 13:12:46,989:INFO:Starting cross validation
2024-02-19 13:12:46,989:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 13:12:47,094:INFO:Calculating mean and std
2024-02-19 13:12:47,094:INFO:Creating metrics dataframe
2024-02-19 13:12:47,094:INFO:Uploading results into container
2024-02-19 13:12:47,094:INFO:Uploading model into container now
2024-02-19 13:12:47,102:INFO:_master_model_container: 3
2024-02-19 13:12:47,102:INFO:_display_container: 2
2024-02-19 13:12:47,102:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-02-19 13:12:47,102:INFO:create_model() successfully completed......................................
2024-02-19 13:12:47,199:INFO:SubProcess create_model() end ==================================
2024-02-19 13:12:47,199:INFO:Creating metrics dataframe
2024-02-19 13:12:47,215:INFO:Initializing Decision Tree Classifier
2024-02-19 13:12:47,215:INFO:Total runtime is 0.16277751525243123 minutes
2024-02-19 13:12:47,223:INFO:SubProcess create_model() called ==================================
2024-02-19 13:12:47,223:INFO:Initializing create_model()
2024-02-19 13:12:47,223:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057C45C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 13:12:47,223:INFO:Checking exceptions
2024-02-19 13:12:47,223:INFO:Importing libraries
2024-02-19 13:12:47,223:INFO:Copying training dataset
2024-02-19 13:12:47,231:INFO:Defining folds
2024-02-19 13:12:47,231:INFO:Declaring metric variables
2024-02-19 13:12:47,231:INFO:Importing untrained model
2024-02-19 13:12:47,243:INFO:Decision Tree Classifier Imported successfully
2024-02-19 13:12:47,255:INFO:Starting cross validation
2024-02-19 13:12:47,255:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 13:12:47,400:INFO:Calculating mean and std
2024-02-19 13:12:47,400:INFO:Creating metrics dataframe
2024-02-19 13:12:47,408:INFO:Uploading results into container
2024-02-19 13:12:47,408:INFO:Uploading model into container now
2024-02-19 13:12:47,408:INFO:_master_model_container: 4
2024-02-19 13:12:47,408:INFO:_display_container: 2
2024-02-19 13:12:47,408:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5189, splitter='best')
2024-02-19 13:12:47,408:INFO:create_model() successfully completed......................................
2024-02-19 13:12:47,498:INFO:SubProcess create_model() end ==================================
2024-02-19 13:12:47,498:INFO:Creating metrics dataframe
2024-02-19 13:12:47,521:INFO:Initializing SVM - Linear Kernel
2024-02-19 13:12:47,521:INFO:Total runtime is 0.1678694486618042 minutes
2024-02-19 13:12:47,521:INFO:SubProcess create_model() called ==================================
2024-02-19 13:12:47,521:INFO:Initializing create_model()
2024-02-19 13:12:47,521:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057C45C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 13:12:47,521:INFO:Checking exceptions
2024-02-19 13:12:47,521:INFO:Importing libraries
2024-02-19 13:12:47,521:INFO:Copying training dataset
2024-02-19 13:12:47,529:INFO:Defining folds
2024-02-19 13:12:47,529:INFO:Declaring metric variables
2024-02-19 13:12:47,537:INFO:Importing untrained model
2024-02-19 13:12:47,545:INFO:SVM - Linear Kernel Imported successfully
2024-02-19 13:12:47,561:INFO:Starting cross validation
2024-02-19 13:12:47,561:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 13:12:47,625:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 13:12:47,644:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 13:12:47,644:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 13:12:47,644:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 13:12:47,657:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 13:12:47,665:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 13:12:47,681:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 13:12:47,689:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 13:12:47,698:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 13:12:47,706:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 13:12:47,715:INFO:Calculating mean and std
2024-02-19 13:12:47,715:INFO:Creating metrics dataframe
2024-02-19 13:12:47,715:INFO:Uploading results into container
2024-02-19 13:12:47,715:INFO:Uploading model into container now
2024-02-19 13:12:47,715:INFO:_master_model_container: 5
2024-02-19 13:12:47,715:INFO:_display_container: 2
2024-02-19 13:12:47,722:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5189, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-02-19 13:12:47,722:INFO:create_model() successfully completed......................................
2024-02-19 13:12:47,820:INFO:SubProcess create_model() end ==================================
2024-02-19 13:12:47,820:INFO:Creating metrics dataframe
2024-02-19 13:12:47,836:INFO:Initializing Ridge Classifier
2024-02-19 13:12:47,836:INFO:Total runtime is 0.17311836083730062 minutes
2024-02-19 13:12:47,836:INFO:SubProcess create_model() called ==================================
2024-02-19 13:12:47,836:INFO:Initializing create_model()
2024-02-19 13:12:47,844:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057C45C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 13:12:47,844:INFO:Checking exceptions
2024-02-19 13:12:47,844:INFO:Importing libraries
2024-02-19 13:12:47,844:INFO:Copying training dataset
2024-02-19 13:12:47,852:INFO:Defining folds
2024-02-19 13:12:47,852:INFO:Declaring metric variables
2024-02-19 13:12:47,852:INFO:Importing untrained model
2024-02-19 13:12:47,860:INFO:Ridge Classifier Imported successfully
2024-02-19 13:12:47,876:INFO:Starting cross validation
2024-02-19 13:12:47,876:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 13:12:47,908:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.51727e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 13:12:47,917:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.49657e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 13:12:47,924:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 13:12:47,924:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.42094e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 13:12:47,924:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.51137e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 13:12:47,931:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 13:12:47,932:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.48649e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 13:12:47,932:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.4873e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 13:12:47,932:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 13:12:47,932:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 13:12:47,941:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.463e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 13:12:47,945:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 13:12:47,945:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 13:12:47,949:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 13:12:47,957:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.44925e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 13:12:47,957:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.52756e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 13:12:47,965:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 13:12:47,965:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.45707e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 13:12:47,965:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 13:12:47,973:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 13:12:47,981:INFO:Calculating mean and std
2024-02-19 13:12:47,981:INFO:Creating metrics dataframe
2024-02-19 13:12:47,981:INFO:Uploading results into container
2024-02-19 13:12:47,981:INFO:Uploading model into container now
2024-02-19 13:12:47,989:INFO:_master_model_container: 6
2024-02-19 13:12:47,989:INFO:_display_container: 2
2024-02-19 13:12:47,989:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5189, solver='auto',
                tol=0.0001)
2024-02-19 13:12:47,989:INFO:create_model() successfully completed......................................
2024-02-19 13:12:48,095:INFO:SubProcess create_model() end ==================================
2024-02-19 13:12:48,095:INFO:Creating metrics dataframe
2024-02-19 13:12:48,111:INFO:Initializing Random Forest Classifier
2024-02-19 13:12:48,111:INFO:Total runtime is 0.17770213286081948 minutes
2024-02-19 13:12:48,119:INFO:SubProcess create_model() called ==================================
2024-02-19 13:12:48,119:INFO:Initializing create_model()
2024-02-19 13:12:48,119:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057C45C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 13:12:48,119:INFO:Checking exceptions
2024-02-19 13:12:48,119:INFO:Importing libraries
2024-02-19 13:12:48,119:INFO:Copying training dataset
2024-02-19 13:12:48,127:INFO:Defining folds
2024-02-19 13:12:48,127:INFO:Declaring metric variables
2024-02-19 13:12:48,135:INFO:Importing untrained model
2024-02-19 13:12:48,135:INFO:Random Forest Classifier Imported successfully
2024-02-19 13:12:48,151:INFO:Starting cross validation
2024-02-19 13:12:48,151:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 13:12:49,805:INFO:Calculating mean and std
2024-02-19 13:12:49,813:INFO:Creating metrics dataframe
2024-02-19 13:12:49,815:INFO:Uploading results into container
2024-02-19 13:12:49,822:INFO:Uploading model into container now
2024-02-19 13:12:49,822:INFO:_master_model_container: 7
2024-02-19 13:12:49,822:INFO:_display_container: 2
2024-02-19 13:12:49,822:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5189, verbose=0, warm_start=False)
2024-02-19 13:12:49,822:INFO:create_model() successfully completed......................................
2024-02-19 13:12:49,926:INFO:SubProcess create_model() end ==================================
2024-02-19 13:12:49,926:INFO:Creating metrics dataframe
2024-02-19 13:12:49,942:INFO:Initializing Quadratic Discriminant Analysis
2024-02-19 13:12:49,942:INFO:Total runtime is 0.2082323670387268 minutes
2024-02-19 13:12:49,951:INFO:SubProcess create_model() called ==================================
2024-02-19 13:12:49,951:INFO:Initializing create_model()
2024-02-19 13:12:49,951:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057C45C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 13:12:49,951:INFO:Checking exceptions
2024-02-19 13:12:49,951:INFO:Importing libraries
2024-02-19 13:12:49,951:INFO:Copying training dataset
2024-02-19 13:12:49,959:INFO:Defining folds
2024-02-19 13:12:49,959:INFO:Declaring metric variables
2024-02-19 13:12:49,967:INFO:Importing untrained model
2024-02-19 13:12:49,975:INFO:Quadratic Discriminant Analysis Imported successfully
2024-02-19 13:12:49,991:INFO:Starting cross validation
2024-02-19 13:12:49,991:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 13:12:50,127:INFO:Calculating mean and std
2024-02-19 13:12:50,127:INFO:Creating metrics dataframe
2024-02-19 13:12:50,127:INFO:Uploading results into container
2024-02-19 13:12:50,135:INFO:Uploading model into container now
2024-02-19 13:12:50,135:INFO:_master_model_container: 8
2024-02-19 13:12:50,135:INFO:_display_container: 2
2024-02-19 13:12:50,135:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-02-19 13:12:50,135:INFO:create_model() successfully completed......................................
2024-02-19 13:12:50,239:INFO:SubProcess create_model() end ==================================
2024-02-19 13:12:50,239:INFO:Creating metrics dataframe
2024-02-19 13:12:50,264:INFO:Initializing Ada Boost Classifier
2024-02-19 13:12:50,264:INFO:Total runtime is 0.21359829902648925 minutes
2024-02-19 13:12:50,272:INFO:SubProcess create_model() called ==================================
2024-02-19 13:12:50,281:INFO:Initializing create_model()
2024-02-19 13:12:50,281:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057C45C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 13:12:50,281:INFO:Checking exceptions
2024-02-19 13:12:50,281:INFO:Importing libraries
2024-02-19 13:12:50,281:INFO:Copying training dataset
2024-02-19 13:12:50,289:INFO:Defining folds
2024-02-19 13:12:50,289:INFO:Declaring metric variables
2024-02-19 13:12:50,298:INFO:Importing untrained model
2024-02-19 13:12:50,305:INFO:Ada Boost Classifier Imported successfully
2024-02-19 13:12:50,314:INFO:Starting cross validation
2024-02-19 13:12:50,314:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 13:12:51,014:INFO:Calculating mean and std
2024-02-19 13:12:51,014:INFO:Creating metrics dataframe
2024-02-19 13:12:51,014:INFO:Uploading results into container
2024-02-19 13:12:51,014:INFO:Uploading model into container now
2024-02-19 13:12:51,022:INFO:_master_model_container: 9
2024-02-19 13:12:51,022:INFO:_display_container: 2
2024-02-19 13:12:51,022:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=5189)
2024-02-19 13:12:51,022:INFO:create_model() successfully completed......................................
2024-02-19 13:12:51,126:INFO:SubProcess create_model() end ==================================
2024-02-19 13:12:51,126:INFO:Creating metrics dataframe
2024-02-19 13:12:51,148:INFO:Initializing Gradient Boosting Classifier
2024-02-19 13:12:51,148:INFO:Total runtime is 0.2283259590466817 minutes
2024-02-19 13:12:51,151:INFO:SubProcess create_model() called ==================================
2024-02-19 13:12:51,151:INFO:Initializing create_model()
2024-02-19 13:12:51,151:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057C45C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 13:12:51,151:INFO:Checking exceptions
2024-02-19 13:12:51,151:INFO:Importing libraries
2024-02-19 13:12:51,151:INFO:Copying training dataset
2024-02-19 13:12:51,159:INFO:Defining folds
2024-02-19 13:12:51,159:INFO:Declaring metric variables
2024-02-19 13:12:51,167:INFO:Importing untrained model
2024-02-19 13:12:51,175:INFO:Gradient Boosting Classifier Imported successfully
2024-02-19 13:12:51,183:INFO:Starting cross validation
2024-02-19 13:12:51,191:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 13:12:53,138:INFO:Calculating mean and std
2024-02-19 13:12:53,138:INFO:Creating metrics dataframe
2024-02-19 13:12:53,146:INFO:Uploading results into container
2024-02-19 13:12:53,150:INFO:Uploading model into container now
2024-02-19 13:12:53,150:INFO:_master_model_container: 10
2024-02-19 13:12:53,150:INFO:_display_container: 2
2024-02-19 13:12:53,150:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5189, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-19 13:12:53,150:INFO:create_model() successfully completed......................................
2024-02-19 13:12:53,251:INFO:SubProcess create_model() end ==================================
2024-02-19 13:12:53,251:INFO:Creating metrics dataframe
2024-02-19 13:12:53,267:INFO:Initializing Linear Discriminant Analysis
2024-02-19 13:12:53,267:INFO:Total runtime is 0.2636384844779968 minutes
2024-02-19 13:12:53,275:INFO:SubProcess create_model() called ==================================
2024-02-19 13:12:53,275:INFO:Initializing create_model()
2024-02-19 13:12:53,275:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057C45C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 13:12:53,275:INFO:Checking exceptions
2024-02-19 13:12:53,275:INFO:Importing libraries
2024-02-19 13:12:53,275:INFO:Copying training dataset
2024-02-19 13:12:53,283:INFO:Defining folds
2024-02-19 13:12:53,283:INFO:Declaring metric variables
2024-02-19 13:12:53,291:INFO:Importing untrained model
2024-02-19 13:12:53,299:INFO:Linear Discriminant Analysis Imported successfully
2024-02-19 13:12:53,315:INFO:Starting cross validation
2024-02-19 13:12:53,315:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 13:12:53,436:INFO:Calculating mean and std
2024-02-19 13:12:53,436:INFO:Creating metrics dataframe
2024-02-19 13:12:53,444:INFO:Uploading results into container
2024-02-19 13:12:53,444:INFO:Uploading model into container now
2024-02-19 13:12:53,444:INFO:_master_model_container: 11
2024-02-19 13:12:53,444:INFO:_display_container: 2
2024-02-19 13:12:53,444:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-02-19 13:12:53,444:INFO:create_model() successfully completed......................................
2024-02-19 13:12:53,581:INFO:SubProcess create_model() end ==================================
2024-02-19 13:12:53,581:INFO:Creating metrics dataframe
2024-02-19 13:12:53,616:INFO:Initializing Extra Trees Classifier
2024-02-19 13:12:53,616:INFO:Total runtime is 0.2694618542989095 minutes
2024-02-19 13:12:53,622:INFO:SubProcess create_model() called ==================================
2024-02-19 13:12:53,622:INFO:Initializing create_model()
2024-02-19 13:12:53,622:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057C45C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 13:12:53,622:INFO:Checking exceptions
2024-02-19 13:12:53,622:INFO:Importing libraries
2024-02-19 13:12:53,622:INFO:Copying training dataset
2024-02-19 13:12:53,631:INFO:Defining folds
2024-02-19 13:12:53,631:INFO:Declaring metric variables
2024-02-19 13:12:53,639:INFO:Importing untrained model
2024-02-19 13:12:53,642:INFO:Extra Trees Classifier Imported successfully
2024-02-19 13:12:53,664:INFO:Starting cross validation
2024-02-19 13:12:53,664:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 13:12:54,939:INFO:Calculating mean and std
2024-02-19 13:12:54,939:INFO:Creating metrics dataframe
2024-02-19 13:12:54,948:INFO:Uploading results into container
2024-02-19 13:12:54,948:INFO:Uploading model into container now
2024-02-19 13:12:54,951:INFO:_master_model_container: 12
2024-02-19 13:12:54,951:INFO:_display_container: 2
2024-02-19 13:12:54,953:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5189, verbose=0, warm_start=False)
2024-02-19 13:12:54,953:INFO:create_model() successfully completed......................................
2024-02-19 13:12:55,061:INFO:SubProcess create_model() end ==================================
2024-02-19 13:12:55,061:INFO:Creating metrics dataframe
2024-02-19 13:12:55,077:INFO:Initializing Light Gradient Boosting Machine
2024-02-19 13:12:55,077:INFO:Total runtime is 0.29380196730295816 minutes
2024-02-19 13:12:55,085:INFO:SubProcess create_model() called ==================================
2024-02-19 13:12:55,085:INFO:Initializing create_model()
2024-02-19 13:12:55,085:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057C45C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 13:12:55,085:INFO:Checking exceptions
2024-02-19 13:12:55,085:INFO:Importing libraries
2024-02-19 13:12:55,085:INFO:Copying training dataset
2024-02-19 13:12:55,093:INFO:Defining folds
2024-02-19 13:12:55,093:INFO:Declaring metric variables
2024-02-19 13:12:55,101:INFO:Importing untrained model
2024-02-19 13:12:55,109:INFO:Light Gradient Boosting Machine Imported successfully
2024-02-19 13:12:55,117:INFO:Starting cross validation
2024-02-19 13:12:55,125:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 13:12:56,446:INFO:Calculating mean and std
2024-02-19 13:12:56,450:INFO:Creating metrics dataframe
2024-02-19 13:12:56,454:INFO:Uploading results into container
2024-02-19 13:12:56,454:INFO:Uploading model into container now
2024-02-19 13:12:56,454:INFO:_master_model_container: 13
2024-02-19 13:12:56,454:INFO:_display_container: 2
2024-02-19 13:12:56,454:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5189, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-02-19 13:12:56,454:INFO:create_model() successfully completed......................................
2024-02-19 13:12:56,583:INFO:SubProcess create_model() end ==================================
2024-02-19 13:12:56,583:INFO:Creating metrics dataframe
2024-02-19 13:12:56,599:INFO:Initializing Dummy Classifier
2024-02-19 13:12:56,599:INFO:Total runtime is 0.3191793878873189 minutes
2024-02-19 13:12:56,607:INFO:SubProcess create_model() called ==================================
2024-02-19 13:12:56,607:INFO:Initializing create_model()
2024-02-19 13:12:56,607:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A057C45C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 13:12:56,607:INFO:Checking exceptions
2024-02-19 13:12:56,607:INFO:Importing libraries
2024-02-19 13:12:56,607:INFO:Copying training dataset
2024-02-19 13:12:56,615:INFO:Defining folds
2024-02-19 13:12:56,615:INFO:Declaring metric variables
2024-02-19 13:12:56,623:INFO:Importing untrained model
2024-02-19 13:12:56,631:INFO:Dummy Classifier Imported successfully
2024-02-19 13:12:56,648:INFO:Starting cross validation
2024-02-19 13:12:56,648:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 13:12:56,705:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 13:12:56,714:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 13:12:56,714:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 13:12:56,729:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 13:12:56,729:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 13:12:56,737:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 13:12:56,737:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 13:12:56,745:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 13:12:56,753:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 13:12:56,753:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 13:12:56,761:INFO:Calculating mean and std
2024-02-19 13:12:56,761:INFO:Creating metrics dataframe
2024-02-19 13:12:56,769:INFO:Uploading results into container
2024-02-19 13:12:56,769:INFO:Uploading model into container now
2024-02-19 13:12:56,769:INFO:_master_model_container: 14
2024-02-19 13:12:56,769:INFO:_display_container: 2
2024-02-19 13:12:56,769:INFO:DummyClassifier(constant=None, random_state=5189, strategy='prior')
2024-02-19 13:12:56,769:INFO:create_model() successfully completed......................................
2024-02-19 13:12:56,874:INFO:SubProcess create_model() end ==================================
2024-02-19 13:12:56,874:INFO:Creating metrics dataframe
2024-02-19 13:12:56,914:INFO:Initializing create_model()
2024-02-19 13:12:56,914:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5189, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 13:12:56,914:INFO:Checking exceptions
2024-02-19 13:12:56,914:INFO:Importing libraries
2024-02-19 13:12:56,914:INFO:Copying training dataset
2024-02-19 13:12:56,931:INFO:Defining folds
2024-02-19 13:12:56,931:INFO:Declaring metric variables
2024-02-19 13:12:56,931:INFO:Importing untrained model
2024-02-19 13:12:56,931:INFO:Declaring custom model
2024-02-19 13:12:56,931:INFO:Gradient Boosting Classifier Imported successfully
2024-02-19 13:12:56,931:INFO:Cross validation set to False
2024-02-19 13:12:56,931:INFO:Fitting Model
2024-02-19 13:12:57,809:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5189, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-19 13:12:57,809:INFO:create_model() successfully completed......................................
2024-02-19 13:12:57,939:INFO:_master_model_container: 14
2024-02-19 13:12:57,939:INFO:_display_container: 2
2024-02-19 13:12:57,939:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5189, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-19 13:12:57,939:INFO:compare_models() successfully completed......................................
2024-02-19 13:13:03,630:INFO:Initializing evaluate_model()
2024-02-19 13:13:03,631:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5189, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-02-19 13:13:03,648:INFO:Initializing plot_model()
2024-02-19 13:13:03,648:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5189, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, system=True)
2024-02-19 13:13:03,648:INFO:Checking exceptions
2024-02-19 13:13:03,655:INFO:Preloading libraries
2024-02-19 13:13:03,671:INFO:Copying training dataset
2024-02-19 13:13:03,671:INFO:Plot type: pipeline
2024-02-19 13:13:03,752:INFO:Visual Rendered Successfully
2024-02-19 13:13:03,905:INFO:plot_model() successfully completed......................................
2024-02-19 13:13:04,622:INFO:Initializing plot_model()
2024-02-19 13:13:04,622:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5189, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, system=True)
2024-02-19 13:13:04,622:INFO:Checking exceptions
2024-02-19 13:13:04,638:INFO:Preloading libraries
2024-02-19 13:13:04,662:INFO:Copying training dataset
2024-02-19 13:13:04,662:INFO:Plot type: auc
2024-02-19 13:13:04,798:INFO:Fitting Model
2024-02-19 13:13:04,798:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2024-02-19 13:13:04,798:INFO:Scoring test/hold-out set
2024-02-19 13:13:05,006:INFO:Visual Rendered Successfully
2024-02-19 13:13:05,111:INFO:plot_model() successfully completed......................................
2024-02-19 13:13:06,644:INFO:Initializing save_model()
2024-02-19 13:13:06,652:INFO:save_model(model=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5189, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), model_name=pycaret_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\santh\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-02-19 13:13:06,652:INFO:Adding model into prep_pipe
2024-02-19 13:13:06,668:INFO:pycaret_model.pkl saved in current working directory
2024-02-19 13:13:06,675:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2024-02-19 13:13:06,675:INFO:save_model() successfully completed......................................
2024-02-19 13:13:08,495:INFO:Initializing load_model()
2024-02-19 13:13:08,495:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:13:09,783:INFO:Initializing predict_model()
2024-02-19 13:13:09,783:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05B5DA230>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05A36A320>)
2024-02-19 13:13:09,783:INFO:Checking exceptions
2024-02-19 13:13:09,783:INFO:Preloading libraries
2024-02-19 13:13:09,783:INFO:Set up data.
2024-02-19 13:13:09,791:INFO:Set up index.
2024-02-19 13:13:13,241:INFO:Initializing load_model()
2024-02-19 13:13:13,241:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:13:13,273:INFO:Initializing predict_model()
2024-02-19 13:13:13,273:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05B5C2FB0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05BFE5000>)
2024-02-19 13:13:13,273:INFO:Checking exceptions
2024-02-19 13:13:13,273:INFO:Preloading libraries
2024-02-19 13:13:13,273:INFO:Set up data.
2024-02-19 13:13:13,281:INFO:Set up index.
2024-02-19 13:13:13,451:INFO:Initializing load_model()
2024-02-19 13:13:13,451:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:13:13,476:INFO:Initializing predict_model()
2024-02-19 13:13:13,476:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05A3FD000>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05A369F30>)
2024-02-19 13:13:13,476:INFO:Checking exceptions
2024-02-19 13:13:13,476:INFO:Preloading libraries
2024-02-19 13:13:13,476:INFO:Set up data.
2024-02-19 13:13:13,484:INFO:Set up index.
2024-02-19 13:13:13,686:INFO:Initializing load_model()
2024-02-19 13:13:13,686:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:13:13,694:INFO:Initializing predict_model()
2024-02-19 13:13:13,694:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A059FC3FA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05A369F30>)
2024-02-19 13:13:13,694:INFO:Checking exceptions
2024-02-19 13:13:13,702:INFO:Preloading libraries
2024-02-19 13:13:13,702:INFO:Set up data.
2024-02-19 13:13:13,702:INFO:Set up index.
2024-02-19 13:13:16,598:INFO:Initializing load_model()
2024-02-19 13:13:16,598:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:13:16,639:INFO:Initializing predict_model()
2024-02-19 13:13:16,639:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05A3E2050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05A369BD0>)
2024-02-19 13:13:16,639:INFO:Checking exceptions
2024-02-19 13:13:16,639:INFO:Preloading libraries
2024-02-19 13:13:16,639:INFO:Set up data.
2024-02-19 13:13:16,639:INFO:Set up index.
2024-02-19 13:13:18,889:INFO:Initializing load_model()
2024-02-19 13:13:18,889:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:13:18,930:INFO:Initializing predict_model()
2024-02-19 13:13:18,930:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BFFC190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05565F520>)
2024-02-19 13:13:18,930:INFO:Checking exceptions
2024-02-19 13:13:18,930:INFO:Preloading libraries
2024-02-19 13:13:18,930:INFO:Set up data.
2024-02-19 13:13:18,938:INFO:Set up index.
2024-02-19 13:13:21,439:INFO:Initializing load_model()
2024-02-19 13:13:21,439:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:13:21,471:INFO:Initializing predict_model()
2024-02-19 13:13:21,471:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A057D55F30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A055CC30A0>)
2024-02-19 13:13:21,471:INFO:Checking exceptions
2024-02-19 13:13:21,471:INFO:Preloading libraries
2024-02-19 13:13:21,479:INFO:Set up data.
2024-02-19 13:13:21,487:INFO:Set up index.
2024-02-19 13:23:57,537:INFO:Initializing load_model()
2024-02-19 13:23:57,537:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:23:57,577:INFO:Initializing predict_model()
2024-02-19 13:23:57,577:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BD338B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05A369F30>)
2024-02-19 13:23:57,577:INFO:Checking exceptions
2024-02-19 13:23:57,577:INFO:Preloading libraries
2024-02-19 13:23:57,577:INFO:Set up data.
2024-02-19 13:23:57,593:INFO:Set up index.
2024-02-19 13:23:57,967:INFO:Initializing load_model()
2024-02-19 13:23:57,967:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:23:58,000:INFO:Initializing predict_model()
2024-02-19 13:23:58,000:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A055CC89A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05A36A200>)
2024-02-19 13:23:58,000:INFO:Checking exceptions
2024-02-19 13:23:58,000:INFO:Preloading libraries
2024-02-19 13:23:58,000:INFO:Set up data.
2024-02-19 13:23:58,016:INFO:Set up index.
2024-02-19 13:23:58,339:INFO:Initializing load_model()
2024-02-19 13:23:58,347:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:23:58,372:INFO:Initializing predict_model()
2024-02-19 13:23:58,372:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05B9A1CF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05A36A200>)
2024-02-19 13:23:58,372:INFO:Checking exceptions
2024-02-19 13:23:58,372:INFO:Preloading libraries
2024-02-19 13:23:58,372:INFO:Set up data.
2024-02-19 13:23:58,388:INFO:Set up index.
2024-02-19 13:28:07,759:INFO:Initializing load_model()
2024-02-19 13:28:07,759:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:28:07,790:INFO:Initializing predict_model()
2024-02-19 13:28:07,790:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A057ECFDC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05A369CF0>)
2024-02-19 13:28:07,790:INFO:Checking exceptions
2024-02-19 13:28:07,790:INFO:Preloading libraries
2024-02-19 13:28:07,790:INFO:Set up data.
2024-02-19 13:28:07,806:INFO:Set up index.
2024-02-19 13:28:08,095:INFO:Initializing load_model()
2024-02-19 13:28:08,103:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:28:08,127:INFO:Initializing predict_model()
2024-02-19 13:28:08,127:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05B5C2FB0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05A36A050>)
2024-02-19 13:28:08,127:INFO:Checking exceptions
2024-02-19 13:28:08,127:INFO:Preloading libraries
2024-02-19 13:28:08,127:INFO:Set up data.
2024-02-19 13:28:08,143:INFO:Set up index.
2024-02-19 13:28:08,492:INFO:Initializing load_model()
2024-02-19 13:28:08,492:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:28:08,542:INFO:Initializing predict_model()
2024-02-19 13:28:08,542:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A059FC3910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05A36A050>)
2024-02-19 13:28:08,542:INFO:Checking exceptions
2024-02-19 13:28:08,542:INFO:Preloading libraries
2024-02-19 13:28:08,548:INFO:Set up data.
2024-02-19 13:28:08,564:INFO:Set up index.
2024-02-19 13:28:14,810:INFO:Initializing load_model()
2024-02-19 13:28:14,810:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:28:14,855:INFO:Initializing predict_model()
2024-02-19 13:28:14,855:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A057ECC880>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05A36A200>)
2024-02-19 13:28:14,855:INFO:Checking exceptions
2024-02-19 13:28:14,855:INFO:Preloading libraries
2024-02-19 13:28:14,855:INFO:Set up data.
2024-02-19 13:28:14,863:INFO:Set up index.
2024-02-19 13:28:16,473:INFO:Initializing load_model()
2024-02-19 13:28:16,473:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:28:16,517:INFO:Initializing predict_model()
2024-02-19 13:28:16,517:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05A02F130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05A36A200>)
2024-02-19 13:28:16,517:INFO:Checking exceptions
2024-02-19 13:28:16,517:INFO:Preloading libraries
2024-02-19 13:28:16,517:INFO:Set up data.
2024-02-19 13:28:16,526:INFO:Set up index.
2024-02-19 13:28:17,842:INFO:Initializing load_model()
2024-02-19 13:28:17,842:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:28:17,891:INFO:Initializing predict_model()
2024-02-19 13:28:17,891:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05A50FD60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A057F8A320>)
2024-02-19 13:28:17,891:INFO:Checking exceptions
2024-02-19 13:28:17,891:INFO:Preloading libraries
2024-02-19 13:28:17,891:INFO:Set up data.
2024-02-19 13:28:17,891:INFO:Set up index.
2024-02-19 13:28:59,494:INFO:Initializing load_model()
2024-02-19 13:28:59,494:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:28:59,529:INFO:Initializing predict_model()
2024-02-19 13:28:59,529:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A057D55900>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A057A70F70>)
2024-02-19 13:28:59,529:INFO:Checking exceptions
2024-02-19 13:28:59,529:INFO:Preloading libraries
2024-02-19 13:28:59,529:INFO:Set up data.
2024-02-19 13:28:59,537:INFO:Set up index.
2024-02-19 13:28:59,780:INFO:Initializing load_model()
2024-02-19 13:28:59,780:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:28:59,828:INFO:Initializing predict_model()
2024-02-19 13:28:59,828:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05B9B0700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A057A70F70>)
2024-02-19 13:28:59,828:INFO:Checking exceptions
2024-02-19 13:28:59,828:INFO:Preloading libraries
2024-02-19 13:28:59,828:INFO:Set up data.
2024-02-19 13:28:59,836:INFO:Set up index.
2024-02-19 13:29:00,071:INFO:Initializing load_model()
2024-02-19 13:29:00,071:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:29:00,103:INFO:Initializing predict_model()
2024-02-19 13:29:00,111:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BA3B820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A057A70F70>)
2024-02-19 13:29:00,111:INFO:Checking exceptions
2024-02-19 13:29:00,111:INFO:Preloading libraries
2024-02-19 13:29:00,111:INFO:Set up data.
2024-02-19 13:29:00,119:INFO:Set up index.
2024-02-19 13:37:33,610:INFO:Initializing load_model()
2024-02-19 13:37:33,610:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:37:33,651:INFO:Initializing predict_model()
2024-02-19 13:37:33,651:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BF6C430>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A031A78B80>)
2024-02-19 13:37:33,651:INFO:Checking exceptions
2024-02-19 13:37:33,651:INFO:Preloading libraries
2024-02-19 13:37:33,651:INFO:Set up data.
2024-02-19 13:37:33,668:INFO:Set up index.
2024-02-19 13:37:34,049:INFO:Initializing load_model()
2024-02-19 13:37:34,049:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:37:34,099:INFO:Initializing predict_model()
2024-02-19 13:37:34,099:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A057ECC880>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A031A78B80>)
2024-02-19 13:37:34,099:INFO:Checking exceptions
2024-02-19 13:37:34,099:INFO:Preloading libraries
2024-02-19 13:37:34,099:INFO:Set up data.
2024-02-19 13:37:34,123:INFO:Set up index.
2024-02-19 13:37:34,447:INFO:Initializing load_model()
2024-02-19 13:37:34,447:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:37:34,496:INFO:Initializing predict_model()
2024-02-19 13:37:34,504:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A057ECFB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A031A78B80>)
2024-02-19 13:37:34,504:INFO:Checking exceptions
2024-02-19 13:37:34,504:INFO:Preloading libraries
2024-02-19 13:37:34,504:INFO:Set up data.
2024-02-19 13:37:34,521:INFO:Set up index.
2024-02-19 13:37:52,413:INFO:Initializing load_model()
2024-02-19 13:37:52,413:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:37:52,453:INFO:Initializing predict_model()
2024-02-19 13:37:52,453:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A055CC89A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05B6EBF40>)
2024-02-19 13:37:52,453:INFO:Checking exceptions
2024-02-19 13:37:52,453:INFO:Preloading libraries
2024-02-19 13:37:52,453:INFO:Set up data.
2024-02-19 13:37:52,469:INFO:Set up index.
2024-02-19 13:37:52,825:INFO:Initializing load_model()
2024-02-19 13:37:52,825:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:37:52,876:INFO:Initializing predict_model()
2024-02-19 13:37:52,876:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A031A62A40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05A36A680>)
2024-02-19 13:37:52,876:INFO:Checking exceptions
2024-02-19 13:37:52,876:INFO:Preloading libraries
2024-02-19 13:37:52,876:INFO:Set up data.
2024-02-19 13:37:52,891:INFO:Set up index.
2024-02-19 13:37:53,238:INFO:Initializing load_model()
2024-02-19 13:37:53,238:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:37:53,278:INFO:Initializing predict_model()
2024-02-19 13:37:53,278:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05A4B4190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A055FF5CF0>)
2024-02-19 13:37:53,278:INFO:Checking exceptions
2024-02-19 13:37:53,278:INFO:Preloading libraries
2024-02-19 13:37:53,278:INFO:Set up data.
2024-02-19 13:37:53,295:INFO:Set up index.
2024-02-19 13:38:01,560:INFO:Initializing load_model()
2024-02-19 13:38:01,560:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:38:01,600:INFO:Initializing predict_model()
2024-02-19 13:38:01,600:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A057BB2D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A057F8A320>)
2024-02-19 13:38:01,600:INFO:Checking exceptions
2024-02-19 13:38:01,600:INFO:Preloading libraries
2024-02-19 13:38:01,600:INFO:Set up data.
2024-02-19 13:38:01,608:INFO:Set up index.
2024-02-19 13:38:02,590:INFO:Initializing load_model()
2024-02-19 13:38:02,590:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:38:02,630:INFO:Initializing predict_model()
2024-02-19 13:38:02,630:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05A02F580>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05A36A0E0>)
2024-02-19 13:38:02,630:INFO:Checking exceptions
2024-02-19 13:38:02,630:INFO:Preloading libraries
2024-02-19 13:38:02,630:INFO:Set up data.
2024-02-19 13:38:02,638:INFO:Set up index.
2024-02-19 13:38:03,492:INFO:Initializing load_model()
2024-02-19 13:38:03,492:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:38:03,540:INFO:Initializing predict_model()
2024-02-19 13:38:03,540:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BD33D60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05A36A170>)
2024-02-19 13:38:03,540:INFO:Checking exceptions
2024-02-19 13:38:03,540:INFO:Preloading libraries
2024-02-19 13:38:03,540:INFO:Set up data.
2024-02-19 13:38:03,548:INFO:Set up index.
2024-02-19 13:38:19,750:INFO:Initializing load_model()
2024-02-19 13:38:19,758:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:38:19,791:INFO:Initializing predict_model()
2024-02-19 13:38:19,791:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05A3E1000>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05A369FC0>)
2024-02-19 13:38:19,791:INFO:Checking exceptions
2024-02-19 13:38:19,791:INFO:Preloading libraries
2024-02-19 13:38:19,791:INFO:Set up data.
2024-02-19 13:38:19,799:INFO:Set up index.
2024-02-19 13:38:20,050:INFO:Initializing load_model()
2024-02-19 13:38:20,050:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:38:20,091:INFO:Initializing predict_model()
2024-02-19 13:38:20,091:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05B9862C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05A369FC0>)
2024-02-19 13:38:20,091:INFO:Checking exceptions
2024-02-19 13:38:20,091:INFO:Preloading libraries
2024-02-19 13:38:20,091:INFO:Set up data.
2024-02-19 13:38:20,100:INFO:Set up index.
2024-02-19 13:38:20,335:INFO:Initializing load_model()
2024-02-19 13:38:20,335:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 13:38:20,375:INFO:Initializing predict_model()
2024-02-19 13:38:20,375:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05A3E1000>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A05A369FC0>)
2024-02-19 13:38:20,383:INFO:Checking exceptions
2024-02-19 13:38:20,383:INFO:Preloading libraries
2024-02-19 13:38:20,383:INFO:Set up data.
2024-02-19 13:38:20,391:INFO:Set up index.
2024-02-19 15:05:58,320:INFO:Initializing plot_model()
2024-02-19 15:05:58,320:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5189, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, system=True)
2024-02-19 15:05:58,320:INFO:Checking exceptions
2024-02-19 15:05:58,346:INFO:Preloading libraries
2024-02-19 15:05:58,369:INFO:Copying training dataset
2024-02-19 15:05:58,369:INFO:Plot type: confusion_matrix
2024-02-19 15:05:58,757:INFO:Fitting Model
2024-02-19 15:05:58,757:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2024-02-19 15:05:58,757:INFO:Scoring test/hold-out set
2024-02-19 15:05:59,145:INFO:Visual Rendered Successfully
2024-02-19 15:05:59,396:INFO:plot_model() successfully completed......................................
2024-02-19 15:27:22,617:INFO:Initializing plot_model()
2024-02-19 15:27:22,618:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5189, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, system=True)
2024-02-19 15:27:22,619:INFO:Checking exceptions
2024-02-19 15:27:22,631:INFO:Preloading libraries
2024-02-19 15:27:22,647:INFO:Copying training dataset
2024-02-19 15:27:22,655:INFO:Plot type: pipeline
2024-02-19 15:27:22,897:INFO:Visual Rendered Successfully
2024-02-19 15:27:23,134:INFO:plot_model() successfully completed......................................
2024-02-19 15:27:28,198:INFO:Initializing plot_model()
2024-02-19 15:27:28,198:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5189, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, system=True)
2024-02-19 15:27:28,198:INFO:Checking exceptions
2024-02-19 15:27:28,208:INFO:Preloading libraries
2024-02-19 15:27:28,230:INFO:Copying training dataset
2024-02-19 15:27:28,230:INFO:Plot type: parameter
2024-02-19 15:27:28,238:INFO:Visual Rendered Successfully
2024-02-19 15:27:28,424:INFO:plot_model() successfully completed......................................
2024-02-19 15:27:37,565:INFO:Initializing plot_model()
2024-02-19 15:27:37,565:INFO:plot_model(plot=pr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5189, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, system=True)
2024-02-19 15:27:37,565:INFO:Checking exceptions
2024-02-19 15:27:37,573:INFO:Preloading libraries
2024-02-19 15:27:37,598:INFO:Copying training dataset
2024-02-19 15:27:37,598:INFO:Plot type: pr
2024-02-19 15:27:37,988:INFO:Fitting Model
2024-02-19 15:27:37,990:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2024-02-19 15:27:37,990:INFO:Scoring test/hold-out set
2024-02-19 15:27:38,547:INFO:Visual Rendered Successfully
2024-02-19 15:27:38,764:INFO:plot_model() successfully completed......................................
2024-02-19 15:27:48,404:INFO:Initializing plot_model()
2024-02-19 15:27:48,404:INFO:plot_model(plot=class_report, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5189, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, system=True)
2024-02-19 15:27:48,404:INFO:Checking exceptions
2024-02-19 15:27:48,422:INFO:Preloading libraries
2024-02-19 15:27:48,445:INFO:Copying training dataset
2024-02-19 15:27:48,445:INFO:Plot type: class_report
2024-02-19 15:27:48,802:INFO:Fitting Model
2024-02-19 15:27:48,802:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2024-02-19 15:27:48,810:INFO:Scoring test/hold-out set
2024-02-19 15:27:49,452:INFO:Visual Rendered Successfully
2024-02-19 15:27:49,671:INFO:plot_model() successfully completed......................................
2024-02-19 15:27:58,479:INFO:Initializing plot_model()
2024-02-19 15:27:58,479:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5189, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, system=True)
2024-02-19 15:27:58,479:INFO:Checking exceptions
2024-02-19 15:27:58,492:INFO:Preloading libraries
2024-02-19 15:27:58,520:INFO:Copying training dataset
2024-02-19 15:27:58,520:INFO:Plot type: feature
2024-02-19 15:27:58,520:WARNING:No coef_ found. Trying feature_importances_
2024-02-19 15:27:59,005:INFO:Visual Rendered Successfully
2024-02-19 15:27:59,234:INFO:plot_model() successfully completed......................................
2024-02-19 16:37:29,020:INFO:Initializing plot_model()
2024-02-19 16:37:29,028:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5189, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, system=True)
2024-02-19 16:37:29,028:INFO:Checking exceptions
2024-02-19 16:37:29,141:INFO:Preloading libraries
2024-02-19 16:37:29,191:INFO:Copying training dataset
2024-02-19 16:37:29,191:INFO:Plot type: confusion_matrix
2024-02-19 16:37:29,711:INFO:Fitting Model
2024-02-19 16:37:29,711:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2024-02-19 16:37:29,717:INFO:Scoring test/hold-out set
2024-02-19 16:37:30,173:INFO:Visual Rendered Successfully
2024-02-19 16:37:30,926:INFO:plot_model() successfully completed......................................
2024-02-19 16:37:37,512:INFO:Initializing plot_model()
2024-02-19 16:37:37,512:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5189, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, system=True)
2024-02-19 16:37:37,512:INFO:Checking exceptions
2024-02-19 16:37:37,530:INFO:Preloading libraries
2024-02-19 16:37:37,553:INFO:Copying training dataset
2024-02-19 16:37:37,553:INFO:Plot type: parameter
2024-02-19 16:37:37,569:INFO:Visual Rendered Successfully
2024-02-19 16:37:37,779:INFO:plot_model() successfully completed......................................
2024-02-19 16:37:40,147:INFO:Initializing plot_model()
2024-02-19 16:37:40,147:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5189, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, system=True)
2024-02-19 16:37:40,147:INFO:Checking exceptions
2024-02-19 16:37:40,155:INFO:Preloading libraries
2024-02-19 16:37:40,171:INFO:Copying training dataset
2024-02-19 16:37:40,171:INFO:Plot type: auc
2024-02-19 16:37:40,517:INFO:Fitting Model
2024-02-19 16:37:40,517:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2024-02-19 16:37:40,517:INFO:Scoring test/hold-out set
2024-02-19 16:37:41,107:INFO:Visual Rendered Successfully
2024-02-19 16:37:41,325:INFO:plot_model() successfully completed......................................
2024-02-19 16:37:41,955:INFO:Initializing plot_model()
2024-02-19 16:37:41,955:INFO:plot_model(plot=manifold, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5189, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, system=True)
2024-02-19 16:37:41,955:INFO:Checking exceptions
2024-02-19 16:37:41,968:INFO:Preloading libraries
2024-02-19 16:37:41,992:INFO:Copying training dataset
2024-02-19 16:37:41,992:INFO:Plot type: manifold
2024-02-19 16:37:42,584:INFO:Fitting & Transforming Model
2024-02-19 16:38:27,737:INFO:Visual Rendered Successfully
2024-02-19 16:38:27,901:INFO:plot_model() successfully completed......................................
2024-02-19 16:38:27,932:INFO:Initializing evaluate_model()
2024-02-19 16:38:27,932:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5189, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-02-19 16:38:27,973:INFO:Initializing plot_model()
2024-02-19 16:38:27,973:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5189, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, system=True)
2024-02-19 16:38:27,973:INFO:Checking exceptions
2024-02-19 16:38:27,981:INFO:Preloading libraries
2024-02-19 16:38:28,005:INFO:Copying training dataset
2024-02-19 16:38:28,005:INFO:Plot type: pipeline
2024-02-19 16:38:28,214:INFO:Visual Rendered Successfully
2024-02-19 16:38:28,382:INFO:plot_model() successfully completed......................................
2024-02-19 16:38:28,415:INFO:Initializing plot_model()
2024-02-19 16:38:28,415:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5189, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, system=True)
2024-02-19 16:38:28,423:INFO:Checking exceptions
2024-02-19 16:38:28,431:INFO:Preloading libraries
2024-02-19 16:38:28,455:INFO:Copying training dataset
2024-02-19 16:38:28,455:INFO:Plot type: parameter
2024-02-19 16:38:28,472:INFO:Visual Rendered Successfully
2024-02-19 16:38:28,624:INFO:plot_model() successfully completed......................................
2024-02-19 16:58:03,860:INFO:Initializing plot_model()
2024-02-19 16:58:03,860:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5189, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, system=True)
2024-02-19 16:58:03,865:INFO:Checking exceptions
2024-02-19 16:58:03,873:INFO:Preloading libraries
2024-02-19 16:58:03,898:INFO:Copying training dataset
2024-02-19 16:58:03,898:INFO:Plot type: feature_all
2024-02-19 16:58:04,012:WARNING:No coef_ found. Trying feature_importances_
2024-02-19 16:58:04,360:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\matplotlib\_tight_bbox.py:67: RuntimeWarning: divide by zero encountered in scalar divide
  fig.patch.set_bounds(x0 / w1, y0 / h1,

2024-02-19 16:58:04,362:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\matplotlib\_tight_bbox.py:68: RuntimeWarning: divide by zero encountered in scalar divide
  fig.bbox.width / w1, fig.bbox.height / h1)

2024-02-19 16:58:04,364:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\matplotlib\patches.py:737: RuntimeWarning: invalid value encountered in scalar add
  y1 = self.convert_yunits(self._y0 + self._height)

2024-02-19 16:58:04,369:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\matplotlib\transforms.py:2047: RuntimeWarning: invalid value encountered in scalar add
  self._mtx[1, 2] += ty

2024-02-19 16:58:04,473:INFO:Visual Rendered Successfully
2024-02-19 16:58:04,724:INFO:plot_model() successfully completed......................................
2024-02-19 16:58:08,151:INFO:Initializing plot_model()
2024-02-19 16:58:08,151:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5189, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BC9ABC0>, system=True)
2024-02-19 16:58:08,151:INFO:Checking exceptions
2024-02-19 16:58:08,167:INFO:Preloading libraries
2024-02-19 16:58:08,191:INFO:Copying training dataset
2024-02-19 16:58:08,191:INFO:Plot type: parameter
2024-02-19 16:58:08,207:INFO:Visual Rendered Successfully
2024-02-19 16:58:08,434:INFO:plot_model() successfully completed......................................
2024-02-19 17:04:53,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-19 17:04:53,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-19 17:04:53,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-19 17:04:53,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-19 17:04:57,612:INFO:PyCaret ClassificationExperiment
2024-02-19 17:04:57,612:INFO:Logging name: clf-default-name
2024-02-19 17:04:57,615:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-19 17:04:57,615:INFO:version 3.2.0
2024-02-19 17:04:57,615:INFO:Initializing setup()
2024-02-19 17:04:57,615:INFO:self.USI: ceb5
2024-02-19 17:04:57,615:INFO:self._variable_keys: {'idx', 'exp_id', 'y_train', 'fold_groups_param', '_available_plots', 'target_param', 'logging_param', 'data', 'seed', 'fold_shuffle_param', 'exp_name_log', 'X_train', 'USI', 'log_plots_param', '_ml_usecase', 'fix_imbalance', 'X', 'X_test', 'memory', 'html_param', 'y', 'pipeline', 'is_multiclass', 'gpu_n_jobs_param', 'y_test', 'fold_generator', 'n_jobs_param', 'gpu_param'}
2024-02-19 17:04:57,615:INFO:Checking environment
2024-02-19 17:04:57,615:INFO:python_version: 3.10.13
2024-02-19 17:04:57,615:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2024-02-19 17:04:57,615:INFO:machine: AMD64
2024-02-19 17:04:57,615:INFO:platform: Windows-10-10.0.22621-SP0
2024-02-19 17:04:57,626:INFO:Memory: svmem(total=16952647680, available=4847964160, percent=71.4, used=12104683520, free=4847964160)
2024-02-19 17:04:57,626:INFO:Physical Core: 4
2024-02-19 17:04:57,626:INFO:Logical Core: 8
2024-02-19 17:04:57,626:INFO:Checking libraries
2024-02-19 17:04:57,627:INFO:System:
2024-02-19 17:04:57,627:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2024-02-19 17:04:57,627:INFO:executable: C:\Users\santh\anaconda3\envs\msds\python.exe
2024-02-19 17:04:57,627:INFO:   machine: Windows-10-10.0.22621-SP0
2024-02-19 17:04:57,627:INFO:PyCaret required dependencies:
2024-02-19 17:05:00,502:INFO:                 pip: 23.3.1
2024-02-19 17:05:00,502:INFO:          setuptools: 68.2.2
2024-02-19 17:05:00,502:INFO:             pycaret: 3.2.0
2024-02-19 17:05:00,502:INFO:             IPython: 8.20.0
2024-02-19 17:05:00,510:INFO:          ipywidgets: 8.0.4
2024-02-19 17:05:00,510:INFO:                tqdm: 4.65.0
2024-02-19 17:05:00,510:INFO:               numpy: 1.25.2
2024-02-19 17:05:00,510:INFO:              pandas: 1.5.3
2024-02-19 17:05:00,510:INFO:              jinja2: 3.1.3
2024-02-19 17:05:00,510:INFO:               scipy: 1.10.1
2024-02-19 17:05:00,510:INFO:              joblib: 1.2.0
2024-02-19 17:05:00,510:INFO:             sklearn: 1.2.2
2024-02-19 17:05:00,510:INFO:                pyod: 1.1.3
2024-02-19 17:05:00,510:INFO:            imblearn: 0.11.0
2024-02-19 17:05:00,510:INFO:   category_encoders: 2.6.3
2024-02-19 17:05:00,510:INFO:            lightgbm: 4.3.0
2024-02-19 17:05:00,510:INFO:               numba: 0.59.0
2024-02-19 17:05:00,510:INFO:            requests: 2.31.0
2024-02-19 17:05:00,510:INFO:          matplotlib: 3.6.0
2024-02-19 17:05:00,510:INFO:          scikitplot: 0.3.7
2024-02-19 17:05:00,510:INFO:         yellowbrick: 1.5
2024-02-19 17:05:00,510:INFO:              plotly: 5.9.0
2024-02-19 17:05:00,510:INFO:    plotly-resampler: Not installed
2024-02-19 17:05:00,510:INFO:             kaleido: 0.2.1
2024-02-19 17:05:00,510:INFO:           schemdraw: 0.15
2024-02-19 17:05:00,510:INFO:         statsmodels: 0.14.0
2024-02-19 17:05:00,510:INFO:              sktime: 0.21.1
2024-02-19 17:05:00,510:INFO:               tbats: 1.1.3
2024-02-19 17:05:00,510:INFO:            pmdarima: 2.0.4
2024-02-19 17:05:00,510:INFO:              psutil: 5.9.0
2024-02-19 17:05:00,510:INFO:          markupsafe: 2.1.3
2024-02-19 17:05:00,510:INFO:             pickle5: Not installed
2024-02-19 17:05:00,510:INFO:         cloudpickle: 2.2.1
2024-02-19 17:05:00,510:INFO:         deprecation: 2.1.0
2024-02-19 17:05:00,510:INFO:              xxhash: 2.0.2
2024-02-19 17:05:00,510:INFO:           wurlitzer: Not installed
2024-02-19 17:05:00,510:INFO:PyCaret optional dependencies:
2024-02-19 17:05:00,583:INFO:                shap: Not installed
2024-02-19 17:05:00,583:INFO:           interpret: Not installed
2024-02-19 17:05:00,583:INFO:                umap: Not installed
2024-02-19 17:05:00,583:INFO:     ydata_profiling: Not installed
2024-02-19 17:05:00,583:INFO:  explainerdashboard: Not installed
2024-02-19 17:05:00,583:INFO:             autoviz: Not installed
2024-02-19 17:05:00,583:INFO:           fairlearn: Not installed
2024-02-19 17:05:00,583:INFO:          deepchecks: Not installed
2024-02-19 17:05:00,583:INFO:             xgboost: Not installed
2024-02-19 17:05:00,583:INFO:            catboost: Not installed
2024-02-19 17:05:00,583:INFO:              kmodes: Not installed
2024-02-19 17:05:00,583:INFO:             mlxtend: Not installed
2024-02-19 17:05:00,583:INFO:       statsforecast: Not installed
2024-02-19 17:05:00,583:INFO:        tune_sklearn: Not installed
2024-02-19 17:05:00,583:INFO:                 ray: Not installed
2024-02-19 17:05:00,583:INFO:            hyperopt: Not installed
2024-02-19 17:05:00,583:INFO:              optuna: Not installed
2024-02-19 17:05:00,583:INFO:               skopt: Not installed
2024-02-19 17:05:00,583:INFO:              mlflow: Not installed
2024-02-19 17:05:00,583:INFO:              gradio: Not installed
2024-02-19 17:05:00,583:INFO:             fastapi: Not installed
2024-02-19 17:05:00,583:INFO:             uvicorn: Not installed
2024-02-19 17:05:00,583:INFO:              m2cgen: Not installed
2024-02-19 17:05:00,583:INFO:           evidently: Not installed
2024-02-19 17:05:00,583:INFO:               fugue: Not installed
2024-02-19 17:05:00,583:INFO:           streamlit: Not installed
2024-02-19 17:05:00,583:INFO:             prophet: Not installed
2024-02-19 17:05:00,583:INFO:None
2024-02-19 17:05:00,583:INFO:Set up data.
2024-02-19 17:05:00,639:INFO:Set up folding strategy.
2024-02-19 17:05:00,639:INFO:Set up train/test split.
2024-02-19 17:05:00,696:INFO:Set up index.
2024-02-19 17:05:00,696:INFO:Assigning column types.
2024-02-19 17:05:00,714:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-19 17:05:00,900:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-19 17:05:00,908:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-19 17:05:01,037:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:05:01,037:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:05:01,200:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-19 17:05:01,208:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-19 17:05:01,305:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:05:01,305:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:05:01,305:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-19 17:05:01,467:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-19 17:05:01,564:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:05:01,564:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:05:01,727:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-19 17:05:01,840:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:05:01,840:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:05:01,844:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-19 17:05:02,094:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:05:02,100:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:05:02,338:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:05:02,338:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:05:02,344:INFO:Preparing preprocessing pipeline...
2024-02-19 17:05:02,352:INFO:Set up label encoding.
2024-02-19 17:05:02,352:INFO:Set up simple imputation.
2024-02-19 17:05:02,360:INFO:Set up encoding of ordinal features.
2024-02-19 17:05:02,368:INFO:Set up encoding of categorical features.
2024-02-19 17:05:02,911:INFO:Finished creating preprocessing pipeline.
2024-02-19 17:05:02,977:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\santh\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fi...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-02-19 17:05:02,978:INFO:Creating final display dataframe.
2024-02-19 17:05:04,172:INFO:Setup _display_container:                     Description             Value
0                    Session id              2809
1                        Target             Churn
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape         (7043, 8)
5        Transformed data shape        (7043, 13)
6   Transformed train set shape        (4930, 13)
7    Transformed test set shape        (2113, 13)
8              Ordinal features                 1
9              Numeric features                 3
10         Categorical features                 4
11     Rows with missing values              0.2%
12                   Preprocess              True
13              Imputation type            simple
14           Numeric imputation              mean
15       Categorical imputation              mode
16     Maximum one-hot encoding                25
17              Encoding method              None
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              ceb5
2024-02-19 17:05:04,446:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:05:04,446:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:05:04,664:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:05:04,664:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:05:04,672:INFO:setup() successfully completed in 7.07s...............
2024-02-19 17:05:04,688:INFO:Initializing compare_models()
2024-02-19 17:05:04,688:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9271B9780>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002B9271B9780>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-02-19 17:05:04,688:INFO:Checking exceptions
2024-02-19 17:05:04,704:INFO:Preparing display monitor
2024-02-19 17:05:04,794:INFO:Initializing Logistic Regression
2024-02-19 17:05:04,794:INFO:Total runtime is 0.0 minutes
2024-02-19 17:05:04,801:INFO:SubProcess create_model() called ==================================
2024-02-19 17:05:04,810:INFO:Initializing create_model()
2024-02-19 17:05:04,810:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9271B9780>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:05:04,810:INFO:Checking exceptions
2024-02-19 17:05:04,810:INFO:Importing libraries
2024-02-19 17:05:04,810:INFO:Copying training dataset
2024-02-19 17:05:04,818:INFO:Defining folds
2024-02-19 17:05:04,818:INFO:Declaring metric variables
2024-02-19 17:05:04,834:INFO:Importing untrained model
2024-02-19 17:05:04,843:INFO:Logistic Regression Imported successfully
2024-02-19 17:05:04,866:INFO:Starting cross validation
2024-02-19 17:05:04,874:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:05:17,334:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:17,367:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:17,391:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:17,551:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-02-19 17:05:17,737:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-02-19 17:05:17,737:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:17,761:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:17,785:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:17,785:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:17,810:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:17,810:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-02-19 17:05:17,834:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:17,922:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-02-19 17:05:17,954:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-02-19 17:05:17,962:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:17,986:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:18,010:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:18,034:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:18,060:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:18,067:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:18,067:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:18,076:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-02-19 17:05:18,123:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:18,155:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:18,163:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:18,171:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:18,187:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:18,203:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:18,211:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:18,255:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:18,276:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:18,308:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:19,276:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:19,293:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:19,300:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:19,310:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:19,444:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:19,461:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:19,477:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:19,493:INFO:Calculating mean and std
2024-02-19 17:05:19,501:INFO:Creating metrics dataframe
2024-02-19 17:05:19,517:INFO:Uploading results into container
2024-02-19 17:05:19,517:INFO:Uploading model into container now
2024-02-19 17:05:19,517:INFO:_master_model_container: 1
2024-02-19 17:05:19,517:INFO:_display_container: 2
2024-02-19 17:05:19,517:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2809, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-19 17:05:19,517:INFO:create_model() successfully completed......................................
2024-02-19 17:05:19,694:INFO:SubProcess create_model() end ==================================
2024-02-19 17:05:19,694:INFO:Creating metrics dataframe
2024-02-19 17:05:19,719:INFO:Initializing K Neighbors Classifier
2024-02-19 17:05:19,719:INFO:Total runtime is 0.24874412218729655 minutes
2024-02-19 17:05:19,734:INFO:SubProcess create_model() called ==================================
2024-02-19 17:05:19,735:INFO:Initializing create_model()
2024-02-19 17:05:19,735:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9271B9780>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:05:19,735:INFO:Checking exceptions
2024-02-19 17:05:19,735:INFO:Importing libraries
2024-02-19 17:05:19,735:INFO:Copying training dataset
2024-02-19 17:05:19,751:INFO:Defining folds
2024-02-19 17:05:19,751:INFO:Declaring metric variables
2024-02-19 17:05:19,759:INFO:Importing untrained model
2024-02-19 17:05:19,767:INFO:K Neighbors Classifier Imported successfully
2024-02-19 17:05:19,791:INFO:Starting cross validation
2024-02-19 17:05:19,791:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:05:20,695:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:20,719:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:20,726:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:20,730:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:20,749:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:20,749:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:20,752:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:20,760:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:20,768:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:20,768:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:20,768:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:20,784:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:20,793:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:20,793:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:20,801:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:20,801:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:20,801:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:20,810:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:20,817:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:20,833:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:20,833:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:20,859:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:20,866:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:21,407:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:21,423:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:21,423:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:21,431:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:21,439:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:21,460:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:21,487:INFO:Calculating mean and std
2024-02-19 17:05:21,487:INFO:Creating metrics dataframe
2024-02-19 17:05:21,495:INFO:Uploading results into container
2024-02-19 17:05:21,503:INFO:Uploading model into container now
2024-02-19 17:05:21,503:INFO:_master_model_container: 2
2024-02-19 17:05:21,503:INFO:_display_container: 2
2024-02-19 17:05:21,503:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-19 17:05:21,503:INFO:create_model() successfully completed......................................
2024-02-19 17:05:21,672:INFO:SubProcess create_model() end ==================================
2024-02-19 17:05:21,672:INFO:Creating metrics dataframe
2024-02-19 17:05:21,713:INFO:Initializing Naive Bayes
2024-02-19 17:05:21,713:INFO:Total runtime is 0.2819770336151123 minutes
2024-02-19 17:05:21,721:INFO:SubProcess create_model() called ==================================
2024-02-19 17:05:21,721:INFO:Initializing create_model()
2024-02-19 17:05:21,721:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9271B9780>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:05:21,721:INFO:Checking exceptions
2024-02-19 17:05:21,721:INFO:Importing libraries
2024-02-19 17:05:21,721:INFO:Copying training dataset
2024-02-19 17:05:21,737:INFO:Defining folds
2024-02-19 17:05:21,737:INFO:Declaring metric variables
2024-02-19 17:05:21,748:INFO:Importing untrained model
2024-02-19 17:05:21,753:INFO:Naive Bayes Imported successfully
2024-02-19 17:05:21,777:INFO:Starting cross validation
2024-02-19 17:05:21,785:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:05:22,532:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:22,543:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:22,556:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:22,561:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:22,564:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:22,581:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:22,581:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:22,589:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:22,593:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:22,597:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:22,610:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:22,613:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:22,613:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:22,621:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:22,629:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:22,637:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:22,637:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:22,643:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:22,653:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:22,661:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:22,664:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:22,678:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:23,137:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:23,145:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:23,153:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:23,170:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:23,178:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:23,186:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:23,210:INFO:Calculating mean and std
2024-02-19 17:05:23,218:INFO:Creating metrics dataframe
2024-02-19 17:05:23,226:INFO:Uploading results into container
2024-02-19 17:05:23,226:INFO:Uploading model into container now
2024-02-19 17:05:23,226:INFO:_master_model_container: 3
2024-02-19 17:05:23,226:INFO:_display_container: 2
2024-02-19 17:05:23,226:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-02-19 17:05:23,226:INFO:create_model() successfully completed......................................
2024-02-19 17:05:23,395:INFO:SubProcess create_model() end ==================================
2024-02-19 17:05:23,395:INFO:Creating metrics dataframe
2024-02-19 17:05:23,443:INFO:Initializing Decision Tree Classifier
2024-02-19 17:05:23,443:INFO:Total runtime is 0.3108232140541076 minutes
2024-02-19 17:05:23,451:INFO:SubProcess create_model() called ==================================
2024-02-19 17:05:23,451:INFO:Initializing create_model()
2024-02-19 17:05:23,451:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9271B9780>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:05:23,451:INFO:Checking exceptions
2024-02-19 17:05:23,460:INFO:Importing libraries
2024-02-19 17:05:23,460:INFO:Copying training dataset
2024-02-19 17:05:23,468:INFO:Defining folds
2024-02-19 17:05:23,468:INFO:Declaring metric variables
2024-02-19 17:05:23,482:INFO:Importing untrained model
2024-02-19 17:05:23,493:INFO:Decision Tree Classifier Imported successfully
2024-02-19 17:05:23,509:INFO:Starting cross validation
2024-02-19 17:05:23,517:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:05:24,277:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,289:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,296:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,296:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,296:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,296:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,296:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,304:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,304:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:24,312:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,312:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:24,312:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,320:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,320:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,320:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,329:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:24,337:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:24,337:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:24,337:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,345:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,345:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,345:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:24,353:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,361:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,364:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,377:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,394:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,394:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,394:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:24,401:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:24,409:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,414:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,717:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,734:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,750:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:24,765:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,793:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,807:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,815:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:24,815:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:24,848:INFO:Calculating mean and std
2024-02-19 17:05:24,848:INFO:Creating metrics dataframe
2024-02-19 17:05:24,865:INFO:Uploading results into container
2024-02-19 17:05:24,865:INFO:Uploading model into container now
2024-02-19 17:05:24,865:INFO:_master_model_container: 4
2024-02-19 17:05:24,865:INFO:_display_container: 2
2024-02-19 17:05:24,865:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2809, splitter='best')
2024-02-19 17:05:24,865:INFO:create_model() successfully completed......................................
2024-02-19 17:05:25,016:INFO:SubProcess create_model() end ==================================
2024-02-19 17:05:25,016:INFO:Creating metrics dataframe
2024-02-19 17:05:25,043:INFO:Initializing SVM - Linear Kernel
2024-02-19 17:05:25,043:INFO:Total runtime is 0.3374784429868062 minutes
2024-02-19 17:05:25,055:INFO:SubProcess create_model() called ==================================
2024-02-19 17:05:25,055:INFO:Initializing create_model()
2024-02-19 17:05:25,055:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9271B9780>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:05:25,055:INFO:Checking exceptions
2024-02-19 17:05:25,055:INFO:Importing libraries
2024-02-19 17:05:25,055:INFO:Copying training dataset
2024-02-19 17:05:25,065:INFO:Defining folds
2024-02-19 17:05:25,065:INFO:Declaring metric variables
2024-02-19 17:05:25,077:INFO:Importing untrained model
2024-02-19 17:05:25,095:INFO:SVM - Linear Kernel Imported successfully
2024-02-19 17:05:25,115:INFO:Starting cross validation
2024-02-19 17:05:25,115:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:05:25,882:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:05:25,896:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:25,922:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:05:25,922:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:25,929:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:25,929:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:25,955:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:25,955:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:05:25,956:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:05:25,957:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:05:25,967:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:25,968:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:25,970:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:25,976:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:25,985:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:25,993:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:25,998:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:25,998:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:05:26,004:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:05:26,004:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:26,010:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:26,010:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:26,010:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:26,018:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:26,018:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:26,031:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:05:26,035:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:26,043:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:26,051:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:26,051:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:26,061:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:26,063:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:26,542:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:05:26,542:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:26,550:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:05:26,559:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:26,559:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:26,583:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:26,583:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:26,599:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:26,624:INFO:Calculating mean and std
2024-02-19 17:05:26,631:INFO:Creating metrics dataframe
2024-02-19 17:05:26,639:INFO:Uploading results into container
2024-02-19 17:05:26,648:INFO:Uploading model into container now
2024-02-19 17:05:26,648:INFO:_master_model_container: 5
2024-02-19 17:05:26,648:INFO:_display_container: 2
2024-02-19 17:05:26,648:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2809, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-02-19 17:05:26,648:INFO:create_model() successfully completed......................................
2024-02-19 17:05:26,792:INFO:SubProcess create_model() end ==================================
2024-02-19 17:05:26,800:INFO:Creating metrics dataframe
2024-02-19 17:05:26,833:INFO:Initializing Ridge Classifier
2024-02-19 17:05:26,833:INFO:Total runtime is 0.3673138578732808 minutes
2024-02-19 17:05:26,849:INFO:SubProcess create_model() called ==================================
2024-02-19 17:05:26,849:INFO:Initializing create_model()
2024-02-19 17:05:26,849:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9271B9780>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:05:26,849:INFO:Checking exceptions
2024-02-19 17:05:26,849:INFO:Importing libraries
2024-02-19 17:05:26,849:INFO:Copying training dataset
2024-02-19 17:05:26,865:INFO:Defining folds
2024-02-19 17:05:26,867:INFO:Declaring metric variables
2024-02-19 17:05:26,879:INFO:Importing untrained model
2024-02-19 17:05:26,889:INFO:Ridge Classifier Imported successfully
2024-02-19 17:05:26,905:INFO:Starting cross validation
2024-02-19 17:05:26,914:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:05:27,656:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:05:27,656:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:05:27,656:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:05:27,667:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:27,667:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:27,672:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:27,672:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:05:27,680:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:05:27,680:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:27,688:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:27,694:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:27,694:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:27,696:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:27,704:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:27,704:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:27,704:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:27,704:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:05:27,709:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:27,712:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:27,712:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:27,712:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:27,712:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:27,712:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:27,720:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:05:27,729:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:27,729:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:27,729:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:27,729:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:05:27,737:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:27,742:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:27,743:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:27,753:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:27,755:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:27,764:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:27,767:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:27,769:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:27,769:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:27,785:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:27,793:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:28,246:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:05:28,246:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:05:28,254:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:28,254:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:28,270:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:28,270:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:28,278:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:28,278:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:28,286:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:28,286:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:28,310:INFO:Calculating mean and std
2024-02-19 17:05:28,310:INFO:Creating metrics dataframe
2024-02-19 17:05:28,326:INFO:Uploading results into container
2024-02-19 17:05:28,326:INFO:Uploading model into container now
2024-02-19 17:05:28,326:INFO:_master_model_container: 6
2024-02-19 17:05:28,326:INFO:_display_container: 2
2024-02-19 17:05:28,326:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2809, solver='auto',
                tol=0.0001)
2024-02-19 17:05:28,326:INFO:create_model() successfully completed......................................
2024-02-19 17:05:28,495:INFO:SubProcess create_model() end ==================================
2024-02-19 17:05:28,495:INFO:Creating metrics dataframe
2024-02-19 17:05:28,543:INFO:Initializing Random Forest Classifier
2024-02-19 17:05:28,543:INFO:Total runtime is 0.3958246231079101 minutes
2024-02-19 17:05:28,559:INFO:SubProcess create_model() called ==================================
2024-02-19 17:05:28,559:INFO:Initializing create_model()
2024-02-19 17:05:28,559:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9271B9780>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:05:28,559:INFO:Checking exceptions
2024-02-19 17:05:28,559:INFO:Importing libraries
2024-02-19 17:05:28,559:INFO:Copying training dataset
2024-02-19 17:05:28,575:INFO:Defining folds
2024-02-19 17:05:28,575:INFO:Declaring metric variables
2024-02-19 17:05:28,583:INFO:Importing untrained model
2024-02-19 17:05:28,600:INFO:Random Forest Classifier Imported successfully
2024-02-19 17:05:28,617:INFO:Starting cross validation
2024-02-19 17:05:28,625:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:05:30,868:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:30,917:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:30,929:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:30,929:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:30,947:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:30,953:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:30,960:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:30,967:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:30,974:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:30,983:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:30,993:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:30,994:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:30,998:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:31,010:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:31,015:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:31,023:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:31,084:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:31,104:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:31,120:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:31,128:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:31,217:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:31,243:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:31,249:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:31,257:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:31,395:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:31,403:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:31,411:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:31,419:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:31,419:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:31,427:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:31,427:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:31,435:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:32,563:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:32,587:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:32,587:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:32,595:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:32,603:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:32,603:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:32,620:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:32,628:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:32,652:INFO:Calculating mean and std
2024-02-19 17:05:32,660:INFO:Creating metrics dataframe
2024-02-19 17:05:32,676:INFO:Uploading results into container
2024-02-19 17:05:32,676:INFO:Uploading model into container now
2024-02-19 17:05:32,676:INFO:_master_model_container: 7
2024-02-19 17:05:32,676:INFO:_display_container: 2
2024-02-19 17:05:32,676:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2809, verbose=0, warm_start=False)
2024-02-19 17:05:32,676:INFO:create_model() successfully completed......................................
2024-02-19 17:05:32,845:INFO:SubProcess create_model() end ==================================
2024-02-19 17:05:32,845:INFO:Creating metrics dataframe
2024-02-19 17:05:32,885:INFO:Initializing Quadratic Discriminant Analysis
2024-02-19 17:05:32,885:INFO:Total runtime is 0.4681832631429036 minutes
2024-02-19 17:05:32,893:INFO:SubProcess create_model() called ==================================
2024-02-19 17:05:32,893:INFO:Initializing create_model()
2024-02-19 17:05:32,900:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9271B9780>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:05:32,900:INFO:Checking exceptions
2024-02-19 17:05:32,900:INFO:Importing libraries
2024-02-19 17:05:32,900:INFO:Copying training dataset
2024-02-19 17:05:32,910:INFO:Defining folds
2024-02-19 17:05:32,917:INFO:Declaring metric variables
2024-02-19 17:05:32,926:INFO:Importing untrained model
2024-02-19 17:05:32,934:INFO:Quadratic Discriminant Analysis Imported successfully
2024-02-19 17:05:32,959:INFO:Starting cross validation
2024-02-19 17:05:32,967:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:05:33,502:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-19 17:05:33,502:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-19 17:05:33,535:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-19 17:05:33,551:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-19 17:05:33,577:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-19 17:05:33,577:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-19 17:05:33,591:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-19 17:05:33,593:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-19 17:05:33,693:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:33,713:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:33,721:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:33,730:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:33,746:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:33,746:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:33,746:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:33,754:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:33,754:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:33,770:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:33,771:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:33,771:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:33,786:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:33,786:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:33,793:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:33,793:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:33,794:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:33,794:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:33,802:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:33,810:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:33,810:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:33,810:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:33,810:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:33,826:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:33,826:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:33,826:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:33,834:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:33,834:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:33,834:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:33,834:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:33,851:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:34,166:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-19 17:05:34,177:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-19 17:05:34,319:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:34,335:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:34,335:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:34,344:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:34,359:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:34,359:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:34,367:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:34,375:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:34,392:INFO:Calculating mean and std
2024-02-19 17:05:34,401:INFO:Creating metrics dataframe
2024-02-19 17:05:34,409:INFO:Uploading results into container
2024-02-19 17:05:34,409:INFO:Uploading model into container now
2024-02-19 17:05:34,409:INFO:_master_model_container: 8
2024-02-19 17:05:34,409:INFO:_display_container: 2
2024-02-19 17:05:34,416:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-02-19 17:05:34,416:INFO:create_model() successfully completed......................................
2024-02-19 17:05:34,587:INFO:SubProcess create_model() end ==================================
2024-02-19 17:05:34,587:INFO:Creating metrics dataframe
2024-02-19 17:05:34,627:INFO:Initializing Ada Boost Classifier
2024-02-19 17:05:34,627:INFO:Total runtime is 0.4972212751706441 minutes
2024-02-19 17:05:34,636:INFO:SubProcess create_model() called ==================================
2024-02-19 17:05:34,636:INFO:Initializing create_model()
2024-02-19 17:05:34,636:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9271B9780>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:05:34,636:INFO:Checking exceptions
2024-02-19 17:05:34,636:INFO:Importing libraries
2024-02-19 17:05:34,636:INFO:Copying training dataset
2024-02-19 17:05:34,651:INFO:Defining folds
2024-02-19 17:05:34,651:INFO:Declaring metric variables
2024-02-19 17:05:34,659:INFO:Importing untrained model
2024-02-19 17:05:34,675:INFO:Ada Boost Classifier Imported successfully
2024-02-19 17:05:34,700:INFO:Starting cross validation
2024-02-19 17:05:34,708:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:05:35,461:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:35,469:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:35,479:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:35,485:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:35,493:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:35,493:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:35,501:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:35,509:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:35,509:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:35,509:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:35,509:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:35,517:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:35,517:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:35,526:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:35,526:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:35,534:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:35,543:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:35,543:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:35,543:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:35,543:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:35,550:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:35,550:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:35,559:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:35,566:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:35,566:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:35,566:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:35,578:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:35,582:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:35,582:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:35,590:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:35,593:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:35,593:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:36,092:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:36,099:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:36,107:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:36,107:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:36,115:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:36,115:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:36,123:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:36,123:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:36,147:INFO:Calculating mean and std
2024-02-19 17:05:36,155:INFO:Creating metrics dataframe
2024-02-19 17:05:36,163:INFO:Uploading results into container
2024-02-19 17:05:36,163:INFO:Uploading model into container now
2024-02-19 17:05:36,163:INFO:_master_model_container: 9
2024-02-19 17:05:36,163:INFO:_display_container: 2
2024-02-19 17:05:36,171:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2809)
2024-02-19 17:05:36,171:INFO:create_model() successfully completed......................................
2024-02-19 17:05:36,342:INFO:SubProcess create_model() end ==================================
2024-02-19 17:05:36,342:INFO:Creating metrics dataframe
2024-02-19 17:05:36,381:INFO:Initializing Gradient Boosting Classifier
2024-02-19 17:05:36,381:INFO:Total runtime is 0.5264521201451619 minutes
2024-02-19 17:05:36,397:INFO:SubProcess create_model() called ==================================
2024-02-19 17:05:36,397:INFO:Initializing create_model()
2024-02-19 17:05:36,397:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9271B9780>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:05:36,397:INFO:Checking exceptions
2024-02-19 17:05:36,397:INFO:Importing libraries
2024-02-19 17:05:36,397:INFO:Copying training dataset
2024-02-19 17:05:36,413:INFO:Defining folds
2024-02-19 17:05:36,413:INFO:Declaring metric variables
2024-02-19 17:05:36,429:INFO:Importing untrained model
2024-02-19 17:05:36,437:INFO:Gradient Boosting Classifier Imported successfully
2024-02-19 17:05:36,461:INFO:Starting cross validation
2024-02-19 17:05:36,469:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:05:38,424:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:38,432:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:38,448:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:38,456:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:38,464:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:38,472:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:38,472:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:38,472:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:38,481:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:38,481:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:38,481:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:38,496:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:38,496:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:38,496:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:38,504:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:38,504:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:38,512:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:38,512:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:38,512:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:38,520:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:38,520:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:38,520:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:38,528:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:38,528:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:38,528:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:38,536:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:38,544:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:38,544:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:38,552:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:38,566:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:38,576:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:38,584:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:40,017:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:40,034:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:40,034:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:40,042:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:40,050:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:40,050:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:40,059:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:40,074:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:40,107:INFO:Calculating mean and std
2024-02-19 17:05:40,115:INFO:Creating metrics dataframe
2024-02-19 17:05:40,131:INFO:Uploading results into container
2024-02-19 17:05:40,131:INFO:Uploading model into container now
2024-02-19 17:05:40,131:INFO:_master_model_container: 10
2024-02-19 17:05:40,131:INFO:_display_container: 2
2024-02-19 17:05:40,140:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2809, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-19 17:05:40,140:INFO:create_model() successfully completed......................................
2024-02-19 17:05:40,309:INFO:SubProcess create_model() end ==================================
2024-02-19 17:05:40,309:INFO:Creating metrics dataframe
2024-02-19 17:05:40,359:INFO:Initializing Linear Discriminant Analysis
2024-02-19 17:05:40,359:INFO:Total runtime is 0.5927479743957519 minutes
2024-02-19 17:05:40,373:INFO:SubProcess create_model() called ==================================
2024-02-19 17:05:40,381:INFO:Initializing create_model()
2024-02-19 17:05:40,381:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9271B9780>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:05:40,381:INFO:Checking exceptions
2024-02-19 17:05:40,381:INFO:Importing libraries
2024-02-19 17:05:40,381:INFO:Copying training dataset
2024-02-19 17:05:40,405:INFO:Defining folds
2024-02-19 17:05:40,405:INFO:Declaring metric variables
2024-02-19 17:05:40,421:INFO:Importing untrained model
2024-02-19 17:05:40,438:INFO:Linear Discriminant Analysis Imported successfully
2024-02-19 17:05:40,462:INFO:Starting cross validation
2024-02-19 17:05:40,470:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:05:41,100:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,149:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,157:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,165:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:41,173:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,181:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,189:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:41,205:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,229:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,253:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,253:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,253:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,261:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:41,277:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,277:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,285:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,293:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:41,293:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:41,309:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,309:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,317:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,333:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,342:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:41,349:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,358:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,359:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,359:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:41,366:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,399:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,423:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,431:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:41,431:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,754:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,762:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,778:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,778:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,786:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:41,786:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:41,795:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,803:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:41,835:INFO:Calculating mean and std
2024-02-19 17:05:41,835:INFO:Creating metrics dataframe
2024-02-19 17:05:41,851:INFO:Uploading results into container
2024-02-19 17:05:41,851:INFO:Uploading model into container now
2024-02-19 17:05:41,851:INFO:_master_model_container: 11
2024-02-19 17:05:41,851:INFO:_display_container: 2
2024-02-19 17:05:41,859:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-02-19 17:05:41,859:INFO:create_model() successfully completed......................................
2024-02-19 17:05:42,012:INFO:SubProcess create_model() end ==================================
2024-02-19 17:05:42,012:INFO:Creating metrics dataframe
2024-02-19 17:05:42,052:INFO:Initializing Extra Trees Classifier
2024-02-19 17:05:42,060:INFO:Total runtime is 0.6211057345072428 minutes
2024-02-19 17:05:42,068:INFO:SubProcess create_model() called ==================================
2024-02-19 17:05:42,068:INFO:Initializing create_model()
2024-02-19 17:05:42,068:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9271B9780>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:05:42,068:INFO:Checking exceptions
2024-02-19 17:05:42,068:INFO:Importing libraries
2024-02-19 17:05:42,068:INFO:Copying training dataset
2024-02-19 17:05:42,076:INFO:Defining folds
2024-02-19 17:05:42,076:INFO:Declaring metric variables
2024-02-19 17:05:42,093:INFO:Importing untrained model
2024-02-19 17:05:42,101:INFO:Extra Trees Classifier Imported successfully
2024-02-19 17:05:42,134:INFO:Starting cross validation
2024-02-19 17:05:42,142:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:05:44,042:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:44,050:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:44,058:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:44,066:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:44,066:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:44,066:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:44,075:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:44,078:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:44,078:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:44,084:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:44,091:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:44,095:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:44,099:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:44,099:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:44,115:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:44,131:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:44,212:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:44,212:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:44,236:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:44,236:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:44,253:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:44,253:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:44,261:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:44,261:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:44,261:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:44,277:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:44,289:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:44,293:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:44,309:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:44,318:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:44,326:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:45,512:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:45,528:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:45,544:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:45,552:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:45,560:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:45,576:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:45,590:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:45,593:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:45,617:INFO:Calculating mean and std
2024-02-19 17:05:45,617:INFO:Creating metrics dataframe
2024-02-19 17:05:45,633:INFO:Uploading results into container
2024-02-19 17:05:45,633:INFO:Uploading model into container now
2024-02-19 17:05:45,633:INFO:_master_model_container: 12
2024-02-19 17:05:45,633:INFO:_display_container: 2
2024-02-19 17:05:45,641:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2809, verbose=0, warm_start=False)
2024-02-19 17:05:45,641:INFO:create_model() successfully completed......................................
2024-02-19 17:05:45,810:INFO:SubProcess create_model() end ==================================
2024-02-19 17:05:45,810:INFO:Creating metrics dataframe
2024-02-19 17:05:45,859:INFO:Initializing Light Gradient Boosting Machine
2024-02-19 17:05:45,859:INFO:Total runtime is 0.6844109177589417 minutes
2024-02-19 17:05:45,875:INFO:SubProcess create_model() called ==================================
2024-02-19 17:05:45,875:INFO:Initializing create_model()
2024-02-19 17:05:45,875:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9271B9780>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:05:45,875:INFO:Checking exceptions
2024-02-19 17:05:45,875:INFO:Importing libraries
2024-02-19 17:05:45,875:INFO:Copying training dataset
2024-02-19 17:05:45,892:INFO:Defining folds
2024-02-19 17:05:45,898:INFO:Declaring metric variables
2024-02-19 17:05:45,906:INFO:Importing untrained model
2024-02-19 17:05:45,922:INFO:Light Gradient Boosting Machine Imported successfully
2024-02-19 17:05:45,946:INFO:Starting cross validation
2024-02-19 17:05:45,946:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:05:47,369:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:47,393:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:47,393:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:47,401:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:47,417:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:47,417:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:47,425:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:47,425:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:47,433:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:47,433:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:47,442:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:47,450:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:47,458:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:47,459:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:47,482:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:47,492:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:47,498:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:47,498:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:47,509:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:47,514:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:47,749:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:47,773:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:47,781:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:47,797:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:47,805:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:47,829:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:47,845:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:47,853:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:48,038:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:48,054:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:48,070:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:48,078:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:48,383:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:48,399:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:48,399:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:48,415:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:48,425:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:48,425:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:48,431:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:48,439:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:48,471:INFO:Calculating mean and std
2024-02-19 17:05:48,479:INFO:Creating metrics dataframe
2024-02-19 17:05:48,495:INFO:Uploading results into container
2024-02-19 17:05:48,495:INFO:Uploading model into container now
2024-02-19 17:05:48,495:INFO:_master_model_container: 13
2024-02-19 17:05:48,495:INFO:_display_container: 2
2024-02-19 17:05:48,495:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2809, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-02-19 17:05:48,495:INFO:create_model() successfully completed......................................
2024-02-19 17:05:48,657:INFO:SubProcess create_model() end ==================================
2024-02-19 17:05:48,665:INFO:Creating metrics dataframe
2024-02-19 17:05:48,706:INFO:Initializing Dummy Classifier
2024-02-19 17:05:48,706:INFO:Total runtime is 0.7318692723910014 minutes
2024-02-19 17:05:48,714:INFO:SubProcess create_model() called ==================================
2024-02-19 17:05:48,714:INFO:Initializing create_model()
2024-02-19 17:05:48,722:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9271B9780>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:05:48,722:INFO:Checking exceptions
2024-02-19 17:05:48,722:INFO:Importing libraries
2024-02-19 17:05:48,722:INFO:Copying training dataset
2024-02-19 17:05:48,741:INFO:Defining folds
2024-02-19 17:05:48,741:INFO:Declaring metric variables
2024-02-19 17:05:48,746:INFO:Importing untrained model
2024-02-19 17:05:48,763:INFO:Dummy Classifier Imported successfully
2024-02-19 17:05:48,787:INFO:Starting cross validation
2024-02-19 17:05:48,793:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:05:49,519:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:49,527:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:49,535:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:49,543:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:49,543:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:49,559:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:49,559:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:49,559:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:49,559:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:49,567:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:49,567:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:49,567:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:49,575:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:49,575:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:49,583:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:49,583:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:49,583:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:49,592:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:49,594:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:49,594:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:49,600:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:49,600:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:49,609:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:49,616:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:49,616:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:49,625:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:49,625:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:49,632:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:49,632:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:49,640:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:49,642:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:49,648:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:50,086:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:50,108:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:50,108:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:50,116:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:50,125:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:50,125:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:50,132:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:05:50,140:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:05:50,164:INFO:Calculating mean and std
2024-02-19 17:05:50,164:INFO:Creating metrics dataframe
2024-02-19 17:05:50,180:INFO:Uploading results into container
2024-02-19 17:05:50,180:INFO:Uploading model into container now
2024-02-19 17:05:50,180:INFO:_master_model_container: 14
2024-02-19 17:05:50,180:INFO:_display_container: 2
2024-02-19 17:05:50,180:INFO:DummyClassifier(constant=None, random_state=2809, strategy='prior')
2024-02-19 17:05:50,180:INFO:create_model() successfully completed......................................
2024-02-19 17:05:50,359:INFO:SubProcess create_model() end ==================================
2024-02-19 17:05:50,359:INFO:Creating metrics dataframe
2024-02-19 17:05:50,448:INFO:Initializing create_model()
2024-02-19 17:05:50,448:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9271B9780>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:05:50,448:INFO:Checking exceptions
2024-02-19 17:05:50,448:INFO:Importing libraries
2024-02-19 17:05:50,448:INFO:Copying training dataset
2024-02-19 17:05:50,464:INFO:Defining folds
2024-02-19 17:05:50,464:INFO:Declaring metric variables
2024-02-19 17:05:50,464:INFO:Importing untrained model
2024-02-19 17:05:50,464:INFO:Declaring custom model
2024-02-19 17:05:50,472:INFO:K Neighbors Classifier Imported successfully
2024-02-19 17:05:50,472:INFO:Cross validation set to False
2024-02-19 17:05:50,472:INFO:Fitting Model
2024-02-19 17:05:50,779:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-19 17:05:50,787:INFO:create_model() successfully completed......................................
2024-02-19 17:05:51,055:INFO:_master_model_container: 14
2024-02-19 17:05:51,055:INFO:_display_container: 2
2024-02-19 17:05:51,055:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-19 17:05:51,055:INFO:compare_models() successfully completed......................................
2024-02-19 17:06:07,332:INFO:Initializing predict_model()
2024-02-19 17:06:07,334:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9271B9780>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B902DA3AC0>)
2024-02-19 17:06:07,334:INFO:Checking exceptions
2024-02-19 17:06:07,334:INFO:Preloading libraries
2024-02-19 17:06:07,334:INFO:Set up data.
2024-02-19 17:06:07,348:INFO:Set up index.
2024-02-19 17:06:07,817:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\utils\generic.py:586: UserWarning: Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 87, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_ranking.py", line 572, in roc_auc_score
    return _average_binary_score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_ranking.py", line 339, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\utils\generic.py", line 584, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 87, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_ranking.py", line 572, in roc_auc_score
    return _average_binary_score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_ranking.py", line 339, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(traceback.format_exc())

2024-02-19 17:06:07,831:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:06:07,833:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:06:07,833:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:06:07,841:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:06:07,841:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:06:07,849:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2024-02-19 17:06:07,849:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-02-19 17:06:16,698:INFO:Initializing save_model()
2024-02-19 17:06:16,698:INFO:save_model(model=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), model_name=knn, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\santh\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fi...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-02-19 17:06:16,698:INFO:Adding model into prep_pipe
2024-02-19 17:06:16,746:INFO:knn.pkl saved in current working directory
2024-02-19 17:06:16,811:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('trained_model',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2024-02-19 17:06:16,811:INFO:save_model() successfully completed......................................
2024-02-19 17:06:40,364:INFO:Initializing load_model()
2024-02-19 17:06:40,364:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2024-02-19 17:06:48,694:INFO:Initializing predict_model()
2024-02-19 17:06:48,694:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9271B9780>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B902DA3C70>)
2024-02-19 17:06:48,694:INFO:Checking exceptions
2024-02-19 17:06:48,694:INFO:Preloading libraries
2024-02-19 17:06:48,697:INFO:Set up data.
2024-02-19 17:06:48,713:INFO:Set up index.
2024-02-19 17:06:48,826:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\utils\generic.py:586: UserWarning: Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 87, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_ranking.py", line 572, in roc_auc_score
    return _average_binary_score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_ranking.py", line 339, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\utils\generic.py", line 584, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 87, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_ranking.py", line 572, in roc_auc_score
    return _average_binary_score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_ranking.py", line 339, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(traceback.format_exc())

2024-02-19 17:06:48,834:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:06:48,834:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:06:48,842:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:06:48,842:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:06:48,842:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:06:48,850:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2024-02-19 17:06:48,850:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-02-19 17:14:28,660:INFO:PyCaret ClassificationExperiment
2024-02-19 17:14:28,660:INFO:Logging name: clf-default-name
2024-02-19 17:14:28,660:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-19 17:14:28,660:INFO:version 3.2.0
2024-02-19 17:14:28,660:INFO:Initializing setup()
2024-02-19 17:14:28,660:INFO:self.USI: fec6
2024-02-19 17:14:28,660:INFO:self._variable_keys: {'idx', 'exp_id', 'y_train', 'fold_groups_param', '_available_plots', 'target_param', 'logging_param', 'data', 'seed', 'fold_shuffle_param', 'exp_name_log', 'X_train', 'USI', 'log_plots_param', '_ml_usecase', 'fix_imbalance', 'X', 'X_test', 'memory', 'html_param', 'y', 'pipeline', 'is_multiclass', 'gpu_n_jobs_param', 'y_test', 'fold_generator', 'n_jobs_param', 'gpu_param'}
2024-02-19 17:14:28,660:INFO:Checking environment
2024-02-19 17:14:28,660:INFO:python_version: 3.10.13
2024-02-19 17:14:28,660:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2024-02-19 17:14:28,660:INFO:machine: AMD64
2024-02-19 17:14:28,660:INFO:platform: Windows-10-10.0.22621-SP0
2024-02-19 17:14:28,669:INFO:Memory: svmem(total=16952647680, available=5396832256, percent=68.2, used=11555815424, free=5396832256)
2024-02-19 17:14:28,669:INFO:Physical Core: 4
2024-02-19 17:14:28,669:INFO:Logical Core: 8
2024-02-19 17:14:28,669:INFO:Checking libraries
2024-02-19 17:14:28,669:INFO:System:
2024-02-19 17:14:28,669:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2024-02-19 17:14:28,669:INFO:executable: C:\Users\santh\anaconda3\envs\msds\python.exe
2024-02-19 17:14:28,669:INFO:   machine: Windows-10-10.0.22621-SP0
2024-02-19 17:14:28,669:INFO:PyCaret required dependencies:
2024-02-19 17:14:28,669:INFO:                 pip: 23.3.1
2024-02-19 17:14:28,669:INFO:          setuptools: 68.2.2
2024-02-19 17:14:28,669:INFO:             pycaret: 3.2.0
2024-02-19 17:14:28,669:INFO:             IPython: 8.20.0
2024-02-19 17:14:28,669:INFO:          ipywidgets: 8.0.4
2024-02-19 17:14:28,669:INFO:                tqdm: 4.65.0
2024-02-19 17:14:28,669:INFO:               numpy: 1.25.2
2024-02-19 17:14:28,669:INFO:              pandas: 1.5.3
2024-02-19 17:14:28,669:INFO:              jinja2: 3.1.3
2024-02-19 17:14:28,669:INFO:               scipy: 1.10.1
2024-02-19 17:14:28,669:INFO:              joblib: 1.2.0
2024-02-19 17:14:28,669:INFO:             sklearn: 1.2.2
2024-02-19 17:14:28,669:INFO:                pyod: 1.1.3
2024-02-19 17:14:28,669:INFO:            imblearn: 0.11.0
2024-02-19 17:14:28,669:INFO:   category_encoders: 2.6.3
2024-02-19 17:14:28,669:INFO:            lightgbm: 4.3.0
2024-02-19 17:14:28,669:INFO:               numba: 0.59.0
2024-02-19 17:14:28,669:INFO:            requests: 2.31.0
2024-02-19 17:14:28,669:INFO:          matplotlib: 3.6.0
2024-02-19 17:14:28,669:INFO:          scikitplot: 0.3.7
2024-02-19 17:14:28,669:INFO:         yellowbrick: 1.5
2024-02-19 17:14:28,669:INFO:              plotly: 5.9.0
2024-02-19 17:14:28,669:INFO:    plotly-resampler: Not installed
2024-02-19 17:14:28,677:INFO:             kaleido: 0.2.1
2024-02-19 17:14:28,677:INFO:           schemdraw: 0.15
2024-02-19 17:14:28,677:INFO:         statsmodels: 0.14.0
2024-02-19 17:14:28,677:INFO:              sktime: 0.21.1
2024-02-19 17:14:28,677:INFO:               tbats: 1.1.3
2024-02-19 17:14:28,677:INFO:            pmdarima: 2.0.4
2024-02-19 17:14:28,677:INFO:              psutil: 5.9.0
2024-02-19 17:14:28,677:INFO:          markupsafe: 2.1.3
2024-02-19 17:14:28,677:INFO:             pickle5: Not installed
2024-02-19 17:14:28,677:INFO:         cloudpickle: 2.2.1
2024-02-19 17:14:28,677:INFO:         deprecation: 2.1.0
2024-02-19 17:14:28,677:INFO:              xxhash: 2.0.2
2024-02-19 17:14:28,677:INFO:           wurlitzer: Not installed
2024-02-19 17:14:28,677:INFO:PyCaret optional dependencies:
2024-02-19 17:14:28,677:INFO:                shap: Not installed
2024-02-19 17:14:28,677:INFO:           interpret: Not installed
2024-02-19 17:14:28,677:INFO:                umap: Not installed
2024-02-19 17:14:28,677:INFO:     ydata_profiling: Not installed
2024-02-19 17:14:28,677:INFO:  explainerdashboard: Not installed
2024-02-19 17:14:28,677:INFO:             autoviz: Not installed
2024-02-19 17:14:28,677:INFO:           fairlearn: Not installed
2024-02-19 17:14:28,677:INFO:          deepchecks: Not installed
2024-02-19 17:14:28,677:INFO:             xgboost: Not installed
2024-02-19 17:14:28,677:INFO:            catboost: Not installed
2024-02-19 17:14:28,677:INFO:              kmodes: Not installed
2024-02-19 17:14:28,677:INFO:             mlxtend: Not installed
2024-02-19 17:14:28,677:INFO:       statsforecast: Not installed
2024-02-19 17:14:28,677:INFO:        tune_sklearn: Not installed
2024-02-19 17:14:28,677:INFO:                 ray: Not installed
2024-02-19 17:14:28,677:INFO:            hyperopt: Not installed
2024-02-19 17:14:28,677:INFO:              optuna: Not installed
2024-02-19 17:14:28,677:INFO:               skopt: Not installed
2024-02-19 17:14:28,677:INFO:              mlflow: Not installed
2024-02-19 17:14:28,677:INFO:              gradio: Not installed
2024-02-19 17:14:28,677:INFO:             fastapi: Not installed
2024-02-19 17:14:28,677:INFO:             uvicorn: Not installed
2024-02-19 17:14:28,677:INFO:              m2cgen: Not installed
2024-02-19 17:14:28,677:INFO:           evidently: Not installed
2024-02-19 17:14:28,677:INFO:               fugue: Not installed
2024-02-19 17:14:28,677:INFO:           streamlit: Not installed
2024-02-19 17:14:28,677:INFO:             prophet: Not installed
2024-02-19 17:14:28,677:INFO:None
2024-02-19 17:14:28,677:INFO:Set up data.
2024-02-19 17:14:28,725:INFO:Set up folding strategy.
2024-02-19 17:14:28,725:INFO:Set up train/test split.
2024-02-19 17:14:28,765:INFO:Set up index.
2024-02-19 17:14:28,765:INFO:Assigning column types.
2024-02-19 17:14:28,773:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-19 17:14:28,926:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-19 17:14:28,934:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-19 17:14:29,055:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:14:29,055:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:14:29,241:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-19 17:14:29,249:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-19 17:14:29,361:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:14:29,361:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:14:29,361:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-19 17:14:29,557:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-19 17:14:29,678:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:14:29,686:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:14:29,914:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-19 17:14:30,069:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:14:30,070:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:14:30,070:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-19 17:14:30,394:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:14:30,394:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:14:30,725:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:14:30,733:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:14:30,733:INFO:Preparing preprocessing pipeline...
2024-02-19 17:14:30,741:INFO:Set up label encoding.
2024-02-19 17:14:30,741:INFO:Set up simple imputation.
2024-02-19 17:14:30,757:INFO:Set up encoding of ordinal features.
2024-02-19 17:14:30,757:INFO:Set up encoding of categorical features.
2024-02-19 17:14:31,376:INFO:Finished creating preprocessing pipeline.
2024-02-19 17:14:31,442:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\santh\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fi...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-02-19 17:14:31,442:INFO:Creating final display dataframe.
2024-02-19 17:14:32,667:INFO:Setup _display_container:                     Description             Value
0                    Session id              2687
1                        Target             Churn
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape         (7043, 8)
5        Transformed data shape        (7043, 13)
6   Transformed train set shape        (4930, 13)
7    Transformed test set shape        (2113, 13)
8              Ordinal features                 1
9              Numeric features                 3
10         Categorical features                 4
11     Rows with missing values              0.2%
12                   Preprocess              True
13              Imputation type            simple
14           Numeric imputation              mean
15       Categorical imputation              mode
16     Maximum one-hot encoding                25
17              Encoding method              None
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              fec6
2024-02-19 17:14:32,942:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:14:32,942:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:14:33,191:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:14:33,191:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:14:33,191:INFO:setup() successfully completed in 4.54s...............
2024-02-19 17:14:37,220:INFO:Initializing compare_models()
2024-02-19 17:14:37,220:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9136DBFA0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002B9136DBFA0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-02-19 17:14:37,220:INFO:Checking exceptions
2024-02-19 17:14:37,226:INFO:Preparing display monitor
2024-02-19 17:14:37,304:INFO:Initializing Logistic Regression
2024-02-19 17:14:37,304:INFO:Total runtime is 0.0 minutes
2024-02-19 17:14:37,312:INFO:SubProcess create_model() called ==================================
2024-02-19 17:14:37,312:INFO:Initializing create_model()
2024-02-19 17:14:37,320:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9136DBFA0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:14:37,320:INFO:Checking exceptions
2024-02-19 17:14:37,320:INFO:Importing libraries
2024-02-19 17:14:37,320:INFO:Copying training dataset
2024-02-19 17:14:37,336:INFO:Defining folds
2024-02-19 17:14:37,336:INFO:Declaring metric variables
2024-02-19 17:14:37,344:INFO:Importing untrained model
2024-02-19 17:14:37,360:INFO:Logistic Regression Imported successfully
2024-02-19 17:14:37,386:INFO:Starting cross validation
2024-02-19 17:14:37,386:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:14:49,612:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:49,644:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:49,677:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:49,736:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:49,759:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:49,776:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:14:49,786:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:49,857:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:49,873:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-02-19 17:14:49,881:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:49,898:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:50,104:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:50,127:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:50,127:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:50,138:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:50,138:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:14:50,152:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:50,152:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:50,167:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:50,168:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:50,175:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:14:50,187:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:50,338:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:50,354:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:50,370:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:50,777:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-02-19 17:14:50,939:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:50,963:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:50,973:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:14:50,980:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:51,531:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-02-19 17:14:51,581:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:51,597:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:51,605:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:14:51,613:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:51,685:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:51,702:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:51,721:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:51,742:INFO:Calculating mean and std
2024-02-19 17:14:51,751:INFO:Creating metrics dataframe
2024-02-19 17:14:51,766:INFO:Uploading results into container
2024-02-19 17:14:51,766:INFO:Uploading model into container now
2024-02-19 17:14:51,766:INFO:_master_model_container: 1
2024-02-19 17:14:51,766:INFO:_display_container: 2
2024-02-19 17:14:51,766:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2687, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-19 17:14:51,766:INFO:create_model() successfully completed......................................
2024-02-19 17:14:52,009:INFO:SubProcess create_model() end ==================================
2024-02-19 17:14:52,009:INFO:Creating metrics dataframe
2024-02-19 17:14:52,042:INFO:Initializing K Neighbors Classifier
2024-02-19 17:14:52,042:INFO:Total runtime is 0.24563050667444866 minutes
2024-02-19 17:14:52,058:INFO:SubProcess create_model() called ==================================
2024-02-19 17:14:52,058:INFO:Initializing create_model()
2024-02-19 17:14:52,058:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9136DBFA0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:14:52,058:INFO:Checking exceptions
2024-02-19 17:14:52,058:INFO:Importing libraries
2024-02-19 17:14:52,058:INFO:Copying training dataset
2024-02-19 17:14:52,074:INFO:Defining folds
2024-02-19 17:14:52,074:INFO:Declaring metric variables
2024-02-19 17:14:52,091:INFO:Importing untrained model
2024-02-19 17:14:52,107:INFO:K Neighbors Classifier Imported successfully
2024-02-19 17:14:52,123:INFO:Starting cross validation
2024-02-19 17:14:52,131:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:14:53,071:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,071:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,095:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,095:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,095:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,111:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,120:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,123:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,123:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,123:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,136:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,136:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,136:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,144:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,144:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,160:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,160:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,160:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,169:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,185:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,185:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,192:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,225:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,809:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,825:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,825:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,841:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,841:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,857:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:53,881:INFO:Calculating mean and std
2024-02-19 17:14:53,889:INFO:Creating metrics dataframe
2024-02-19 17:14:53,897:INFO:Uploading results into container
2024-02-19 17:14:53,897:INFO:Uploading model into container now
2024-02-19 17:14:53,897:INFO:_master_model_container: 2
2024-02-19 17:14:53,897:INFO:_display_container: 2
2024-02-19 17:14:53,905:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-19 17:14:53,905:INFO:create_model() successfully completed......................................
2024-02-19 17:14:54,124:INFO:SubProcess create_model() end ==================================
2024-02-19 17:14:54,124:INFO:Creating metrics dataframe
2024-02-19 17:14:54,157:INFO:Initializing Naive Bayes
2024-02-19 17:14:54,157:INFO:Total runtime is 0.2808773159980774 minutes
2024-02-19 17:14:54,173:INFO:SubProcess create_model() called ==================================
2024-02-19 17:14:54,173:INFO:Initializing create_model()
2024-02-19 17:14:54,173:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9136DBFA0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:14:54,173:INFO:Checking exceptions
2024-02-19 17:14:54,173:INFO:Importing libraries
2024-02-19 17:14:54,173:INFO:Copying training dataset
2024-02-19 17:14:54,189:INFO:Defining folds
2024-02-19 17:14:54,189:INFO:Declaring metric variables
2024-02-19 17:14:54,205:INFO:Importing untrained model
2024-02-19 17:14:54,213:INFO:Naive Bayes Imported successfully
2024-02-19 17:14:54,238:INFO:Starting cross validation
2024-02-19 17:14:54,246:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:14:55,018:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,034:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,035:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,052:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,052:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,058:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,058:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,069:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,075:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,078:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,078:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,078:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,091:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,091:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,099:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,102:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,107:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,116:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,126:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,126:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,126:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,146:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,152:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,173:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,642:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,642:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,650:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,658:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,666:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,674:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:55,698:INFO:Calculating mean and std
2024-02-19 17:14:55,706:INFO:Creating metrics dataframe
2024-02-19 17:14:55,714:INFO:Uploading results into container
2024-02-19 17:14:55,714:INFO:Uploading model into container now
2024-02-19 17:14:55,714:INFO:_master_model_container: 3
2024-02-19 17:14:55,714:INFO:_display_container: 2
2024-02-19 17:14:55,722:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-02-19 17:14:55,722:INFO:create_model() successfully completed......................................
2024-02-19 17:14:55,927:INFO:SubProcess create_model() end ==================================
2024-02-19 17:14:55,927:INFO:Creating metrics dataframe
2024-02-19 17:14:55,966:INFO:Initializing Decision Tree Classifier
2024-02-19 17:14:55,966:INFO:Total runtime is 0.31102161804835005 minutes
2024-02-19 17:14:55,985:INFO:SubProcess create_model() called ==================================
2024-02-19 17:14:55,985:INFO:Initializing create_model()
2024-02-19 17:14:55,985:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9136DBFA0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:14:55,985:INFO:Checking exceptions
2024-02-19 17:14:55,985:INFO:Importing libraries
2024-02-19 17:14:55,985:INFO:Copying training dataset
2024-02-19 17:14:56,002:INFO:Defining folds
2024-02-19 17:14:56,002:INFO:Declaring metric variables
2024-02-19 17:14:56,014:INFO:Importing untrained model
2024-02-19 17:14:56,022:INFO:Decision Tree Classifier Imported successfully
2024-02-19 17:14:56,038:INFO:Starting cross validation
2024-02-19 17:14:56,046:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:14:56,792:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:56,792:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:56,817:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:56,818:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:56,828:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:56,828:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:14:56,833:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:14:56,841:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:56,841:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:56,841:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:56,849:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:56,857:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:56,865:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:56,865:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:14:56,873:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:56,873:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:56,873:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:56,881:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:14:56,881:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:56,889:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:56,889:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:56,897:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:56,902:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:14:56,905:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:14:56,913:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:56,913:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:14:56,913:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:56,922:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:56,922:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:56,922:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:14:56,930:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:57,405:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:57,405:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:57,413:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:57,421:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:57,421:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:14:57,421:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:14:57,429:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:57,429:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:57,461:INFO:Calculating mean and std
2024-02-19 17:14:57,469:INFO:Creating metrics dataframe
2024-02-19 17:14:57,477:INFO:Uploading results into container
2024-02-19 17:14:57,477:INFO:Uploading model into container now
2024-02-19 17:14:57,477:INFO:_master_model_container: 4
2024-02-19 17:14:57,477:INFO:_display_container: 2
2024-02-19 17:14:57,477:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2687, splitter='best')
2024-02-19 17:14:57,485:INFO:create_model() successfully completed......................................
2024-02-19 17:14:57,687:INFO:SubProcess create_model() end ==================================
2024-02-19 17:14:57,687:INFO:Creating metrics dataframe
2024-02-19 17:14:57,719:INFO:Initializing SVM - Linear Kernel
2024-02-19 17:14:57,719:INFO:Total runtime is 0.3402396281560262 minutes
2024-02-19 17:14:57,743:INFO:SubProcess create_model() called ==================================
2024-02-19 17:14:57,743:INFO:Initializing create_model()
2024-02-19 17:14:57,743:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9136DBFA0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:14:57,743:INFO:Checking exceptions
2024-02-19 17:14:57,743:INFO:Importing libraries
2024-02-19 17:14:57,743:INFO:Copying training dataset
2024-02-19 17:14:57,760:INFO:Defining folds
2024-02-19 17:14:57,760:INFO:Declaring metric variables
2024-02-19 17:14:57,775:INFO:Importing untrained model
2024-02-19 17:14:57,786:INFO:SVM - Linear Kernel Imported successfully
2024-02-19 17:14:57,808:INFO:Starting cross validation
2024-02-19 17:14:57,816:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:14:58,631:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:14:58,642:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:58,658:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:58,658:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:14:58,667:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:14:58,668:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:58,675:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:58,677:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:58,683:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:14:58,683:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:14:58,691:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:14:58,691:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:58,691:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:14:58,691:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:58,691:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:58,699:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:58,699:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:58,707:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:58,715:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:58,715:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:58,715:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:58,723:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:58,723:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:58,739:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:58,739:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:58,747:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:58,755:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:58,763:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:58,787:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:14:58,795:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:58,819:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:58,843:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:59,302:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:14:59,310:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:59,318:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:14:59,326:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:59,332:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:59,342:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:59,342:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:59,358:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:14:59,383:INFO:Calculating mean and std
2024-02-19 17:14:59,391:INFO:Creating metrics dataframe
2024-02-19 17:14:59,407:INFO:Uploading results into container
2024-02-19 17:14:59,407:INFO:Uploading model into container now
2024-02-19 17:14:59,407:INFO:_master_model_container: 5
2024-02-19 17:14:59,407:INFO:_display_container: 2
2024-02-19 17:14:59,407:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2687, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-02-19 17:14:59,407:INFO:create_model() successfully completed......................................
2024-02-19 17:14:59,626:INFO:SubProcess create_model() end ==================================
2024-02-19 17:14:59,626:INFO:Creating metrics dataframe
2024-02-19 17:14:59,651:INFO:Initializing Ridge Classifier
2024-02-19 17:14:59,651:INFO:Total runtime is 0.3724494536717733 minutes
2024-02-19 17:14:59,668:INFO:SubProcess create_model() called ==================================
2024-02-19 17:14:59,668:INFO:Initializing create_model()
2024-02-19 17:14:59,668:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9136DBFA0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:14:59,668:INFO:Checking exceptions
2024-02-19 17:14:59,668:INFO:Importing libraries
2024-02-19 17:14:59,668:INFO:Copying training dataset
2024-02-19 17:14:59,682:INFO:Defining folds
2024-02-19 17:14:59,687:INFO:Declaring metric variables
2024-02-19 17:14:59,699:INFO:Importing untrained model
2024-02-19 17:14:59,707:INFO:Ridge Classifier Imported successfully
2024-02-19 17:14:59,737:INFO:Starting cross validation
2024-02-19 17:14:59,739:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:15:00,430:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:15:00,438:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:00,438:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:15:00,452:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:00,463:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:00,468:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:00,471:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:00,479:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:00,485:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:15:00,488:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:00,488:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:15:00,488:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:00,496:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:00,501:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:00,512:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:15:00,512:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:15:00,512:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:00,521:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:00,521:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:00,521:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:00,537:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:00,537:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:00,537:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:00,545:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:00,552:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:00,552:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:00,552:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:15:00,554:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:00,562:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:00,562:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:00,562:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:00,570:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:15:00,578:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:00,578:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:00,586:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:00,594:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:00,602:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:00,602:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:00,610:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:00,619:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:01,022:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:15:01,035:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:01,046:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:15:01,046:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:01,054:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:01,054:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:01,062:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:01,062:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:01,079:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:01,087:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:01,111:INFO:Calculating mean and std
2024-02-19 17:15:01,119:INFO:Creating metrics dataframe
2024-02-19 17:15:01,127:INFO:Uploading results into container
2024-02-19 17:15:01,127:INFO:Uploading model into container now
2024-02-19 17:15:01,127:INFO:_master_model_container: 6
2024-02-19 17:15:01,127:INFO:_display_container: 2
2024-02-19 17:15:01,127:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2687, solver='auto',
                tol=0.0001)
2024-02-19 17:15:01,127:INFO:create_model() successfully completed......................................
2024-02-19 17:15:01,304:INFO:SubProcess create_model() end ==================================
2024-02-19 17:15:01,304:INFO:Creating metrics dataframe
2024-02-19 17:15:01,336:INFO:Initializing Random Forest Classifier
2024-02-19 17:15:01,336:INFO:Total runtime is 0.4005341132481893 minutes
2024-02-19 17:15:01,352:INFO:SubProcess create_model() called ==================================
2024-02-19 17:15:01,353:INFO:Initializing create_model()
2024-02-19 17:15:01,353:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9136DBFA0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:15:01,353:INFO:Checking exceptions
2024-02-19 17:15:01,353:INFO:Importing libraries
2024-02-19 17:15:01,353:INFO:Copying training dataset
2024-02-19 17:15:01,361:INFO:Defining folds
2024-02-19 17:15:01,361:INFO:Declaring metric variables
2024-02-19 17:15:01,369:INFO:Importing untrained model
2024-02-19 17:15:01,387:INFO:Random Forest Classifier Imported successfully
2024-02-19 17:15:01,409:INFO:Starting cross validation
2024-02-19 17:15:01,409:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:15:03,606:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:03,637:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:03,648:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:03,653:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:03,670:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:03,678:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:03,703:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:03,718:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:03,739:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:03,746:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:03,754:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:03,764:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:03,772:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:03,772:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:03,772:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:03,786:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:03,787:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:03,790:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:03,794:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:03,986:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:03,991:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:03,991:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:03,999:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:03,999:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:04,007:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:04,015:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:04,015:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:04,031:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:04,035:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:04,040:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:04,040:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:05,018:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:05,025:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:05,033:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:05,041:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:05,041:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:05,049:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:05,049:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:05,057:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:05,081:INFO:Calculating mean and std
2024-02-19 17:15:05,089:INFO:Creating metrics dataframe
2024-02-19 17:15:05,105:INFO:Uploading results into container
2024-02-19 17:15:05,105:INFO:Uploading model into container now
2024-02-19 17:15:05,105:INFO:_master_model_container: 7
2024-02-19 17:15:05,105:INFO:_display_container: 2
2024-02-19 17:15:05,105:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2687, verbose=0, warm_start=False)
2024-02-19 17:15:05,105:INFO:create_model() successfully completed......................................
2024-02-19 17:15:05,284:INFO:SubProcess create_model() end ==================================
2024-02-19 17:15:05,292:INFO:Creating metrics dataframe
2024-02-19 17:15:05,325:INFO:Initializing Quadratic Discriminant Analysis
2024-02-19 17:15:05,325:INFO:Total runtime is 0.46700572172800703 minutes
2024-02-19 17:15:05,338:INFO:SubProcess create_model() called ==================================
2024-02-19 17:15:05,339:INFO:Initializing create_model()
2024-02-19 17:15:05,339:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9136DBFA0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:15:05,339:INFO:Checking exceptions
2024-02-19 17:15:05,339:INFO:Importing libraries
2024-02-19 17:15:05,339:INFO:Copying training dataset
2024-02-19 17:15:05,351:INFO:Defining folds
2024-02-19 17:15:05,351:INFO:Declaring metric variables
2024-02-19 17:15:05,358:INFO:Importing untrained model
2024-02-19 17:15:05,374:INFO:Quadratic Discriminant Analysis Imported successfully
2024-02-19 17:15:05,390:INFO:Starting cross validation
2024-02-19 17:15:05,398:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:15:05,939:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-19 17:15:05,964:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-19 17:15:05,964:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-19 17:15:05,972:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-19 17:15:05,980:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-19 17:15:06,004:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-19 17:15:06,020:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-19 17:15:06,020:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-19 17:15:06,157:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,182:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,182:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,182:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,190:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,190:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,198:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:06,206:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,206:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,206:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,214:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,214:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,214:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:06,222:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:06,222:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,222:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,222:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:06,230:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:06,230:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,230:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,230:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,230:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,240:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,246:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,246:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,254:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:06,262:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:06,270:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,270:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,270:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,278:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:06,286:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,609:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-19 17:15:06,618:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-19 17:15:06,762:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,770:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,779:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,787:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:06,787:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,795:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,795:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:06,803:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:06,827:INFO:Calculating mean and std
2024-02-19 17:15:06,827:INFO:Creating metrics dataframe
2024-02-19 17:15:06,843:INFO:Uploading results into container
2024-02-19 17:15:06,843:INFO:Uploading model into container now
2024-02-19 17:15:06,851:INFO:_master_model_container: 8
2024-02-19 17:15:06,851:INFO:_display_container: 2
2024-02-19 17:15:06,851:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-02-19 17:15:06,851:INFO:create_model() successfully completed......................................
2024-02-19 17:15:07,053:INFO:SubProcess create_model() end ==================================
2024-02-19 17:15:07,053:INFO:Creating metrics dataframe
2024-02-19 17:15:07,093:INFO:Initializing Ada Boost Classifier
2024-02-19 17:15:07,093:INFO:Total runtime is 0.4964804291725159 minutes
2024-02-19 17:15:07,109:INFO:SubProcess create_model() called ==================================
2024-02-19 17:15:07,109:INFO:Initializing create_model()
2024-02-19 17:15:07,109:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9136DBFA0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:15:07,109:INFO:Checking exceptions
2024-02-19 17:15:07,109:INFO:Importing libraries
2024-02-19 17:15:07,109:INFO:Copying training dataset
2024-02-19 17:15:07,118:INFO:Defining folds
2024-02-19 17:15:07,118:INFO:Declaring metric variables
2024-02-19 17:15:07,126:INFO:Importing untrained model
2024-02-19 17:15:07,142:INFO:Ada Boost Classifier Imported successfully
2024-02-19 17:15:07,166:INFO:Starting cross validation
2024-02-19 17:15:07,166:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:15:07,913:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:07,929:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:07,943:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:07,954:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:07,954:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:07,954:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:07,962:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:07,962:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:07,969:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:07,969:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:07,977:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:07,977:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:07,977:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:07,985:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:07,985:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:07,985:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:07,993:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:07,993:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:07,993:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:07,993:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:08,001:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:08,001:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:08,010:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:08,010:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:08,010:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:08,018:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:08,026:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:08,044:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:08,044:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:08,051:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:08,051:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:08,058:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:08,492:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:08,501:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:08,509:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:08,518:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:08,518:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:08,534:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:08,543:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:08,549:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:08,573:INFO:Calculating mean and std
2024-02-19 17:15:08,573:INFO:Creating metrics dataframe
2024-02-19 17:15:08,589:INFO:Uploading results into container
2024-02-19 17:15:08,589:INFO:Uploading model into container now
2024-02-19 17:15:08,589:INFO:_master_model_container: 9
2024-02-19 17:15:08,589:INFO:_display_container: 2
2024-02-19 17:15:08,597:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2687)
2024-02-19 17:15:08,597:INFO:create_model() successfully completed......................................
2024-02-19 17:15:08,815:INFO:SubProcess create_model() end ==================================
2024-02-19 17:15:08,815:INFO:Creating metrics dataframe
2024-02-19 17:15:08,855:INFO:Initializing Gradient Boosting Classifier
2024-02-19 17:15:08,855:INFO:Total runtime is 0.5258451302846273 minutes
2024-02-19 17:15:08,871:INFO:SubProcess create_model() called ==================================
2024-02-19 17:15:08,871:INFO:Initializing create_model()
2024-02-19 17:15:08,871:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9136DBFA0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:15:08,871:INFO:Checking exceptions
2024-02-19 17:15:08,871:INFO:Importing libraries
2024-02-19 17:15:08,871:INFO:Copying training dataset
2024-02-19 17:15:08,887:INFO:Defining folds
2024-02-19 17:15:08,895:INFO:Declaring metric variables
2024-02-19 17:15:08,908:INFO:Importing untrained model
2024-02-19 17:15:08,921:INFO:Gradient Boosting Classifier Imported successfully
2024-02-19 17:15:08,944:INFO:Starting cross validation
2024-02-19 17:15:08,952:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:15:10,849:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:10,873:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:10,873:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:10,889:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:10,897:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:10,913:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:10,921:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:10,921:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:10,929:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:10,946:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:10,946:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:10,953:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:10,961:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:10,969:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:10,969:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:10,969:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:10,977:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:10,977:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:10,985:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:10,985:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:10,985:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:10,985:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:10,993:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:11,001:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:11,001:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:11,009:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:11,025:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:11,025:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:11,034:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:11,034:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:11,047:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:12,443:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:12,443:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:12,459:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:12,459:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:12,467:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:12,467:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:12,475:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:12,475:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:12,500:INFO:Calculating mean and std
2024-02-19 17:15:12,501:INFO:Creating metrics dataframe
2024-02-19 17:15:12,514:INFO:Uploading results into container
2024-02-19 17:15:12,516:INFO:Uploading model into container now
2024-02-19 17:15:12,517:INFO:_master_model_container: 10
2024-02-19 17:15:12,517:INFO:_display_container: 2
2024-02-19 17:15:12,517:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2687, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-19 17:15:12,517:INFO:create_model() successfully completed......................................
2024-02-19 17:15:12,718:INFO:SubProcess create_model() end ==================================
2024-02-19 17:15:12,726:INFO:Creating metrics dataframe
2024-02-19 17:15:12,775:INFO:Initializing Linear Discriminant Analysis
2024-02-19 17:15:12,775:INFO:Total runtime is 0.5911794741948446 minutes
2024-02-19 17:15:12,784:INFO:SubProcess create_model() called ==================================
2024-02-19 17:15:12,784:INFO:Initializing create_model()
2024-02-19 17:15:12,784:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9136DBFA0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:15:12,784:INFO:Checking exceptions
2024-02-19 17:15:12,784:INFO:Importing libraries
2024-02-19 17:15:12,784:INFO:Copying training dataset
2024-02-19 17:15:12,801:INFO:Defining folds
2024-02-19 17:15:12,801:INFO:Declaring metric variables
2024-02-19 17:15:12,817:INFO:Importing untrained model
2024-02-19 17:15:12,828:INFO:Linear Discriminant Analysis Imported successfully
2024-02-19 17:15:12,851:INFO:Starting cross validation
2024-02-19 17:15:12,851:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:15:13,542:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:13,567:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:13,582:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:13,590:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:13,590:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:13,598:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:13,606:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:13,606:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:13,614:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:13,614:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:13,622:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:13,630:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:13,630:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:13,630:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:13,638:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:13,638:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:13,638:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:13,646:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:13,652:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:13,654:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:13,654:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:13,654:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:13,662:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:13,662:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:13,670:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:13,670:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:13,686:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:13,694:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:13,694:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:13,710:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:13,718:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:14,114:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:14,130:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:14,139:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:14,146:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:14,146:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:14,162:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:14,170:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:14,178:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:14,202:INFO:Calculating mean and std
2024-02-19 17:15:14,202:INFO:Creating metrics dataframe
2024-02-19 17:15:14,218:INFO:Uploading results into container
2024-02-19 17:15:14,218:INFO:Uploading model into container now
2024-02-19 17:15:14,218:INFO:_master_model_container: 11
2024-02-19 17:15:14,218:INFO:_display_container: 2
2024-02-19 17:15:14,226:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-02-19 17:15:14,226:INFO:create_model() successfully completed......................................
2024-02-19 17:15:14,436:INFO:SubProcess create_model() end ==================================
2024-02-19 17:15:14,436:INFO:Creating metrics dataframe
2024-02-19 17:15:14,485:INFO:Initializing Extra Trees Classifier
2024-02-19 17:15:14,493:INFO:Total runtime is 0.6198191642761232 minutes
2024-02-19 17:15:14,506:INFO:SubProcess create_model() called ==================================
2024-02-19 17:15:14,506:INFO:Initializing create_model()
2024-02-19 17:15:14,506:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9136DBFA0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:15:14,506:INFO:Checking exceptions
2024-02-19 17:15:14,506:INFO:Importing libraries
2024-02-19 17:15:14,506:INFO:Copying training dataset
2024-02-19 17:15:14,518:INFO:Defining folds
2024-02-19 17:15:14,518:INFO:Declaring metric variables
2024-02-19 17:15:14,526:INFO:Importing untrained model
2024-02-19 17:15:14,534:INFO:Extra Trees Classifier Imported successfully
2024-02-19 17:15:14,559:INFO:Starting cross validation
2024-02-19 17:15:14,559:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:15:16,482:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:16,498:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:16,501:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:16,518:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:16,528:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:16,530:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:16,530:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:16,546:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:16,555:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:16,556:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:16,564:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:16,571:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:16,571:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:16,620:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:16,637:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:16,646:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:16,651:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:16,653:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:16,663:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:16,665:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:16,735:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:16,735:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:16,743:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:16,743:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:16,743:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:16,751:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:16,755:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:16,755:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:16,757:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:16,759:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:16,767:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:16,767:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:17,597:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:17,613:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:17,622:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:17,629:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:17,629:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:17,645:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:17,657:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:17,661:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:17,685:INFO:Calculating mean and std
2024-02-19 17:15:17,693:INFO:Creating metrics dataframe
2024-02-19 17:15:17,709:INFO:Uploading results into container
2024-02-19 17:15:17,709:INFO:Uploading model into container now
2024-02-19 17:15:17,709:INFO:_master_model_container: 12
2024-02-19 17:15:17,709:INFO:_display_container: 2
2024-02-19 17:15:17,709:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2687, verbose=0, warm_start=False)
2024-02-19 17:15:17,709:INFO:create_model() successfully completed......................................
2024-02-19 17:15:17,895:INFO:SubProcess create_model() end ==================================
2024-02-19 17:15:17,895:INFO:Creating metrics dataframe
2024-02-19 17:15:17,935:INFO:Initializing Light Gradient Boosting Machine
2024-02-19 17:15:17,935:INFO:Total runtime is 0.6771853963534038 minutes
2024-02-19 17:15:17,943:INFO:SubProcess create_model() called ==================================
2024-02-19 17:15:17,943:INFO:Initializing create_model()
2024-02-19 17:15:17,943:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9136DBFA0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:15:17,951:INFO:Checking exceptions
2024-02-19 17:15:17,951:INFO:Importing libraries
2024-02-19 17:15:17,951:INFO:Copying training dataset
2024-02-19 17:15:17,968:INFO:Defining folds
2024-02-19 17:15:17,968:INFO:Declaring metric variables
2024-02-19 17:15:17,975:INFO:Importing untrained model
2024-02-19 17:15:17,984:INFO:Light Gradient Boosting Machine Imported successfully
2024-02-19 17:15:18,008:INFO:Starting cross validation
2024-02-19 17:15:18,008:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:15:19,136:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:19,144:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:19,144:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:19,152:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:19,232:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:19,240:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:19,256:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:19,259:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:19,268:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:19,268:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:19,272:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:19,280:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:19,490:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:19,514:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:19,530:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:19,538:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:19,595:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:19,619:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:19,619:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:19,627:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:19,635:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:19,643:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:19,643:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:19,643:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:19,659:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:19,659:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:19,668:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:19,668:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:19,796:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:19,820:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:19,828:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:19,844:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:20,029:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:20,053:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:20,068:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:20,076:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:20,173:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:20,189:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:20,205:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:20,213:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:20,245:INFO:Calculating mean and std
2024-02-19 17:15:20,245:INFO:Creating metrics dataframe
2024-02-19 17:15:20,265:INFO:Uploading results into container
2024-02-19 17:15:20,265:INFO:Uploading model into container now
2024-02-19 17:15:20,270:INFO:_master_model_container: 13
2024-02-19 17:15:20,270:INFO:_display_container: 2
2024-02-19 17:15:20,270:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2687, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-02-19 17:15:20,270:INFO:create_model() successfully completed......................................
2024-02-19 17:15:20,474:INFO:SubProcess create_model() end ==================================
2024-02-19 17:15:20,474:INFO:Creating metrics dataframe
2024-02-19 17:15:20,514:INFO:Initializing Dummy Classifier
2024-02-19 17:15:20,514:INFO:Total runtime is 0.7201549132664999 minutes
2024-02-19 17:15:20,523:INFO:SubProcess create_model() called ==================================
2024-02-19 17:15:20,531:INFO:Initializing create_model()
2024-02-19 17:15:20,531:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9136DBFA0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B9291FFD60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:15:20,531:INFO:Checking exceptions
2024-02-19 17:15:20,531:INFO:Importing libraries
2024-02-19 17:15:20,531:INFO:Copying training dataset
2024-02-19 17:15:20,538:INFO:Defining folds
2024-02-19 17:15:20,538:INFO:Declaring metric variables
2024-02-19 17:15:20,555:INFO:Importing untrained model
2024-02-19 17:15:20,563:INFO:Dummy Classifier Imported successfully
2024-02-19 17:15:20,579:INFO:Starting cross validation
2024-02-19 17:15:20,587:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:15:21,278:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,286:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,303:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,311:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,318:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:21,318:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,327:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,327:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:21,335:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,343:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,351:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,351:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:21,362:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,375:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,375:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,384:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:21,384:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,399:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,401:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:21,416:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,434:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,440:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,440:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,456:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,462:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,462:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,464:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:21,472:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:21,472:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:21,480:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,480:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,488:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,876:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,884:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,892:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,892:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:21,909:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,909:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,925:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:21,934:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:21,963:INFO:Calculating mean and std
2024-02-19 17:15:21,967:INFO:Creating metrics dataframe
2024-02-19 17:15:21,974:INFO:Uploading results into container
2024-02-19 17:15:21,982:INFO:Uploading model into container now
2024-02-19 17:15:21,982:INFO:_master_model_container: 14
2024-02-19 17:15:21,984:INFO:_display_container: 2
2024-02-19 17:15:21,984:INFO:DummyClassifier(constant=None, random_state=2687, strategy='prior')
2024-02-19 17:15:21,984:INFO:create_model() successfully completed......................................
2024-02-19 17:15:22,192:INFO:SubProcess create_model() end ==================================
2024-02-19 17:15:22,192:INFO:Creating metrics dataframe
2024-02-19 17:15:22,274:INFO:Initializing create_model()
2024-02-19 17:15:22,274:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9136DBFA0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:15:22,274:INFO:Checking exceptions
2024-02-19 17:15:22,282:INFO:Importing libraries
2024-02-19 17:15:22,284:INFO:Copying training dataset
2024-02-19 17:15:22,290:INFO:Defining folds
2024-02-19 17:15:22,290:INFO:Declaring metric variables
2024-02-19 17:15:22,290:INFO:Importing untrained model
2024-02-19 17:15:22,290:INFO:Declaring custom model
2024-02-19 17:15:22,298:INFO:K Neighbors Classifier Imported successfully
2024-02-19 17:15:22,298:INFO:Cross validation set to False
2024-02-19 17:15:22,298:INFO:Fitting Model
2024-02-19 17:15:22,654:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-19 17:15:22,654:INFO:create_model() successfully completed......................................
2024-02-19 17:15:22,980:INFO:_master_model_container: 14
2024-02-19 17:15:22,980:INFO:_display_container: 2
2024-02-19 17:15:22,980:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-19 17:15:22,980:INFO:compare_models() successfully completed......................................
2024-02-19 17:15:31,334:INFO:Initializing predict_model()
2024-02-19 17:15:31,334:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9136DBFA0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B92B24D870>)
2024-02-19 17:15:31,334:INFO:Checking exceptions
2024-02-19 17:15:31,334:INFO:Preloading libraries
2024-02-19 17:15:31,342:INFO:Set up data.
2024-02-19 17:15:31,358:INFO:Set up index.
2024-02-19 17:15:31,837:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\utils\generic.py:586: UserWarning: Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 87, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_ranking.py", line 572, in roc_auc_score
    return _average_binary_score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_ranking.py", line 339, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\utils\generic.py", line 584, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 87, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_ranking.py", line 572, in roc_auc_score
    return _average_binary_score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_ranking.py", line 339, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(traceback.format_exc())

2024-02-19 17:15:31,837:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:31,845:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:31,850:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:31,853:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:15:31,862:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:15:31,862:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2024-02-19 17:15:31,870:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-02-19 17:15:41,003:INFO:Initializing save_model()
2024-02-19 17:15:41,003:INFO:save_model(model=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), model_name=knn, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\santh\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fi...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-02-19 17:15:41,003:INFO:Adding model into prep_pipe
2024-02-19 17:15:41,043:INFO:knn.pkl saved in current working directory
2024-02-19 17:15:41,107:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('trained_model',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2024-02-19 17:15:41,107:INFO:save_model() successfully completed......................................
2024-02-19 17:16:00,652:INFO:Initializing load_model()
2024-02-19 17:16:00,652:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2024-02-19 17:16:11,589:INFO:Initializing predict_model()
2024-02-19 17:16:11,598:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9136DBFA0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B92B24F5B0>)
2024-02-19 17:16:11,598:INFO:Checking exceptions
2024-02-19 17:16:11,598:INFO:Preloading libraries
2024-02-19 17:16:11,598:INFO:Set up data.
2024-02-19 17:16:11,613:INFO:Set up index.
2024-02-19 17:16:11,750:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\utils\generic.py:586: UserWarning: Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 87, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_ranking.py", line 572, in roc_auc_score
    return _average_binary_score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_ranking.py", line 339, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\utils\generic.py", line 584, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 87, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_ranking.py", line 572, in roc_auc_score
    return _average_binary_score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_ranking.py", line 339, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(traceback.format_exc())

2024-02-19 17:16:11,750:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:16:11,759:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:16:11,762:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:16:11,767:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:16:11,767:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-19 17:16:11,767:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2024-02-19 17:16:11,775:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-02-19 17:16:57,606:INFO:Initializing load_model()
2024-02-19 17:16:57,606:INFO:load_model(model_name=svm, platform=None, authentication=None, verbose=True)
2024-02-19 17:17:51,611:INFO:Initializing load_model()
2024-02-19 17:17:51,611:INFO:load_model(model_name=svm, platform=None, authentication=None, verbose=True)
2024-02-19 17:18:35,209:INFO:Initializing load_model()
2024-02-19 17:18:35,209:INFO:load_model(model_name=svm, platform=None, authentication=None, verbose=True)
2024-02-19 17:18:50,403:INFO:Initializing load_model()
2024-02-19 17:18:50,403:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2024-02-19 17:19:46,306:INFO:Initializing load_model()
2024-02-19 17:19:46,306:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2024-02-19 17:20:18,060:INFO:Initializing load_model()
2024-02-19 17:20:18,060:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2024-02-19 17:22:41,346:INFO:Initializing load_model()
2024-02-19 17:22:41,346:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2024-02-19 17:26:30,195:INFO:Initializing load_model()
2024-02-19 17:26:30,195:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2024-02-19 17:28:58,223:INFO:Initializing load_model()
2024-02-19 17:28:58,223:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2024-02-19 17:29:09,812:INFO:Initializing load_model()
2024-02-19 17:29:09,812:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2024-02-19 17:31:12,686:INFO:Initializing load_model()
2024-02-19 17:31:12,686:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2024-02-19 17:31:12,694:INFO:Initializing predict_model()
2024-02-19 17:31:12,694:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9136DBFA0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B92BD7F9A0>)
2024-02-19 17:31:12,694:INFO:Checking exceptions
2024-02-19 17:31:12,694:INFO:Preloading libraries
2024-02-19 17:31:12,702:INFO:Set up data.
2024-02-19 17:31:12,740:INFO:Set up index.
2024-02-19 17:32:27,991:INFO:Initializing load_model()
2024-02-19 17:32:27,995:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2024-02-19 17:32:27,999:INFO:Initializing predict_model()
2024-02-19 17:32:27,999:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9136DBFA0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B92C9388B0>)
2024-02-19 17:32:27,999:INFO:Checking exceptions
2024-02-19 17:32:27,999:INFO:Preloading libraries
2024-02-19 17:32:27,999:INFO:Set up data.
2024-02-19 17:32:28,040:INFO:Set up index.
2024-02-19 17:33:01,762:INFO:Initializing load_model()
2024-02-19 17:33:01,762:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2024-02-19 17:33:01,771:INFO:Initializing predict_model()
2024-02-19 17:33:01,772:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B9136DBFA0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B92CA95D80>)
2024-02-19 17:33:01,772:INFO:Checking exceptions
2024-02-19 17:33:01,772:INFO:Preloading libraries
2024-02-19 17:33:01,778:INFO:Set up data.
2024-02-19 17:33:01,811:INFO:Set up index.
2024-02-19 17:36:05,431:INFO:PyCaret ClassificationExperiment
2024-02-19 17:36:05,431:INFO:Logging name: clf-default-name
2024-02-19 17:36:05,431:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-19 17:36:05,431:INFO:version 3.2.0
2024-02-19 17:36:05,438:INFO:Initializing setup()
2024-02-19 17:36:05,438:INFO:self.USI: 0a8b
2024-02-19 17:36:05,438:INFO:self._variable_keys: {'idx', 'exp_id', 'y_train', 'fold_groups_param', '_available_plots', 'target_param', 'logging_param', 'data', 'seed', 'fold_shuffle_param', 'exp_name_log', 'X_train', 'USI', 'log_plots_param', '_ml_usecase', 'fix_imbalance', 'X', 'X_test', 'memory', 'html_param', 'y', 'pipeline', 'is_multiclass', 'gpu_n_jobs_param', 'y_test', 'fold_generator', 'n_jobs_param', 'gpu_param'}
2024-02-19 17:36:05,438:INFO:Checking environment
2024-02-19 17:36:05,438:INFO:python_version: 3.10.13
2024-02-19 17:36:05,438:INFO:python_build: ('main', 'Sep 11 2023 13:24:38')
2024-02-19 17:36:05,438:INFO:machine: AMD64
2024-02-19 17:36:05,438:INFO:platform: Windows-10-10.0.22621-SP0
2024-02-19 17:36:05,447:INFO:Memory: svmem(total=16952647680, available=4974284800, percent=70.7, used=11978362880, free=4974284800)
2024-02-19 17:36:05,447:INFO:Physical Core: 4
2024-02-19 17:36:05,447:INFO:Logical Core: 8
2024-02-19 17:36:05,447:INFO:Checking libraries
2024-02-19 17:36:05,447:INFO:System:
2024-02-19 17:36:05,447:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:24:38) [MSC v.1916 64 bit (AMD64)]
2024-02-19 17:36:05,447:INFO:executable: C:\Users\santh\anaconda3\envs\msds\python.exe
2024-02-19 17:36:05,447:INFO:   machine: Windows-10-10.0.22621-SP0
2024-02-19 17:36:05,447:INFO:PyCaret required dependencies:
2024-02-19 17:36:05,447:INFO:                 pip: 23.3.1
2024-02-19 17:36:05,447:INFO:          setuptools: 68.2.2
2024-02-19 17:36:05,447:INFO:             pycaret: 3.2.0
2024-02-19 17:36:05,447:INFO:             IPython: 8.20.0
2024-02-19 17:36:05,447:INFO:          ipywidgets: 8.0.4
2024-02-19 17:36:05,447:INFO:                tqdm: 4.65.0
2024-02-19 17:36:05,447:INFO:               numpy: 1.25.2
2024-02-19 17:36:05,447:INFO:              pandas: 1.5.3
2024-02-19 17:36:05,447:INFO:              jinja2: 3.1.3
2024-02-19 17:36:05,447:INFO:               scipy: 1.10.1
2024-02-19 17:36:05,447:INFO:              joblib: 1.2.0
2024-02-19 17:36:05,447:INFO:             sklearn: 1.2.2
2024-02-19 17:36:05,447:INFO:                pyod: 1.1.3
2024-02-19 17:36:05,447:INFO:            imblearn: 0.11.0
2024-02-19 17:36:05,447:INFO:   category_encoders: 2.6.3
2024-02-19 17:36:05,447:INFO:            lightgbm: 4.3.0
2024-02-19 17:36:05,447:INFO:               numba: 0.59.0
2024-02-19 17:36:05,447:INFO:            requests: 2.31.0
2024-02-19 17:36:05,447:INFO:          matplotlib: 3.6.0
2024-02-19 17:36:05,447:INFO:          scikitplot: 0.3.7
2024-02-19 17:36:05,447:INFO:         yellowbrick: 1.5
2024-02-19 17:36:05,447:INFO:              plotly: 5.9.0
2024-02-19 17:36:05,447:INFO:    plotly-resampler: Not installed
2024-02-19 17:36:05,447:INFO:             kaleido: 0.2.1
2024-02-19 17:36:05,447:INFO:           schemdraw: 0.15
2024-02-19 17:36:05,447:INFO:         statsmodels: 0.14.0
2024-02-19 17:36:05,447:INFO:              sktime: 0.21.1
2024-02-19 17:36:05,447:INFO:               tbats: 1.1.3
2024-02-19 17:36:05,447:INFO:            pmdarima: 2.0.4
2024-02-19 17:36:05,447:INFO:              psutil: 5.9.0
2024-02-19 17:36:05,447:INFO:          markupsafe: 2.1.3
2024-02-19 17:36:05,447:INFO:             pickle5: Not installed
2024-02-19 17:36:05,447:INFO:         cloudpickle: 2.2.1
2024-02-19 17:36:05,447:INFO:         deprecation: 2.1.0
2024-02-19 17:36:05,447:INFO:              xxhash: 2.0.2
2024-02-19 17:36:05,447:INFO:           wurlitzer: Not installed
2024-02-19 17:36:05,447:INFO:PyCaret optional dependencies:
2024-02-19 17:36:05,447:INFO:                shap: Not installed
2024-02-19 17:36:05,447:INFO:           interpret: Not installed
2024-02-19 17:36:05,447:INFO:                umap: Not installed
2024-02-19 17:36:05,447:INFO:     ydata_profiling: Not installed
2024-02-19 17:36:05,454:INFO:  explainerdashboard: Not installed
2024-02-19 17:36:05,454:INFO:             autoviz: Not installed
2024-02-19 17:36:05,454:INFO:           fairlearn: Not installed
2024-02-19 17:36:05,454:INFO:          deepchecks: Not installed
2024-02-19 17:36:05,454:INFO:             xgboost: Not installed
2024-02-19 17:36:05,455:INFO:            catboost: Not installed
2024-02-19 17:36:05,455:INFO:              kmodes: Not installed
2024-02-19 17:36:05,455:INFO:             mlxtend: Not installed
2024-02-19 17:36:05,455:INFO:       statsforecast: Not installed
2024-02-19 17:36:05,455:INFO:        tune_sklearn: Not installed
2024-02-19 17:36:05,455:INFO:                 ray: Not installed
2024-02-19 17:36:05,455:INFO:            hyperopt: Not installed
2024-02-19 17:36:05,455:INFO:              optuna: Not installed
2024-02-19 17:36:05,455:INFO:               skopt: Not installed
2024-02-19 17:36:05,455:INFO:              mlflow: Not installed
2024-02-19 17:36:05,455:INFO:              gradio: Not installed
2024-02-19 17:36:05,455:INFO:             fastapi: Not installed
2024-02-19 17:36:05,455:INFO:             uvicorn: Not installed
2024-02-19 17:36:05,455:INFO:              m2cgen: Not installed
2024-02-19 17:36:05,455:INFO:           evidently: Not installed
2024-02-19 17:36:05,455:INFO:               fugue: Not installed
2024-02-19 17:36:05,455:INFO:           streamlit: Not installed
2024-02-19 17:36:05,455:INFO:             prophet: Not installed
2024-02-19 17:36:05,455:INFO:None
2024-02-19 17:36:05,455:INFO:Set up data.
2024-02-19 17:36:05,471:INFO:Set up folding strategy.
2024-02-19 17:36:05,471:INFO:Set up train/test split.
2024-02-19 17:36:05,480:INFO:Set up index.
2024-02-19 17:36:05,487:INFO:Assigning column types.
2024-02-19 17:36:05,487:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-19 17:36:05,640:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-19 17:36:05,648:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-19 17:36:05,738:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:36:05,738:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:36:05,876:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-19 17:36:05,884:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-19 17:36:05,981:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:36:05,981:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:36:05,981:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-19 17:36:06,111:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-19 17:36:06,191:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:36:06,191:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:36:06,336:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-19 17:36:06,417:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:36:06,417:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:36:06,417:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-19 17:36:06,638:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:36:06,638:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:36:06,826:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:36:06,826:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:36:06,834:INFO:Preparing preprocessing pipeline...
2024-02-19 17:36:06,834:INFO:Set up simple imputation.
2024-02-19 17:36:06,955:INFO:Finished creating preprocessing pipeline.
2024-02-19 17:36:06,971:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\santh\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-19 17:36:06,971:INFO:Creating final display dataframe.
2024-02-19 17:36:07,290:INFO:Setup _display_container:                     Description             Value
0                    Session id              5710
1                        Target             Churn
2                   Target type            Binary
3           Original data shape         (7043, 8)
4        Transformed data shape         (7043, 8)
5   Transformed train set shape         (4930, 8)
6    Transformed test set shape         (2113, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              0a8b
2024-02-19 17:36:07,550:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:36:07,550:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:36:07,803:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:36:07,811:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 17:36:07,811:INFO:setup() successfully completed in 2.39s...............
2024-02-19 17:36:09,916:INFO:Initializing compare_models()
2024-02-19 17:36:09,919:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B92CACA3E0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002B92CACA3E0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-02-19 17:36:09,919:INFO:Checking exceptions
2024-02-19 17:36:09,930:INFO:Preparing display monitor
2024-02-19 17:36:10,027:INFO:Initializing Logistic Regression
2024-02-19 17:36:10,027:INFO:Total runtime is 0.0 minutes
2024-02-19 17:36:10,035:INFO:SubProcess create_model() called ==================================
2024-02-19 17:36:10,038:INFO:Initializing create_model()
2024-02-19 17:36:10,038:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B92CACA3E0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B92BCB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:36:10,038:INFO:Checking exceptions
2024-02-19 17:36:10,038:INFO:Importing libraries
2024-02-19 17:36:10,038:INFO:Copying training dataset
2024-02-19 17:36:10,054:INFO:Defining folds
2024-02-19 17:36:10,054:INFO:Declaring metric variables
2024-02-19 17:36:10,063:INFO:Importing untrained model
2024-02-19 17:36:10,078:INFO:Logistic Regression Imported successfully
2024-02-19 17:36:10,100:INFO:Starting cross validation
2024-02-19 17:36:10,100:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:36:19,389:INFO:Calculating mean and std
2024-02-19 17:36:19,389:INFO:Creating metrics dataframe
2024-02-19 17:36:19,405:INFO:Uploading results into container
2024-02-19 17:36:19,405:INFO:Uploading model into container now
2024-02-19 17:36:19,413:INFO:_master_model_container: 1
2024-02-19 17:36:19,413:INFO:_display_container: 2
2024-02-19 17:36:19,413:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5710, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-19 17:36:19,413:INFO:create_model() successfully completed......................................
2024-02-19 17:36:19,762:INFO:SubProcess create_model() end ==================================
2024-02-19 17:36:19,762:INFO:Creating metrics dataframe
2024-02-19 17:36:19,802:INFO:Initializing K Neighbors Classifier
2024-02-19 17:36:19,802:INFO:Total runtime is 0.16291746695836384 minutes
2024-02-19 17:36:19,813:INFO:SubProcess create_model() called ==================================
2024-02-19 17:36:19,818:INFO:Initializing create_model()
2024-02-19 17:36:19,818:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B92CACA3E0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B92BCB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:36:19,820:INFO:Checking exceptions
2024-02-19 17:36:19,820:INFO:Importing libraries
2024-02-19 17:36:19,820:INFO:Copying training dataset
2024-02-19 17:36:19,836:INFO:Defining folds
2024-02-19 17:36:19,836:INFO:Declaring metric variables
2024-02-19 17:36:19,851:INFO:Importing untrained model
2024-02-19 17:36:19,859:INFO:K Neighbors Classifier Imported successfully
2024-02-19 17:36:19,892:INFO:Starting cross validation
2024-02-19 17:36:19,892:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:36:20,497:INFO:Calculating mean and std
2024-02-19 17:36:20,505:INFO:Creating metrics dataframe
2024-02-19 17:36:20,521:INFO:Uploading results into container
2024-02-19 17:36:20,521:INFO:Uploading model into container now
2024-02-19 17:36:20,521:INFO:_master_model_container: 2
2024-02-19 17:36:20,521:INFO:_display_container: 2
2024-02-19 17:36:20,530:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-19 17:36:20,530:INFO:create_model() successfully completed......................................
2024-02-19 17:36:20,771:INFO:SubProcess create_model() end ==================================
2024-02-19 17:36:20,771:INFO:Creating metrics dataframe
2024-02-19 17:36:20,796:INFO:Initializing Naive Bayes
2024-02-19 17:36:20,796:INFO:Total runtime is 0.17948912382125853 minutes
2024-02-19 17:36:20,805:INFO:SubProcess create_model() called ==================================
2024-02-19 17:36:20,805:INFO:Initializing create_model()
2024-02-19 17:36:20,805:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B92CACA3E0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B92BCB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:36:20,805:INFO:Checking exceptions
2024-02-19 17:36:20,805:INFO:Importing libraries
2024-02-19 17:36:20,811:INFO:Copying training dataset
2024-02-19 17:36:20,821:INFO:Defining folds
2024-02-19 17:36:20,821:INFO:Declaring metric variables
2024-02-19 17:36:20,833:INFO:Importing untrained model
2024-02-19 17:36:20,840:INFO:Naive Bayes Imported successfully
2024-02-19 17:36:20,863:INFO:Starting cross validation
2024-02-19 17:36:20,863:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:36:21,146:INFO:Calculating mean and std
2024-02-19 17:36:21,153:INFO:Creating metrics dataframe
2024-02-19 17:36:21,163:INFO:Uploading results into container
2024-02-19 17:36:21,163:INFO:Uploading model into container now
2024-02-19 17:36:21,163:INFO:_master_model_container: 3
2024-02-19 17:36:21,163:INFO:_display_container: 2
2024-02-19 17:36:21,170:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-02-19 17:36:21,170:INFO:create_model() successfully completed......................................
2024-02-19 17:36:21,413:INFO:SubProcess create_model() end ==================================
2024-02-19 17:36:21,413:INFO:Creating metrics dataframe
2024-02-19 17:36:21,444:INFO:Initializing Decision Tree Classifier
2024-02-19 17:36:21,444:INFO:Total runtime is 0.19027621348698934 minutes
2024-02-19 17:36:21,452:INFO:SubProcess create_model() called ==================================
2024-02-19 17:36:21,452:INFO:Initializing create_model()
2024-02-19 17:36:21,452:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B92CACA3E0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B92BCB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:36:21,452:INFO:Checking exceptions
2024-02-19 17:36:21,452:INFO:Importing libraries
2024-02-19 17:36:21,452:INFO:Copying training dataset
2024-02-19 17:36:21,468:INFO:Defining folds
2024-02-19 17:36:21,468:INFO:Declaring metric variables
2024-02-19 17:36:21,476:INFO:Importing untrained model
2024-02-19 17:36:21,487:INFO:Decision Tree Classifier Imported successfully
2024-02-19 17:36:21,508:INFO:Starting cross validation
2024-02-19 17:36:21,508:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:36:21,922:INFO:Calculating mean and std
2024-02-19 17:36:21,922:INFO:Creating metrics dataframe
2024-02-19 17:36:21,930:INFO:Uploading results into container
2024-02-19 17:36:21,938:INFO:Uploading model into container now
2024-02-19 17:36:21,938:INFO:_master_model_container: 4
2024-02-19 17:36:21,938:INFO:_display_container: 2
2024-02-19 17:36:21,938:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5710, splitter='best')
2024-02-19 17:36:21,938:INFO:create_model() successfully completed......................................
2024-02-19 17:36:22,172:INFO:SubProcess create_model() end ==================================
2024-02-19 17:36:22,172:INFO:Creating metrics dataframe
2024-02-19 17:36:22,196:INFO:Initializing SVM - Linear Kernel
2024-02-19 17:36:22,196:INFO:Total runtime is 0.202817702293396 minutes
2024-02-19 17:36:22,213:INFO:SubProcess create_model() called ==================================
2024-02-19 17:36:22,213:INFO:Initializing create_model()
2024-02-19 17:36:22,213:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B92CACA3E0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B92BCB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:36:22,213:INFO:Checking exceptions
2024-02-19 17:36:22,213:INFO:Importing libraries
2024-02-19 17:36:22,215:INFO:Copying training dataset
2024-02-19 17:36:22,220:INFO:Defining folds
2024-02-19 17:36:22,220:INFO:Declaring metric variables
2024-02-19 17:36:22,237:INFO:Importing untrained model
2024-02-19 17:36:22,253:INFO:SVM - Linear Kernel Imported successfully
2024-02-19 17:36:22,269:INFO:Starting cross validation
2024-02-19 17:36:22,269:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:36:22,495:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:36:22,499:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:36:22,508:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:36:22,512:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:36:22,519:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:36:22,529:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:36:22,536:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:36:22,567:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:36:22,688:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-19 17:36:22,713:INFO:Calculating mean and std
2024-02-19 17:36:22,721:INFO:Creating metrics dataframe
2024-02-19 17:36:22,730:INFO:Uploading results into container
2024-02-19 17:36:22,737:INFO:Uploading model into container now
2024-02-19 17:36:22,737:INFO:_master_model_container: 5
2024-02-19 17:36:22,737:INFO:_display_container: 2
2024-02-19 17:36:22,737:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5710, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-02-19 17:36:22,737:INFO:create_model() successfully completed......................................
2024-02-19 17:36:22,956:INFO:SubProcess create_model() end ==================================
2024-02-19 17:36:22,956:INFO:Creating metrics dataframe
2024-02-19 17:36:22,989:INFO:Initializing Ridge Classifier
2024-02-19 17:36:22,990:INFO:Total runtime is 0.21604886452356975 minutes
2024-02-19 17:36:22,997:INFO:SubProcess create_model() called ==================================
2024-02-19 17:36:22,997:INFO:Initializing create_model()
2024-02-19 17:36:22,997:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B92CACA3E0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B92BCB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:36:22,997:INFO:Checking exceptions
2024-02-19 17:36:22,997:INFO:Importing libraries
2024-02-19 17:36:22,997:INFO:Copying training dataset
2024-02-19 17:36:23,005:INFO:Defining folds
2024-02-19 17:36:23,005:INFO:Declaring metric variables
2024-02-19 17:36:23,021:INFO:Importing untrained model
2024-02-19 17:36:23,029:INFO:Ridge Classifier Imported successfully
2024-02-19 17:36:23,046:INFO:Starting cross validation
2024-02-19 17:36:23,046:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:36:23,135:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.46122e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 17:36:23,143:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.46231e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 17:36:23,163:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:36:23,163:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.50638e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 17:36:23,168:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:36:23,176:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.43303e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 17:36:23,193:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.41213e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 17:36:23,193:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.47655e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 17:36:23,201:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.50481e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 17:36:23,201:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:36:23,213:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:36:23,217:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:36:23,220:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.48337e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 17:36:23,220:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:36:23,225:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:36:23,249:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:36:23,265:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.46232e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 17:36:23,273:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.46208e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-02-19 17:36:23,290:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:36:23,290:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-19 17:36:23,322:INFO:Calculating mean and std
2024-02-19 17:36:23,322:INFO:Creating metrics dataframe
2024-02-19 17:36:23,338:INFO:Uploading results into container
2024-02-19 17:36:23,338:INFO:Uploading model into container now
2024-02-19 17:36:23,338:INFO:_master_model_container: 6
2024-02-19 17:36:23,346:INFO:_display_container: 2
2024-02-19 17:36:23,346:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5710, solver='auto',
                tol=0.0001)
2024-02-19 17:36:23,346:INFO:create_model() successfully completed......................................
2024-02-19 17:36:23,630:INFO:SubProcess create_model() end ==================================
2024-02-19 17:36:23,630:INFO:Creating metrics dataframe
2024-02-19 17:36:23,663:INFO:Initializing Random Forest Classifier
2024-02-19 17:36:23,663:INFO:Total runtime is 0.22725909948349 minutes
2024-02-19 17:36:23,677:INFO:SubProcess create_model() called ==================================
2024-02-19 17:36:23,678:INFO:Initializing create_model()
2024-02-19 17:36:23,678:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B92CACA3E0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B92BCB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:36:23,678:INFO:Checking exceptions
2024-02-19 17:36:23,678:INFO:Importing libraries
2024-02-19 17:36:23,678:INFO:Copying training dataset
2024-02-19 17:36:23,695:INFO:Defining folds
2024-02-19 17:36:23,696:INFO:Declaring metric variables
2024-02-19 17:36:23,705:INFO:Importing untrained model
2024-02-19 17:36:23,713:INFO:Random Forest Classifier Imported successfully
2024-02-19 17:36:23,736:INFO:Starting cross validation
2024-02-19 17:36:23,736:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:36:28,657:INFO:Calculating mean and std
2024-02-19 17:36:28,657:INFO:Creating metrics dataframe
2024-02-19 17:36:28,673:INFO:Uploading results into container
2024-02-19 17:36:28,673:INFO:Uploading model into container now
2024-02-19 17:36:28,673:INFO:_master_model_container: 7
2024-02-19 17:36:28,673:INFO:_display_container: 2
2024-02-19 17:36:28,681:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5710, verbose=0, warm_start=False)
2024-02-19 17:36:28,681:INFO:create_model() successfully completed......................................
2024-02-19 17:36:28,984:INFO:SubProcess create_model() end ==================================
2024-02-19 17:36:28,984:INFO:Creating metrics dataframe
2024-02-19 17:36:29,031:INFO:Initializing Quadratic Discriminant Analysis
2024-02-19 17:36:29,039:INFO:Total runtime is 0.31685853004455566 minutes
2024-02-19 17:36:29,055:INFO:SubProcess create_model() called ==================================
2024-02-19 17:36:29,055:INFO:Initializing create_model()
2024-02-19 17:36:29,055:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B92CACA3E0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B92BCB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:36:29,055:INFO:Checking exceptions
2024-02-19 17:36:29,055:INFO:Importing libraries
2024-02-19 17:36:29,055:INFO:Copying training dataset
2024-02-19 17:36:29,071:INFO:Defining folds
2024-02-19 17:36:29,080:INFO:Declaring metric variables
2024-02-19 17:36:29,088:INFO:Importing untrained model
2024-02-19 17:36:29,104:INFO:Quadratic Discriminant Analysis Imported successfully
2024-02-19 17:36:29,137:INFO:Starting cross validation
2024-02-19 17:36:29,137:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:36:29,451:INFO:Calculating mean and std
2024-02-19 17:36:29,459:INFO:Creating metrics dataframe
2024-02-19 17:36:29,467:INFO:Uploading results into container
2024-02-19 17:36:29,475:INFO:Uploading model into container now
2024-02-19 17:36:29,475:INFO:_master_model_container: 8
2024-02-19 17:36:29,475:INFO:_display_container: 2
2024-02-19 17:36:29,475:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-02-19 17:36:29,475:INFO:create_model() successfully completed......................................
2024-02-19 17:36:29,768:INFO:SubProcess create_model() end ==================================
2024-02-19 17:36:29,768:INFO:Creating metrics dataframe
2024-02-19 17:36:29,816:INFO:Initializing Ada Boost Classifier
2024-02-19 17:36:29,816:INFO:Total runtime is 0.3298179268836975 minutes
2024-02-19 17:36:29,833:INFO:SubProcess create_model() called ==================================
2024-02-19 17:36:29,833:INFO:Initializing create_model()
2024-02-19 17:36:29,833:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B92CACA3E0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B92BCB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:36:29,833:INFO:Checking exceptions
2024-02-19 17:36:29,841:INFO:Importing libraries
2024-02-19 17:36:29,841:INFO:Copying training dataset
2024-02-19 17:36:29,865:INFO:Defining folds
2024-02-19 17:36:29,865:INFO:Declaring metric variables
2024-02-19 17:36:29,875:INFO:Importing untrained model
2024-02-19 17:36:29,896:INFO:Ada Boost Classifier Imported successfully
2024-02-19 17:36:29,922:INFO:Starting cross validation
2024-02-19 17:36:29,922:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:36:32,070:INFO:Calculating mean and std
2024-02-19 17:36:32,079:INFO:Creating metrics dataframe
2024-02-19 17:36:32,087:INFO:Uploading results into container
2024-02-19 17:36:32,087:INFO:Uploading model into container now
2024-02-19 17:36:32,087:INFO:_master_model_container: 9
2024-02-19 17:36:32,087:INFO:_display_container: 2
2024-02-19 17:36:32,087:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=5710)
2024-02-19 17:36:32,095:INFO:create_model() successfully completed......................................
2024-02-19 17:36:32,370:INFO:SubProcess create_model() end ==================================
2024-02-19 17:36:32,370:INFO:Creating metrics dataframe
2024-02-19 17:36:32,413:INFO:Initializing Gradient Boosting Classifier
2024-02-19 17:36:32,413:INFO:Total runtime is 0.37310613393783565 minutes
2024-02-19 17:36:32,419:INFO:SubProcess create_model() called ==================================
2024-02-19 17:36:32,419:INFO:Initializing create_model()
2024-02-19 17:36:32,427:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B92CACA3E0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B92BCB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:36:32,427:INFO:Checking exceptions
2024-02-19 17:36:32,427:INFO:Importing libraries
2024-02-19 17:36:32,427:INFO:Copying training dataset
2024-02-19 17:36:32,435:INFO:Defining folds
2024-02-19 17:36:32,435:INFO:Declaring metric variables
2024-02-19 17:36:32,451:INFO:Importing untrained model
2024-02-19 17:36:32,463:INFO:Gradient Boosting Classifier Imported successfully
2024-02-19 17:36:32,476:INFO:Starting cross validation
2024-02-19 17:36:32,476:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:36:38,379:INFO:Calculating mean and std
2024-02-19 17:36:38,379:INFO:Creating metrics dataframe
2024-02-19 17:36:38,397:INFO:Uploading results into container
2024-02-19 17:36:38,397:INFO:Uploading model into container now
2024-02-19 17:36:38,404:INFO:_master_model_container: 10
2024-02-19 17:36:38,404:INFO:_display_container: 2
2024-02-19 17:36:38,404:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5710, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-19 17:36:38,404:INFO:create_model() successfully completed......................................
2024-02-19 17:36:38,629:INFO:SubProcess create_model() end ==================================
2024-02-19 17:36:38,629:INFO:Creating metrics dataframe
2024-02-19 17:36:38,662:INFO:Initializing Linear Discriminant Analysis
2024-02-19 17:36:38,670:INFO:Total runtime is 0.47737498680750523 minutes
2024-02-19 17:36:38,679:INFO:SubProcess create_model() called ==================================
2024-02-19 17:36:38,679:INFO:Initializing create_model()
2024-02-19 17:36:38,679:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B92CACA3E0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B92BCB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:36:38,679:INFO:Checking exceptions
2024-02-19 17:36:38,679:INFO:Importing libraries
2024-02-19 17:36:38,679:INFO:Copying training dataset
2024-02-19 17:36:38,695:INFO:Defining folds
2024-02-19 17:36:38,695:INFO:Declaring metric variables
2024-02-19 17:36:38,705:INFO:Importing untrained model
2024-02-19 17:36:38,719:INFO:Linear Discriminant Analysis Imported successfully
2024-02-19 17:36:38,735:INFO:Starting cross validation
2024-02-19 17:36:38,743:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:36:39,041:INFO:Calculating mean and std
2024-02-19 17:36:39,049:INFO:Creating metrics dataframe
2024-02-19 17:36:39,058:INFO:Uploading results into container
2024-02-19 17:36:39,065:INFO:Uploading model into container now
2024-02-19 17:36:39,065:INFO:_master_model_container: 11
2024-02-19 17:36:39,065:INFO:_display_container: 2
2024-02-19 17:36:39,065:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-02-19 17:36:39,065:INFO:create_model() successfully completed......................................
2024-02-19 17:36:39,330:INFO:SubProcess create_model() end ==================================
2024-02-19 17:36:39,330:INFO:Creating metrics dataframe
2024-02-19 17:36:39,374:INFO:Initializing Extra Trees Classifier
2024-02-19 17:36:39,374:INFO:Total runtime is 0.4891191403071085 minutes
2024-02-19 17:36:39,391:INFO:SubProcess create_model() called ==================================
2024-02-19 17:36:39,391:INFO:Initializing create_model()
2024-02-19 17:36:39,391:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B92CACA3E0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B92BCB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:36:39,391:INFO:Checking exceptions
2024-02-19 17:36:39,391:INFO:Importing libraries
2024-02-19 17:36:39,391:INFO:Copying training dataset
2024-02-19 17:36:39,407:INFO:Defining folds
2024-02-19 17:36:39,407:INFO:Declaring metric variables
2024-02-19 17:36:39,423:INFO:Importing untrained model
2024-02-19 17:36:39,431:INFO:Extra Trees Classifier Imported successfully
2024-02-19 17:36:39,455:INFO:Starting cross validation
2024-02-19 17:36:39,463:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:36:42,918:INFO:Calculating mean and std
2024-02-19 17:36:42,926:INFO:Creating metrics dataframe
2024-02-19 17:36:42,934:INFO:Uploading results into container
2024-02-19 17:36:42,942:INFO:Uploading model into container now
2024-02-19 17:36:42,942:INFO:_master_model_container: 12
2024-02-19 17:36:42,942:INFO:_display_container: 2
2024-02-19 17:36:42,942:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5710, verbose=0, warm_start=False)
2024-02-19 17:36:42,942:INFO:create_model() successfully completed......................................
2024-02-19 17:36:43,216:INFO:SubProcess create_model() end ==================================
2024-02-19 17:36:43,216:INFO:Creating metrics dataframe
2024-02-19 17:36:43,256:INFO:Initializing Light Gradient Boosting Machine
2024-02-19 17:36:43,256:INFO:Total runtime is 0.5538106203079223 minutes
2024-02-19 17:36:43,272:INFO:SubProcess create_model() called ==================================
2024-02-19 17:36:43,272:INFO:Initializing create_model()
2024-02-19 17:36:43,272:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B92CACA3E0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B92BCB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:36:43,272:INFO:Checking exceptions
2024-02-19 17:36:43,272:INFO:Importing libraries
2024-02-19 17:36:43,272:INFO:Copying training dataset
2024-02-19 17:36:43,288:INFO:Defining folds
2024-02-19 17:36:43,288:INFO:Declaring metric variables
2024-02-19 17:36:43,296:INFO:Importing untrained model
2024-02-19 17:36:43,314:INFO:Light Gradient Boosting Machine Imported successfully
2024-02-19 17:36:43,328:INFO:Starting cross validation
2024-02-19 17:36:43,336:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:36:46,991:INFO:Calculating mean and std
2024-02-19 17:36:46,999:INFO:Creating metrics dataframe
2024-02-19 17:36:47,013:INFO:Uploading results into container
2024-02-19 17:36:47,015:INFO:Uploading model into container now
2024-02-19 17:36:47,015:INFO:_master_model_container: 13
2024-02-19 17:36:47,015:INFO:_display_container: 2
2024-02-19 17:36:47,015:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5710, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-02-19 17:36:47,015:INFO:create_model() successfully completed......................................
2024-02-19 17:36:47,285:INFO:SubProcess create_model() end ==================================
2024-02-19 17:36:47,293:INFO:Creating metrics dataframe
2024-02-19 17:36:47,332:INFO:Initializing Dummy Classifier
2024-02-19 17:36:47,332:INFO:Total runtime is 0.6217545509338378 minutes
2024-02-19 17:36:47,348:INFO:SubProcess create_model() called ==================================
2024-02-19 17:36:47,348:INFO:Initializing create_model()
2024-02-19 17:36:47,348:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B92CACA3E0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B92BCB1420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:36:47,348:INFO:Checking exceptions
2024-02-19 17:36:47,348:INFO:Importing libraries
2024-02-19 17:36:47,348:INFO:Copying training dataset
2024-02-19 17:36:47,372:INFO:Defining folds
2024-02-19 17:36:47,372:INFO:Declaring metric variables
2024-02-19 17:36:47,383:INFO:Importing untrained model
2024-02-19 17:36:47,397:INFO:Dummy Classifier Imported successfully
2024-02-19 17:36:47,417:INFO:Starting cross validation
2024-02-19 17:36:47,422:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 17:36:47,527:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:36:47,535:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:36:47,562:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:36:47,583:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:36:47,591:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:36:47,607:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:36:47,623:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:36:47,631:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:36:47,639:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:36:47,655:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-19 17:36:47,671:INFO:Calculating mean and std
2024-02-19 17:36:47,671:INFO:Creating metrics dataframe
2024-02-19 17:36:47,687:INFO:Uploading results into container
2024-02-19 17:36:47,687:INFO:Uploading model into container now
2024-02-19 17:36:47,687:INFO:_master_model_container: 14
2024-02-19 17:36:47,687:INFO:_display_container: 2
2024-02-19 17:36:47,695:INFO:DummyClassifier(constant=None, random_state=5710, strategy='prior')
2024-02-19 17:36:47,696:INFO:create_model() successfully completed......................................
2024-02-19 17:36:47,979:INFO:SubProcess create_model() end ==================================
2024-02-19 17:36:47,979:INFO:Creating metrics dataframe
2024-02-19 17:36:48,052:INFO:Initializing create_model()
2024-02-19 17:36:48,052:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B92CACA3E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5710, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 17:36:48,052:INFO:Checking exceptions
2024-02-19 17:36:48,052:INFO:Importing libraries
2024-02-19 17:36:48,052:INFO:Copying training dataset
2024-02-19 17:36:48,068:INFO:Defining folds
2024-02-19 17:36:48,068:INFO:Declaring metric variables
2024-02-19 17:36:48,068:INFO:Importing untrained model
2024-02-19 17:36:48,068:INFO:Declaring custom model
2024-02-19 17:36:48,068:INFO:Logistic Regression Imported successfully
2024-02-19 17:36:48,068:INFO:Cross validation set to False
2024-02-19 17:36:48,068:INFO:Fitting Model
2024-02-19 17:36:48,286:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5710, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-19 17:36:48,286:INFO:create_model() successfully completed......................................
2024-02-19 17:36:48,645:INFO:_master_model_container: 14
2024-02-19 17:36:48,645:INFO:_display_container: 2
2024-02-19 17:36:48,645:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5710, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-19 17:36:48,645:INFO:compare_models() successfully completed......................................
2024-02-19 17:36:56,989:INFO:Initializing predict_model()
2024-02-19 17:36:56,989:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B92CACA3E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5710, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B92CBC1EA0>)
2024-02-19 17:36:56,989:INFO:Checking exceptions
2024-02-19 17:36:56,989:INFO:Preloading libraries
2024-02-19 17:36:56,996:INFO:Set up data.
2024-02-19 17:36:57,013:INFO:Set up index.
2024-02-19 17:36:57,078:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\utils\generic.py:586: UserWarning: Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 87, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_ranking.py", line 572, in roc_auc_score
    return _average_binary_score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_ranking.py", line 339, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\utils\generic.py", line 584, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 87, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_ranking.py", line 572, in roc_auc_score
    return _average_binary_score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_ranking.py", line 339, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(traceback.format_exc())

2024-02-19 17:36:57,095:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-02-19 17:36:59,669:INFO:Initializing save_model()
2024-02-19 17:36:59,669:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5710, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=knn, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\santh\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-02-19 17:36:59,669:INFO:Adding model into prep_pipe
2024-02-19 17:36:59,685:INFO:knn.pkl saved in current working directory
2024-02-19 17:36:59,701:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5710,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-02-19 17:36:59,701:INFO:save_model() successfully completed......................................
2024-02-19 17:37:04,750:INFO:Initializing load_model()
2024-02-19 17:37:04,752:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2024-02-19 17:37:06,385:INFO:Initializing predict_model()
2024-02-19 17:37:06,385:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B92CACA3E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5710, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B92BC89000>)
2024-02-19 17:37:06,385:INFO:Checking exceptions
2024-02-19 17:37:06,393:INFO:Preloading libraries
2024-02-19 17:37:06,395:INFO:Set up data.
2024-02-19 17:37:06,419:INFO:Set up index.
2024-02-19 17:37:06,476:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\utils\generic.py:586: UserWarning: Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 87, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_ranking.py", line 572, in roc_auc_score
    return _average_binary_score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_ranking.py", line 339, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\utils\generic.py", line 584, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\pycaret\internal\metrics.py", line 87, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_ranking.py", line 572, in roc_auc_score
    return _average_binary_score(
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_ranking.py", line 339, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(traceback.format_exc())

2024-02-19 17:37:06,500:WARNING:C:\Users\santh\anaconda3\envs\msds\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-02-19 17:37:12,253:INFO:Initializing load_model()
2024-02-19 17:37:12,253:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2024-02-19 17:37:12,264:INFO:Initializing predict_model()
2024-02-19 17:37:12,264:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B92CACA3E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5710, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B92BC89000>)
2024-02-19 17:37:12,265:INFO:Checking exceptions
2024-02-19 17:37:12,265:INFO:Preloading libraries
2024-02-19 17:37:12,269:INFO:Set up data.
2024-02-19 17:37:12,302:INFO:Set up index.
2024-02-19 17:39:07,914:INFO:Initializing load_model()
2024-02-19 17:39:07,914:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2024-02-19 17:39:07,914:INFO:Initializing predict_model()
2024-02-19 17:39:07,922:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B92CACA3E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5710, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B930CE95A0>)
2024-02-19 17:39:07,923:INFO:Checking exceptions
2024-02-19 17:39:07,923:INFO:Preloading libraries
2024-02-19 17:39:07,923:INFO:Set up data.
2024-02-19 17:39:07,955:INFO:Set up index.
2024-02-19 18:27:41,201:INFO:Initializing load_model()
2024-02-19 18:27:41,201:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 18:27:41,289:INFO:Initializing predict_model()
2024-02-19 18:27:41,289:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A057BB2D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A057A70F70>)
2024-02-19 18:27:41,289:INFO:Checking exceptions
2024-02-19 18:27:41,289:INFO:Preloading libraries
2024-02-19 18:27:41,289:INFO:Set up data.
2024-02-19 18:27:41,305:INFO:Set up index.
2024-02-19 18:27:42,003:INFO:Initializing load_model()
2024-02-19 18:27:42,003:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 18:27:42,047:INFO:Initializing predict_model()
2024-02-19 18:27:42,047:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05A4B68C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A057A70F70>)
2024-02-19 18:27:42,047:INFO:Checking exceptions
2024-02-19 18:27:42,047:INFO:Preloading libraries
2024-02-19 18:27:42,047:INFO:Set up data.
2024-02-19 18:27:42,052:INFO:Set up index.
2024-02-19 18:27:42,281:INFO:Initializing load_model()
2024-02-19 18:27:42,282:INFO:load_model(model_name=pycaret_model, platform=None, authentication=None, verbose=True)
2024-02-19 18:27:42,305:INFO:Initializing predict_model()
2024-02-19 18:27:42,305:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A05BD33B20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'charge_per_tenure'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbos...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=5189, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A057A70F70>)
2024-02-19 18:27:42,305:INFO:Checking exceptions
2024-02-19 18:27:42,305:INFO:Preloading libraries
2024-02-19 18:27:42,305:INFO:Set up data.
2024-02-19 18:27:42,313:INFO:Set up index.
